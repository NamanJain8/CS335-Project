
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNNOTleftLORleftLANDleftORleftXORleftANDleftEQLNEQleftLSSGTRLEQGEQleftSHLSHRleftADDSUBleftMULQUOREMIDENT INT FLOAT IMAG CHAR STRING ADD SUB MUL QUO REM ADD_ASSIGN SUB_ASSIGN MUL_ASSIGN QUO_ASSIGN REM_ASSIGN AND OR XOR SHL SHR AND_NOT AND_ASSIGN OR_ASSIGN XOR_ASSIGN SHL_ASSIGN SHR_ASSIGN AND_NOT_ASSIGN LAND LOR ARROW INC DEC EQL LSS GTR ASSIGN NOT NEQ LEQ GEQ DEFINE ELLIPSIS LPAREN LBRACK LBRACE COMMA PERIOD RPAREN RBRACK RBRACE SEMICOLON COLON BREAK DEFAULT SELECT FUNC CASE INTERFACE DEFER GO STRUCT GOTO CHAN ELSE MAP FALLTHROUGH PACKAGE SWITCH CONST RANGE TYPE IF CONTINUE RETURN FOR IMPORT VARstart : SourceFileType : TypeName\n            | TypeLit\n            | LPAREN Type RPARENTypeName : TypeToken\n                | QualifiedIdentTypeToken : INT\n                 | FLOAT\n                 | IMAG\n                 | STRING\n                 | TYPE IDENTTypeLit : ArrayType\n               | StructType\n               | PointerTypeTypeOpt : Type\n               | epsilonArrayType : LBRACK ArrayLength RBRACK ElementType ArrayLength : Expression  ElementType : Type StructType : STRUCT LBRACE FieldDeclRep RBRACE FieldDeclRep : FieldDeclRep FieldDecl SEMICOLON\n                  | epsilon  FieldDecl : IdentifierList Type TagOpt TagOpt : Tag\n             | epsilon  Tag : STRING PointerType : MUL BaseTypeBaseType : TypeSignature : Parameters ResultOptResultOpt : Result\n                 | epsilonResult : Parameters\n              | TypeParameters : LPAREN ParameterListOpt RPARENParameterListOpt : ParametersList\n                             | epsilonParametersList : Type\n                      | IdentifierList Type\n                      | ParameterDeclCommaRepParameterDeclCommaRep : ParameterDeclCommaRep COMMA ParameterDecl\n                             | ParameterDecl COMMA ParameterDeclParameterDecl : IdentifierList Type\n                     | TypeBlock : LBRACE StatementList RBRACEStatementList : StatementRepStatementRep : StatementRep Statement SEMICOLON\n                    | epsilonDeclaration : ConstDecl\n                 | TypeDecl\n                 | VarDeclTopLevelDecl : Declaration\n                  | FunctionDeclConstDecl : CONST ConstSpec\n                 | CONST LPAREN ConstSpecRep RPARENConstSpecRep : ConstSpecRep ConstSpec SEMICOLON\n                    | epsilonConstSpec : IdentifierList TypeExprListOptTypeExprListOpt : TypeOpt ASSIGN ExpressionList\n                       | epsilonIdentifierList : IDENT IdentifierRepIdentifierRep : IdentifierRep COMMA IDENT\n                     | epsilonExpressionList : Expression ExpressionRepExpressionRep : ExpressionRep COMMA Expression\n                     | epsilonTypeDecl : TYPE TypeSpec\n                | TYPE LPAREN TypeSpecRep RPARENTypeSpecRep : TypeSpecRep TypeSpec SEMICOLON\n                   | epsilonTypeSpec : AliasDecl\n                | TypeDefAliasDecl : IDENT ASSIGN TypeTypeDef : IDENT TypeVarDecl : VAR VarSpec\n               | VAR LPAREN VarSpecRep RPARENVarSpecRep : VarSpecRep VarSpec SEMICOLON\n                  | epsilonVarSpec : IdentifierList Type ExpressionListOpt\n               | IdentifierList ASSIGN ExpressionListExpressionListOpt : ASSIGN ExpressionList\n                         | epsilon ShortVarDecl : IDENT DEFINE Expression FunctionDecl : FUNC FunctionName Function\n                    | FUNC FunctionName SignatureFunctionName : IDENTFunction : Signature FunctionBodyFunctionBody : BlockOperand : Literal\n               | OperandName\n               | LPAREN Expression RPARENLiteral : BasicLitBasicLit : INT\n                | FLOAT\n                | STRING\n                OperandName : IDENTQualifiedIdent : IDENT PERIOD TypeNameCompositeLit : LiteralType LiteralValueLiteralType : ArrayType\n                   | ElementType\n                   | TypeNameLiteralValue : LBRACE ElementListOpt RBRACEElementListOpt : ElementList\n                           | epsilonElementList : KeyedElement KeyedElementCommaRepKeyedElementCommaRep : KeyedElementCommaRep COMMA KeyedElement\n                            | epsilonKeyedElement : Key COLON Element\n                    | ElementKey : FieldName\n           | Expression\n           | LiteralValueFieldName : IDENTElement : Expression\n               | LiteralValuePrimaryExpr : Operand\n                   | PrimaryExpr Selector\n                   | PrimaryExpr Index\n                   | PrimaryExpr Slice\n                   | PrimaryExpr TypeAssertion\n                   | PrimaryExpr ArgumentsSelector : PERIOD IDENTIndex : LBRACK Expression RBRACKSlice : LBRACK ExpressionOpt COLON ExpressionOpt RBRACK\n             | LBRACK ExpressionOpt COLON Expression COLON Expression RBRACKTypeAssertion : PERIOD LPAREN Type RPARENArguments : LPAREN ExpressionListTypeOpt RPARENExpressionListTypeOpt : ExpressionList\n                             | epsilonExpressionListCommaOpt : COMMA ExpressionList\n                              | epsilonExpression : UnaryExpr\n                  | Expression BinaryOp ExpressionExpressionOpt : Expression\n                     | epsilonUnaryExpr : PrimaryExpr\n                 | UnaryOp UnaryExpr\n                 | NOT UnaryExprBinaryOp : LOR\n                | LAND\n                | RelOp\n                | AddMulOpRelOp : EQL\n             | NEQ\n             | LSS\n             | GTR\n             | LEQ\n             | GEQAddMulOp : UnaryOp\n                | OR\n                | XOR\n                | QUO\n                | REM\n                | SHL\n                | SHRUnaryOp : ADD\n               | SUB\n               | MUL\n               | AND Statement : Declaration\n                 | LabeledStmt\n                 | SimpleStmt\n                 | ReturnStmt\n                 | BreakStmt\n                 | ContinueStmt\n                 | GotoStmt\n                 | Block\n                 | IfStmt\n                 | SwitchStmt\n                 | ForStmt  SimpleStmt : epsilon\n                 | ExpressionStmt\n                 | IncDecStmt\n                 | Assignment\n                 | ShortVarDecl  LabeledStmt : Label COLON Statement  Label : IDENT  ExpressionStmt : Expression  IncDecStmt : Expression INC\n                 | Expression DEC  Assignment : ExpressionList assign_op ExpressionList assign_op : AssignOp AssignOp : ADD_ASSIGN\n               | SUB_ASSIGN\n               | MUL_ASSIGN\n               | QUO_ASSIGN\n               | REM_ASSIGN\n               | AND_ASSIGN\n               | OR_ASSIGN\n               | XOR_ASSIGN\n               | SHL_ASSIGN\n               | SHR_ASSIGN\n               | ASSIGN  IfStmt : IF Expression Block ElseOpt  SimpleStmtOpt : SimpleStmt SEMICOLON\n                    | epsilon  ElseOpt : ELSE IfStmt\n              | ELSE Block\n              | epsilon  SwitchStmt : ExprSwitchStmt\n                 | TypeSwitchStmt  ExprSwitchStmt : SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE ExprCaseClauseRep : ExprCaseClauseRep ExprCaseClause\n                        | epsilon ExprCaseClause : ExprSwitchCase COLON StatementList ExprSwitchCase : CASE ExpressionList\n                     | DEFAULT  TypeSwitchStmt : SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE TypeSwitchGuard : IdentifierOpt PrimaryExpr PERIOD LPAREN TYPE RPAREN  IdentifierOpt : IDENT DEFINE\n                    | epsilon  TypeCaseClauseOpt : TypeCaseClauseOpt TypeCaseClause\n                        | epsilon  TypeCaseClause : TypeSwitchCase COLON StatementList TypeSwitchCase : CASE TypeList\n                     | DEFAULT  TypeList : Type TypeRep TypeRep : TypeRep COMMA Type\n              | epsilon ForStmt : FOR ConditionBlockOpt BlockConditionBlockOpt : epsilon\n             | Condition\n             | ForClause\n             | RangeClauseCondition : Expression ForClause : SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmtConditionOpt : epsilon\n          | Condition RangeClause : ExpressionIdentListOpt RANGE ExpressionExpressionIdentListOpt : epsilon\n             | ExpressionIdentifierExpressionIdentifier : ExpressionList ASSIGNReturnStmt : RETURN ExpressionListPureOptExpressionListPureOpt : ExpressionList\n             | epsilonBreakStmt : BREAK LabelOptContinueStmt : CONTINUE LabelOptLabelOpt : Label\n        | epsilon GotoStmt : GOTO Label SourceFile : PackageClause SEMICOLON ImportDeclRep TopLevelDeclRepImportDeclRep : epsilon\n           | ImportDeclRep ImportDecl SEMICOLONTopLevelDeclRep : TopLevelDeclRep TopLevelDecl SEMICOLON\n                     | epsilonPackageClause : PACKAGE PackageNamePackageName : IDENTImportDecl : IMPORT ImportSpec\n          | IMPORT LPAREN ImportSpecRep RPAREN  ImportSpecRep : ImportSpecRep ImportSpec SEMICOLON\n            | epsilon  ImportSpec : PackageNameDotOpt ImportPath  PackageNameDotOpt : PERIOD\n                        | PackageName\n                        | epsilon ImportPath : STRING epsilon : '
    
_lr_action_items = {'PACKAGE':([0,],[4,]),'$end':([1,2,5,8,9,10,12,24,31,],[0,-1,-256,-256,-241,-240,-244,-242,-243,]),'SEMICOLON':([3,6,7,11,14,15,16,17,18,19,25,34,36,37,38,40,41,43,48,49,50,51,52,56,58,60,61,63,64,65,66,67,68,69,70,71,77,78,82,85,87,88,89,90,91,92,93,94,95,96,106,107,110,114,115,118,123,124,126,127,128,129,130,132,133,135,136,137,138,139,140,142,143,144,147,148,150,155,156,157,177,178,179,180,181,185,186,190,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,220,221,222,223,224,226,231,232,233,234,242,243,244,247,248,249,250,251,252,253,254,255,256,257,259,260,262,266,267,271,288,289,290,293,295,297,298,299,300,301,302,305,306,313,316,317,318,319,320,322,323,324,325,326,333,335,336,338,348,350,356,358,],[5,-245,-246,24,31,-51,-52,-48,-49,-50,-247,-53,-256,-256,-66,-70,-71,-74,-251,-255,-83,-84,-256,-57,-59,-2,-3,-5,-6,-12,-13,-14,-7,-8,-9,-10,-60,-62,-73,-256,-248,145,-86,-87,-256,-32,-29,-30,-31,-33,-54,154,-11,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,-27,-28,-67,191,-72,-75,192,-78,-81,-79,-256,-256,-47,-34,-58,-4,-96,-116,-117,-118,-119,-120,-136,-137,-61,-80,-63,-65,-44,247,-159,-160,-161,-162,-163,-164,-165,-166,-167,-168,-169,-170,-171,-172,-173,-174,-256,-256,-256,-177,-199,-200,-256,-95,-256,-17,-19,-132,-121,-90,-20,296,-46,-256,-232,-233,-234,-235,-237,-238,-176,-236,-239,-178,-179,-170,-177,302,-95,-177,-170,312,-122,-126,-256,-64,-175,-256,-219,-256,-82,-180,-125,-23,-24,-25,-26,-193,-198,337,-226,-227,-224,-123,-196,-197,-201,-256,-207,-124,-256,]),'IDENT':([4,13,20,21,22,23,26,35,36,37,39,42,44,45,46,47,52,53,54,55,62,72,74,76,77,78,79,80,81,83,84,86,91,97,102,104,108,111,116,117,119,120,121,122,125,131,134,141,145,147,148,150,152,153,154,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,182,183,184,188,189,190,191,192,215,216,217,218,219,223,226,228,235,245,246,247,248,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,289,294,296,302,303,304,309,311,312,332,334,337,341,345,348,353,355,358,361,366,],[7,7,33,37,42,37,-256,-256,73,-256,-256,73,-256,73,7,-250,73,104,37,-56,73,110,127,73,-60,-62,42,-69,73,37,-77,127,-256,104,73,-256,127,73,127,127,-155,-156,-157,-158,127,-256,190,127,-249,224,-47,-34,104,104,-55,73,127,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,234,127,127,37,-22,-61,-68,-76,127,255,255,255,127,271,271,73,73,73,127,-46,224,127,127,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,310,-195,127,-21,127,127,-192,127,-210,-194,-209,127,271,127,234,-256,73,73,-256,110,73,]),'IMPORT':([5,8,9,24,],[-256,13,-241,-242,]),'FUNC':([5,8,9,10,12,24,31,],[-256,-256,-241,20,-244,-242,-243,]),'CONST':([5,8,9,10,12,24,31,91,147,148,247,248,348,358,],[-256,-256,-241,21,-244,-242,-243,-256,21,-47,-46,21,-256,-256,]),'TYPE':([5,8,9,10,12,24,31,36,37,42,45,52,53,62,76,77,78,81,91,97,102,104,111,147,148,150,152,153,158,190,228,235,245,247,248,348,353,355,358,366,],[-256,-256,-241,22,-244,-242,-243,72,-256,72,72,72,72,72,72,-60,-62,72,-256,72,72,-256,72,22,-47,-34,72,72,72,-61,72,72,72,-46,22,-256,72,361,-256,72,]),'VAR':([5,8,9,10,12,24,31,91,147,148,247,248,348,358,],[-256,-256,-241,23,-244,-242,-243,-256,23,-47,-46,23,-256,-256,]),'STRING':([7,13,26,27,28,29,30,36,37,42,45,46,47,52,53,60,61,62,63,64,65,66,67,68,69,70,71,74,76,77,78,81,86,91,97,102,104,108,110,111,116,117,119,120,121,122,125,132,133,141,145,147,148,150,152,153,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,183,184,190,215,219,223,226,228,231,232,235,243,245,246,247,248,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,289,294,297,302,303,304,309,311,312,332,334,337,341,348,353,355,358,366,],[-246,-256,-256,49,-252,-253,-254,71,-256,71,71,-256,-250,71,71,-2,-3,71,-5,-6,-12,-13,-14,-7,-8,-9,-10,130,71,-60,-62,71,130,-256,71,71,-256,130,-11,71,130,130,-155,-156,-157,-158,130,-27,-28,130,-249,130,-47,-34,71,71,-4,-96,71,130,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,130,130,-61,130,130,130,130,71,-17,-19,71,-20,71,130,-46,130,130,130,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-256,-195,130,319,130,130,-192,130,-210,-194,-209,130,130,130,-256,71,71,-256,71,]),'LPAREN':([13,21,22,23,32,33,36,37,42,45,52,53,62,74,76,77,78,81,86,91,97,102,104,108,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,141,147,148,150,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,190,215,219,223,224,226,228,234,235,242,245,246,247,248,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,289,293,294,295,302,303,304,309,311,312,313,331,332,333,334,337,341,345,348,353,355,356,358,366,],[26,35,39,44,53,-85,62,-256,62,62,97,62,62,125,62,-60,-62,62,125,-256,62,62,-256,125,184,125,125,-115,-155,-156,-157,-158,-88,-89,125,-91,-95,-92,-93,-94,125,125,-47,-34,62,62,62,125,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-116,-117,-118,-119,-120,235,125,125,-61,125,125,125,-95,125,62,-121,62,-90,62,125,-46,125,-95,125,125,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-256,-195,-122,125,-126,125,125,-192,125,-210,-194,-125,184,-209,-123,125,125,125,355,-256,62,62,-124,-256,62,]),'PERIOD':([13,26,46,47,73,104,115,118,123,124,126,127,128,129,130,145,177,178,179,180,181,224,234,242,271,293,295,313,331,333,356,],[28,-256,28,-250,111,111,182,-115,-88,-89,-91,-95,-92,-93,-94,-249,-116,-117,-118,-119,-120,-95,-121,-90,-95,-122,-126,-125,345,-123,-124,]),'RPAREN':([26,35,39,44,46,47,53,54,55,60,61,63,64,65,66,67,68,69,70,71,79,80,83,84,97,98,99,100,101,103,109,110,114,115,118,123,124,126,127,128,129,130,132,133,144,145,149,151,154,156,157,177,178,179,180,181,184,185,186,187,191,192,194,195,227,229,230,231,232,233,234,239,240,241,242,243,291,292,293,295,298,313,333,356,361,],[-256,-256,-256,-256,87,-250,-256,106,-56,-2,-3,-5,-6,-12,-13,-14,-7,-8,-9,-10,135,-69,138,-77,-256,150,-35,-36,-37,-39,156,-11,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,-27,-28,-256,-249,156,-38,-55,-4,-96,-116,-117,-118,-119,-120,-256,-136,-137,242,-68,-76,-63,-65,-40,-43,-41,-17,-19,-132,-121,295,-127,-128,-90,-20,-42,313,-122,-126,-64,-125,-123,-124,365,]),'ASSIGN':([36,37,42,45,57,58,59,60,61,63,64,65,66,67,68,69,70,71,77,78,85,110,114,115,118,123,124,126,127,128,129,130,132,133,156,157,177,178,179,180,181,185,186,190,194,195,220,224,225,231,232,233,234,242,243,266,270,271,288,293,295,298,313,333,356,],[-256,-256,81,86,108,-16,-15,-2,-3,-5,-6,-12,-13,-14,-7,-8,-9,-10,-60,-62,141,-11,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,-27,-28,-4,-96,-116,-117,-118,-119,-120,-136,-137,-61,-63,-65,-256,-95,285,-17,-19,-132,-121,-90,-20,-256,304,-95,-256,-122,-126,-64,-125,-123,-124,]),'INT':([36,37,42,45,52,53,62,74,76,77,78,81,86,91,97,102,104,108,111,116,117,119,120,121,122,125,141,147,148,150,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,183,184,190,215,219,223,226,228,235,245,246,247,248,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,289,294,302,303,304,309,311,312,332,334,337,341,348,353,355,358,366,],[68,-256,68,68,68,68,68,128,68,-60,-62,68,128,-256,68,68,-256,128,68,128,128,-155,-156,-157,-158,128,128,128,-47,-34,68,68,68,128,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,128,128,-61,128,128,128,128,68,68,68,128,-46,128,128,128,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-256,-195,128,128,128,-192,128,-210,-194,-209,128,128,128,-256,68,68,-256,68,]),'FLOAT':([36,37,42,45,52,53,62,74,76,77,78,81,86,91,97,102,104,108,111,116,117,119,120,121,122,125,141,147,148,150,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,183,184,190,215,219,223,226,228,235,245,246,247,248,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,289,294,302,303,304,309,311,312,332,334,337,341,348,353,355,358,366,],[69,-256,69,69,69,69,69,129,69,-60,-62,69,129,-256,69,69,-256,129,69,129,129,-155,-156,-157,-158,129,129,129,-47,-34,69,69,69,129,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,129,129,-61,129,129,129,129,69,69,69,129,-46,129,129,129,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-256,-195,129,129,129,-192,129,-210,-194,-209,129,129,129,-256,69,69,-256,69,]),'IMAG':([36,37,42,45,52,53,62,76,77,78,81,97,102,104,111,150,152,153,158,190,228,235,245,353,355,366,],[70,-256,70,70,70,70,70,70,-60,-62,70,70,70,-256,70,-34,70,70,70,-61,70,70,70,70,70,70,]),'LBRACK':([36,37,42,45,52,53,62,76,77,78,81,97,102,104,115,118,123,124,126,127,128,129,130,150,152,153,158,177,178,179,180,181,190,224,228,234,235,242,245,271,293,295,313,331,333,353,355,356,366,],[74,-256,74,74,74,74,74,74,-60,-62,74,74,74,-256,183,-115,-88,-89,-91,-95,-92,-93,-94,-34,74,74,74,-116,-117,-118,-119,-120,-61,-95,74,-121,74,-90,74,-95,-122,-126,-125,183,-123,74,74,-124,74,]),'STRUCT':([36,37,42,45,52,53,62,76,77,78,81,97,102,104,150,152,153,158,190,228,235,245,353,355,366,],[75,-256,75,75,75,75,75,75,-60,-62,75,75,75,-256,-34,75,75,75,-61,75,75,75,75,75,75,]),'MUL':([36,37,42,45,52,53,62,74,76,77,78,81,86,91,97,102,104,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,141,144,147,148,150,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,190,215,219,220,223,224,226,228,233,234,235,236,242,245,246,247,248,258,266,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,288,293,294,295,298,302,303,304,305,313,315,326,327,333,334,337,341,346,348,353,355,356,358,366,],[76,-256,76,76,76,76,76,121,76,-60,-62,76,121,-256,76,76,-256,121,121,-131,-135,121,121,-115,-155,-156,-157,-158,-88,-89,121,-91,-95,-92,-93,-94,121,121,121,-47,-34,76,76,76,121,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-116,-117,-118,-119,-120,121,121,-136,-137,121,-61,121,121,121,121,-95,121,76,121,-121,76,121,-90,76,121,-46,121,121,121,-95,121,121,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,121,-122,121,-126,121,121,121,-192,121,-125,121,121,121,-123,121,121,121,121,-256,76,76,-124,-256,76,]),'COMMA':([37,60,61,63,64,65,66,67,68,69,70,71,77,78,101,103,104,105,110,114,115,118,123,124,126,127,128,129,130,132,133,144,149,151,156,157,177,178,179,180,181,185,186,190,194,195,220,224,227,229,230,231,232,233,234,242,243,266,271,288,291,293,295,298,313,333,356,360,363,364,367,],[-256,-2,-3,-5,-6,-12,-13,-14,-7,-8,-9,-10,134,-62,-43,152,-256,153,-11,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,-27,-28,-256,-43,-42,-4,-96,-116,-117,-118,-119,-120,-136,-137,-61,246,-65,-256,-95,-40,-43,-41,-17,-19,-132,-121,-90,-20,-256,-95,-256,-42,-122,-126,-64,-125,-123,-124,-256,366,-218,-217,]),'LBRACE':([51,52,60,61,63,64,65,66,67,68,69,70,71,75,91,92,93,94,95,96,110,114,115,118,123,124,126,127,128,129,130,132,133,144,147,148,150,156,157,177,178,179,180,181,185,186,194,195,210,211,212,213,214,220,223,226,231,232,233,234,242,243,247,248,258,259,260,261,262,263,264,265,266,271,286,288,289,293,295,298,305,306,308,313,321,327,333,337,347,348,356,358,365,],[91,-256,-2,-3,-5,-6,-12,-13,-14,-7,-8,-9,-10,131,-256,-32,-29,-30,-31,-33,-11,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,-27,-28,-256,91,-47,-34,-4,-96,-116,-117,-118,-119,-120,-136,-137,-63,-65,-170,-171,-172,-173,-174,-177,-256,-256,-17,-19,-132,-121,-90,-20,-46,91,91,-178,-179,91,-220,-221,-222,-223,-224,-95,307,-133,-134,-122,-126,-64,-82,-180,330,-125,91,-228,-123,-256,-225,-256,-124,-256,-208,]),'COLON':([60,61,63,64,65,66,67,68,69,70,71,110,114,115,118,123,124,126,127,128,129,130,132,133,144,156,157,177,178,179,180,181,183,185,186,194,195,209,224,231,232,233,234,236,237,238,242,243,293,295,298,313,315,333,340,342,349,352,354,356,359,360,363,364,367,],[-2,-3,-5,-6,-12,-13,-14,-7,-8,-9,-10,-11,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,-27,-28,-256,-4,-96,-116,-117,-118,-119,-120,-256,-136,-137,-63,-65,248,-176,-17,-19,-132,-121,-133,294,-134,-90,-20,-122,-126,-64,-125,334,-123,348,-206,-205,358,-215,-124,-214,-256,-216,-218,-217,]),'NOT':([74,86,91,108,116,117,119,120,121,122,125,141,147,148,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,183,184,215,219,223,226,246,247,248,272,273,274,275,276,277,278,279,280,281,282,283,284,285,294,302,303,304,334,337,341,348,358,],[117,117,-256,117,117,117,-155,-156,-157,-158,117,117,117,-47,117,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,117,117,117,117,117,117,117,-46,117,117,117,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,117,117,117,-192,117,117,117,-256,-256,]),'ADD':([74,86,91,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,141,144,147,148,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,215,219,220,223,224,226,233,234,236,242,246,247,248,258,266,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,288,293,294,295,298,302,303,304,305,313,315,326,327,333,334,337,341,346,348,356,358,],[119,119,-256,119,119,-131,-135,119,119,-115,-155,-156,-157,-158,-88,-89,119,-91,-95,-92,-93,-94,119,119,119,-47,119,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-116,-117,-118,-119,-120,119,119,-136,-137,119,119,119,119,119,-95,119,119,-121,119,-90,119,-46,119,119,119,-95,119,119,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,119,-122,119,-126,119,119,119,-192,119,-125,119,119,119,-123,119,119,119,119,-256,-124,-256,]),'SUB':([74,86,91,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,141,144,147,148,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,215,219,220,223,224,226,233,234,236,242,246,247,248,258,266,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,288,293,294,295,298,302,303,304,305,313,315,326,327,333,334,337,341,346,348,356,358,],[120,120,-256,120,120,-131,-135,120,120,-115,-155,-156,-157,-158,-88,-89,120,-91,-95,-92,-93,-94,120,120,120,-47,120,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-116,-117,-118,-119,-120,120,120,-136,-137,120,120,120,120,120,-95,120,120,-121,120,-90,120,-46,120,120,120,-95,120,120,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,120,-122,120,-126,120,120,120,-192,120,-125,120,120,120,-123,120,120,120,120,-256,-124,-256,]),'AND':([74,86,91,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,141,144,147,148,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,215,219,220,223,224,226,233,234,236,242,246,247,248,258,266,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,288,293,294,295,298,302,303,304,305,313,315,326,327,333,334,337,341,346,348,356,358,],[122,122,-256,122,122,-131,-135,122,122,-115,-155,-156,-157,-158,-88,-89,122,-91,-95,-92,-93,-94,122,122,122,-47,122,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-116,-117,-118,-119,-120,122,122,-136,-137,122,122,122,122,122,-95,122,122,-121,122,-90,122,-46,122,122,122,-95,122,122,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,122,-122,122,-126,122,122,122,-192,122,-125,122,122,122,-123,122,122,122,122,-256,-124,-256,]),'RETURN':([91,147,148,247,248,348,358,],[-256,215,-47,-46,215,-256,-256,]),'BREAK':([91,147,148,247,248,348,358,],[-256,216,-47,-46,216,-256,-256,]),'CONTINUE':([91,147,148,247,248,348,358,],[-256,217,-47,-46,217,-256,-256,]),'GOTO':([91,147,148,247,248,348,358,],[-256,218,-47,-46,218,-256,-256,]),'IF':([91,147,148,247,248,321,348,358,],[-256,219,-47,-46,219,219,-256,-256,]),'FOR':([91,147,148,247,248,348,358,],[-256,223,-47,-46,223,-256,-256,]),'SWITCH':([91,147,148,247,248,348,358,],[-256,226,-47,-46,226,-256,-256,]),'RBRACE':([91,131,146,147,148,188,189,247,296,307,328,329,330,339,343,344,348,351,357,358,362,],[-256,-256,196,-45,-47,243,-22,-46,-21,-256,338,-203,-256,-202,350,-212,-256,-211,-204,-256,-213,]),'RBRACK':([112,113,114,115,118,123,124,126,127,128,129,130,177,178,179,180,181,185,186,233,234,236,238,242,293,294,295,313,314,315,333,346,356,],[158,-18,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,-116,-117,-118,-119,-120,-136,-137,-132,-121,293,-134,-90,-122,-256,-126,-125,333,-133,-123,356,-124,]),'LOR':([113,114,115,118,123,124,126,127,128,129,130,144,177,178,179,180,181,185,186,187,220,224,233,234,236,242,258,266,271,288,293,295,298,305,313,315,326,327,333,346,356,],[160,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,160,-116,-117,-118,-119,-120,-136,-137,160,160,-95,160,-121,160,-90,160,160,-95,160,-122,-126,160,160,-125,160,160,160,-123,160,-124,]),'LAND':([113,114,115,118,123,124,126,127,128,129,130,144,177,178,179,180,181,185,186,187,220,224,233,234,236,242,258,266,271,288,293,295,298,305,313,315,326,327,333,346,356,],[161,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,161,-116,-117,-118,-119,-120,-136,-137,161,161,-95,161,-121,161,-90,161,161,-95,161,-122,-126,161,161,-125,161,161,161,-123,161,-124,]),'EQL':([113,114,115,118,123,124,126,127,128,129,130,144,177,178,179,180,181,185,186,187,220,224,233,234,236,242,258,266,271,288,293,295,298,305,313,315,326,327,333,346,356,],[164,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,164,-116,-117,-118,-119,-120,-136,-137,164,164,-95,164,-121,164,-90,164,164,-95,164,-122,-126,164,164,-125,164,164,164,-123,164,-124,]),'NEQ':([113,114,115,118,123,124,126,127,128,129,130,144,177,178,179,180,181,185,186,187,220,224,233,234,236,242,258,266,271,288,293,295,298,305,313,315,326,327,333,346,356,],[165,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,165,-116,-117,-118,-119,-120,-136,-137,165,165,-95,165,-121,165,-90,165,165,-95,165,-122,-126,165,165,-125,165,165,165,-123,165,-124,]),'LSS':([113,114,115,118,123,124,126,127,128,129,130,144,177,178,179,180,181,185,186,187,220,224,233,234,236,242,258,266,271,288,293,295,298,305,313,315,326,327,333,346,356,],[166,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,166,-116,-117,-118,-119,-120,-136,-137,166,166,-95,166,-121,166,-90,166,166,-95,166,-122,-126,166,166,-125,166,166,166,-123,166,-124,]),'GTR':([113,114,115,118,123,124,126,127,128,129,130,144,177,178,179,180,181,185,186,187,220,224,233,234,236,242,258,266,271,288,293,295,298,305,313,315,326,327,333,346,356,],[167,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,167,-116,-117,-118,-119,-120,-136,-137,167,167,-95,167,-121,167,-90,167,167,-95,167,-122,-126,167,167,-125,167,167,167,-123,167,-124,]),'LEQ':([113,114,115,118,123,124,126,127,128,129,130,144,177,178,179,180,181,185,186,187,220,224,233,234,236,242,258,266,271,288,293,295,298,305,313,315,326,327,333,346,356,],[168,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,168,-116,-117,-118,-119,-120,-136,-137,168,168,-95,168,-121,168,-90,168,168,-95,168,-122,-126,168,168,-125,168,168,168,-123,168,-124,]),'GEQ':([113,114,115,118,123,124,126,127,128,129,130,144,177,178,179,180,181,185,186,187,220,224,233,234,236,242,258,266,271,288,293,295,298,305,313,315,326,327,333,346,356,],[169,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,169,-116,-117,-118,-119,-120,-136,-137,169,169,-95,169,-121,169,-90,169,169,-95,169,-122,-126,169,169,-125,169,169,169,-123,169,-124,]),'OR':([113,114,115,118,123,124,126,127,128,129,130,144,177,178,179,180,181,185,186,187,220,224,233,234,236,242,258,266,271,288,293,295,298,305,313,315,326,327,333,346,356,],[171,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,171,-116,-117,-118,-119,-120,-136,-137,171,171,-95,171,-121,171,-90,171,171,-95,171,-122,-126,171,171,-125,171,171,171,-123,171,-124,]),'XOR':([113,114,115,118,123,124,126,127,128,129,130,144,177,178,179,180,181,185,186,187,220,224,233,234,236,242,258,266,271,288,293,295,298,305,313,315,326,327,333,346,356,],[172,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,172,-116,-117,-118,-119,-120,-136,-137,172,172,-95,172,-121,172,-90,172,172,-95,172,-122,-126,172,172,-125,172,172,172,-123,172,-124,]),'QUO':([113,114,115,118,123,124,126,127,128,129,130,144,177,178,179,180,181,185,186,187,220,224,233,234,236,242,258,266,271,288,293,295,298,305,313,315,326,327,333,346,356,],[173,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,173,-116,-117,-118,-119,-120,-136,-137,173,173,-95,173,-121,173,-90,173,173,-95,173,-122,-126,173,173,-125,173,173,173,-123,173,-124,]),'REM':([113,114,115,118,123,124,126,127,128,129,130,144,177,178,179,180,181,185,186,187,220,224,233,234,236,242,258,266,271,288,293,295,298,305,313,315,326,327,333,346,356,],[174,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,174,-116,-117,-118,-119,-120,-136,-137,174,174,-95,174,-121,174,-90,174,174,-95,174,-122,-126,174,174,-125,174,174,174,-123,174,-124,]),'SHL':([113,114,115,118,123,124,126,127,128,129,130,144,177,178,179,180,181,185,186,187,220,224,233,234,236,242,258,266,271,288,293,295,298,305,313,315,326,327,333,346,356,],[175,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,175,-116,-117,-118,-119,-120,-136,-137,175,175,-95,175,-121,175,-90,175,175,-95,175,-122,-126,175,175,-125,175,175,175,-123,175,-124,]),'SHR':([113,114,115,118,123,124,126,127,128,129,130,144,177,178,179,180,181,185,186,187,220,224,233,234,236,242,258,266,271,288,293,295,298,305,313,315,326,327,333,346,356,],[176,-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,176,-116,-117,-118,-119,-120,-136,-137,176,176,-95,176,-121,176,-90,176,176,-95,176,-122,-126,176,176,-125,176,176,176,-123,176,-124,]),'INC':([114,115,118,123,124,126,127,128,129,130,177,178,179,180,181,185,186,220,224,233,234,242,266,271,288,293,295,313,333,356,],[-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,-116,-117,-118,-119,-120,-136,-137,259,-95,-132,-121,-90,259,-95,259,-122,-126,-125,-123,-124,]),'DEC':([114,115,118,123,124,126,127,128,129,130,177,178,179,180,181,185,186,220,224,233,234,242,266,271,288,293,295,313,333,356,],[-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,-116,-117,-118,-119,-120,-136,-137,260,-95,-132,-121,-90,260,-95,260,-122,-126,-125,-123,-124,]),'ADD_ASSIGN':([114,115,118,123,124,126,127,128,129,130,177,178,179,180,181,185,186,194,195,220,224,225,233,234,242,266,270,271,288,293,295,298,313,333,356,],[-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,-116,-117,-118,-119,-120,-136,-137,-63,-65,-256,-95,275,-132,-121,-90,-256,275,-95,-256,-122,-126,-64,-125,-123,-124,]),'SUB_ASSIGN':([114,115,118,123,124,126,127,128,129,130,177,178,179,180,181,185,186,194,195,220,224,225,233,234,242,266,270,271,288,293,295,298,313,333,356,],[-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,-116,-117,-118,-119,-120,-136,-137,-63,-65,-256,-95,276,-132,-121,-90,-256,276,-95,-256,-122,-126,-64,-125,-123,-124,]),'MUL_ASSIGN':([114,115,118,123,124,126,127,128,129,130,177,178,179,180,181,185,186,194,195,220,224,225,233,234,242,266,270,271,288,293,295,298,313,333,356,],[-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,-116,-117,-118,-119,-120,-136,-137,-63,-65,-256,-95,277,-132,-121,-90,-256,277,-95,-256,-122,-126,-64,-125,-123,-124,]),'QUO_ASSIGN':([114,115,118,123,124,126,127,128,129,130,177,178,179,180,181,185,186,194,195,220,224,225,233,234,242,266,270,271,288,293,295,298,313,333,356,],[-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,-116,-117,-118,-119,-120,-136,-137,-63,-65,-256,-95,278,-132,-121,-90,-256,278,-95,-256,-122,-126,-64,-125,-123,-124,]),'REM_ASSIGN':([114,115,118,123,124,126,127,128,129,130,177,178,179,180,181,185,186,194,195,220,224,225,233,234,242,266,270,271,288,293,295,298,313,333,356,],[-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,-116,-117,-118,-119,-120,-136,-137,-63,-65,-256,-95,279,-132,-121,-90,-256,279,-95,-256,-122,-126,-64,-125,-123,-124,]),'AND_ASSIGN':([114,115,118,123,124,126,127,128,129,130,177,178,179,180,181,185,186,194,195,220,224,225,233,234,242,266,270,271,288,293,295,298,313,333,356,],[-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,-116,-117,-118,-119,-120,-136,-137,-63,-65,-256,-95,280,-132,-121,-90,-256,280,-95,-256,-122,-126,-64,-125,-123,-124,]),'OR_ASSIGN':([114,115,118,123,124,126,127,128,129,130,177,178,179,180,181,185,186,194,195,220,224,225,233,234,242,266,270,271,288,293,295,298,313,333,356,],[-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,-116,-117,-118,-119,-120,-136,-137,-63,-65,-256,-95,281,-132,-121,-90,-256,281,-95,-256,-122,-126,-64,-125,-123,-124,]),'XOR_ASSIGN':([114,115,118,123,124,126,127,128,129,130,177,178,179,180,181,185,186,194,195,220,224,225,233,234,242,266,270,271,288,293,295,298,313,333,356,],[-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,-116,-117,-118,-119,-120,-136,-137,-63,-65,-256,-95,282,-132,-121,-90,-256,282,-95,-256,-122,-126,-64,-125,-123,-124,]),'SHL_ASSIGN':([114,115,118,123,124,126,127,128,129,130,177,178,179,180,181,185,186,194,195,220,224,225,233,234,242,266,270,271,288,293,295,298,313,333,356,],[-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,-116,-117,-118,-119,-120,-136,-137,-63,-65,-256,-95,283,-132,-121,-90,-256,283,-95,-256,-122,-126,-64,-125,-123,-124,]),'SHR_ASSIGN':([114,115,118,123,124,126,127,128,129,130,177,178,179,180,181,185,186,194,195,220,224,225,233,234,242,266,270,271,288,293,295,298,313,333,356,],[-131,-135,-115,-88,-89,-91,-95,-92,-93,-94,-116,-117,-118,-119,-120,-136,-137,-63,-65,-256,-95,284,-132,-121,-90,-256,284,-95,-256,-122,-126,-64,-125,-123,-124,]),'CASE':([147,148,247,307,328,329,330,339,343,344,348,351,357,358,362,],[-45,-47,-46,-256,341,-203,-256,-202,353,-212,-256,-211,-204,-256,-213,]),'DEFAULT':([147,148,247,307,328,329,330,339,343,344,348,351,357,358,362,],[-45,-47,-46,-256,342,-203,-256,-202,354,-212,-256,-211,-204,-256,-213,]),'ELSE':([196,300,],[-44,321,]),'RANGE':([223,262,268,269,304,],[-256,-229,303,-230,-231,]),'DEFINE':([224,271,310,],[272,272,332,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'SourceFile':([0,],[2,]),'PackageClause':([0,],[3,]),'PackageName':([4,13,46,],[6,29,29,]),'ImportDeclRep':([5,],[8,]),'epsilon':([5,8,13,26,35,36,37,39,44,46,52,53,85,91,97,104,131,144,147,183,184,215,216,217,220,223,226,248,266,287,288,294,297,300,302,307,330,337,348,358,360,],[9,12,30,47,55,58,78,80,84,30,95,100,142,148,100,78,189,195,210,238,241,251,254,254,195,262,289,210,195,311,195,238,318,322,324,329,344,210,148,148,364,]),'TopLevelDeclRep':([8,],[10,]),'ImportDecl':([8,],[11,]),'TopLevelDecl':([10,],[14,]),'Declaration':([10,147,248,],[15,198,198,]),'FunctionDecl':([10,],[16,]),'ConstDecl':([10,147,248,],[17,17,17,]),'TypeDecl':([10,147,248,],[18,18,18,]),'VarDecl':([10,147,248,],[19,19,19,]),'ImportSpec':([13,46,],[25,88,]),'PackageNameDotOpt':([13,46,],[27,27,]),'FunctionName':([20,],[32,]),'ConstSpec':([21,54,],[34,107,]),'IdentifierList':([21,23,53,54,83,97,152,153,188,],[36,45,102,36,45,102,228,228,245,]),'TypeSpec':([22,79,],[38,136,]),'AliasDecl':([22,79,],[40,40,]),'TypeDef':([22,79,],[41,41,]),'VarSpec':([23,83,],[43,139,]),'ImportSpecRep':([26,],[46,]),'ImportPath':([27,],[48,]),'Function':([32,],[50,]),'Signature':([32,],[51,]),'Parameters':([32,52,],[52,92,]),'ConstSpecRep':([35,],[54,]),'TypeExprListOpt':([36,],[56,]),'TypeOpt':([36,],[57,]),'Type':([36,42,45,52,53,62,76,81,97,102,152,153,158,228,235,245,353,355,366,],[59,82,85,96,101,109,133,137,149,151,229,229,232,291,292,297,360,292,367,]),'TypeName':([36,42,45,52,53,62,76,81,97,102,111,152,153,158,228,235,245,353,355,366,],[60,60,60,60,60,60,60,60,60,60,157,60,60,60,60,60,60,60,60,60,]),'TypeLit':([36,42,45,52,53,62,76,81,97,102,152,153,158,228,235,245,353,355,366,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'TypeToken':([36,42,45,52,53,62,76,81,97,102,111,152,153,158,228,235,245,353,355,366,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'QualifiedIdent':([36,42,45,52,53,62,76,81,97,102,111,152,153,158,228,235,245,353,355,366,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'ArrayType':([36,42,45,52,53,62,76,81,97,102,152,153,158,228,235,245,353,355,366,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'StructType':([36,42,45,52,53,62,76,81,97,102,152,153,158,228,235,245,353,355,366,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'PointerType':([36,42,45,52,53,62,76,81,97,102,152,153,158,228,235,245,353,355,366,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'IdentifierRep':([37,104,],[77,77,]),'TypeSpecRep':([39,],[79,]),'VarSpecRep':([44,],[83,]),'FunctionBody':([51,],[89,]),'Block':([51,147,248,258,261,321,],[90,205,205,300,301,336,]),'ResultOpt':([52,],[93,]),'Result':([52,],[94,]),'ParameterListOpt':([53,97,],[98,98,]),'ParametersList':([53,97,],[99,99,]),'ParameterDeclCommaRep':([53,97,],[103,103,]),'ParameterDecl':([53,97,152,153,],[105,105,227,230,]),'ArrayLength':([74,],[112,]),'Expression':([74,86,108,125,141,147,159,183,184,215,219,223,226,246,248,272,273,294,302,303,334,337,341,],[113,144,144,187,144,220,233,236,144,144,258,266,288,298,220,305,144,315,326,327,346,220,144,]),'UnaryExpr':([74,86,108,116,117,125,141,147,159,183,184,215,219,223,226,246,248,272,273,294,302,303,334,337,341,],[114,114,114,185,186,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'PrimaryExpr':([74,86,108,116,117,125,141,147,159,183,184,215,219,223,226,246,248,272,273,294,302,303,309,334,337,341,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,331,115,115,115,]),'UnaryOp':([74,86,108,113,116,117,125,141,144,147,159,183,184,187,215,219,220,223,226,233,236,246,248,258,266,272,273,288,294,298,302,303,305,315,326,327,334,337,341,346,],[116,116,116,170,116,116,116,116,170,116,116,116,116,170,116,116,170,116,116,170,170,116,116,170,170,116,116,170,116,170,116,116,170,170,170,170,116,116,116,170,]),'Operand':([74,86,108,116,117,125,141,147,159,183,184,215,219,223,226,246,248,272,273,294,302,303,309,334,337,341,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'Literal':([74,86,108,116,117,125,141,147,159,183,184,215,219,223,226,246,248,272,273,294,302,303,309,334,337,341,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'OperandName':([74,86,108,116,117,125,141,147,159,183,184,215,219,223,226,246,248,272,273,294,302,303,309,334,337,341,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'BasicLit':([74,86,108,116,117,125,141,147,159,183,184,215,219,223,226,246,248,272,273,294,302,303,309,334,337,341,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'BaseType':([76,],[132,]),'ExpressionListOpt':([85,],[140,]),'ExpressionList':([86,108,141,147,184,215,223,226,248,273,337,341,],[143,155,193,225,240,250,270,225,225,306,225,349,]),'StatementList':([91,348,358,],[146,357,362,]),'StatementRep':([91,348,358,],[147,147,147,]),'BinaryOp':([113,144,187,220,233,236,258,266,288,298,305,315,326,327,346,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'RelOp':([113,144,187,220,233,236,258,266,288,298,305,315,326,327,346,],[162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,]),'AddMulOp':([113,144,187,220,233,236,258,266,288,298,305,315,326,327,346,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'Selector':([115,331,],[177,177,]),'Index':([115,331,],[178,178,]),'Slice':([115,331,],[179,179,]),'TypeAssertion':([115,331,],[180,180,]),'Arguments':([115,331,],[181,181,]),'FieldDeclRep':([131,],[188,]),'ExpressionRep':([144,220,266,288,],[194,194,194,194,]),'Statement':([147,248,],[197,299,]),'LabeledStmt':([147,248,],[199,199,]),'SimpleStmt':([147,223,226,248,337,],[200,267,290,200,347,]),'ReturnStmt':([147,248,],[201,201,]),'BreakStmt':([147,248,],[202,202,]),'ContinueStmt':([147,248,],[203,203,]),'GotoStmt':([147,248,],[204,204,]),'IfStmt':([147,248,321,],[206,206,335,]),'SwitchStmt':([147,248,],[207,207,]),'ForStmt':([147,248,],[208,208,]),'Label':([147,216,217,218,248,],[209,253,253,257,209,]),'ExpressionStmt':([147,223,226,248,337,],[211,211,211,211,211,]),'IncDecStmt':([147,223,226,248,337,],[212,212,212,212,212,]),'Assignment':([147,223,226,248,337,],[213,213,213,213,213,]),'ShortVarDecl':([147,223,226,248,337,],[214,214,214,214,214,]),'ExprSwitchStmt':([147,248,],[221,221,]),'TypeSwitchStmt':([147,248,],[222,222,]),'ElementType':([158,],[231,]),'ExpressionOpt':([183,226,294,],[237,286,314,]),'ExpressionListTypeOpt':([184,],[239,]),'FieldDecl':([188,],[244,]),'ExpressionListPureOpt':([215,],[249,]),'LabelOpt':([216,217,],[252,256,]),'ConditionBlockOpt':([223,],[261,]),'Condition':([223,302,],[263,325,]),'ForClause':([223,],[264,]),'RangeClause':([223,],[265,]),'ExpressionIdentListOpt':([223,],[268,]),'ExpressionIdentifier':([223,],[269,]),'assign_op':([225,270,],[273,273,]),'AssignOp':([225,270,],[274,274,]),'SimpleStmtOpt':([226,],[287,]),'TypeSwitchGuard':([287,],[308,]),'IdentifierOpt':([287,],[309,]),'TagOpt':([297,],[316,]),'Tag':([297,],[317,]),'ElseOpt':([300,],[320,]),'ConditionOpt':([302,],[323,]),'ExprCaseClauseRep':([307,],[328,]),'ExprCaseClause':([328,],[339,]),'ExprSwitchCase':([328,],[340,]),'TypeCaseClauseOpt':([330,],[343,]),'TypeCaseClause':([343,],[351,]),'TypeSwitchCase':([343,],[352,]),'TypeList':([353,],[359,]),'TypeRep':([360,],[363,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> SourceFile','start',1,'p_start','parser_v4.py',260),
  ('Type -> TypeName','Type',1,'p_type','parser_v4.py',267),
  ('Type -> TypeLit','Type',1,'p_type','parser_v4.py',268),
  ('Type -> LPAREN Type RPAREN','Type',3,'p_type','parser_v4.py',269),
  ('TypeName -> TypeToken','TypeName',1,'p_type_name','parser_v4.py',276),
  ('TypeName -> QualifiedIdent','TypeName',1,'p_type_name','parser_v4.py',277),
  ('TypeToken -> INT','TypeToken',1,'p_type_token','parser_v4.py',281),
  ('TypeToken -> FLOAT','TypeToken',1,'p_type_token','parser_v4.py',282),
  ('TypeToken -> IMAG','TypeToken',1,'p_type_token','parser_v4.py',283),
  ('TypeToken -> STRING','TypeToken',1,'p_type_token','parser_v4.py',284),
  ('TypeToken -> TYPE IDENT','TypeToken',2,'p_type_token','parser_v4.py',285),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser_v4.py',292),
  ('TypeLit -> StructType','TypeLit',1,'p_type_lit','parser_v4.py',293),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser_v4.py',294),
  ('TypeOpt -> Type','TypeOpt',1,'p_type_opt','parser_v4.py',298),
  ('TypeOpt -> epsilon','TypeOpt',1,'p_type_opt','parser_v4.py',299),
  ('ArrayType -> LBRACK ArrayLength RBRACK ElementType','ArrayType',4,'p_array_type','parser_v4.py',309),
  ('ArrayLength -> Expression','ArrayLength',1,'p_array_length','parser_v4.py',313),
  ('ElementType -> Type','ElementType',1,'p_element_type','parser_v4.py',317),
  ('StructType -> STRUCT LBRACE FieldDeclRep RBRACE','StructType',4,'p_struct_type','parser_v4.py',325),
  ('FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON','FieldDeclRep',3,'p_field_decl_rep','parser_v4.py',329),
  ('FieldDeclRep -> epsilon','FieldDeclRep',1,'p_field_decl_rep','parser_v4.py',330),
  ('FieldDecl -> IdentifierList Type TagOpt','FieldDecl',3,'p_field_decl','parser_v4.py',337),
  ('TagOpt -> Tag','TagOpt',1,'p_TagOpt','parser_v4.py',341),
  ('TagOpt -> epsilon','TagOpt',1,'p_TagOpt','parser_v4.py',342),
  ('Tag -> STRING','Tag',1,'p_Tag','parser_v4.py',346),
  ('PointerType -> MUL BaseType','PointerType',2,'p_point_type','parser_v4.py',353),
  ('BaseType -> Type','BaseType',1,'p_base_type','parser_v4.py',357),
  ('Signature -> Parameters ResultOpt','Signature',2,'p_sign','parser_v4.py',364),
  ('ResultOpt -> Result','ResultOpt',1,'p_result_opt','parser_v4.py',368),
  ('ResultOpt -> epsilon','ResultOpt',1,'p_result_opt','parser_v4.py',369),
  ('Result -> Parameters','Result',1,'p_result','parser_v4.py',373),
  ('Result -> Type','Result',1,'p_result','parser_v4.py',374),
  ('Parameters -> LPAREN ParameterListOpt RPAREN','Parameters',3,'p_params','parser_v4.py',378),
  ('ParameterListOpt -> ParametersList','ParameterListOpt',1,'p_param_list_opt','parser_v4.py',382),
  ('ParameterListOpt -> epsilon','ParameterListOpt',1,'p_param_list_opt','parser_v4.py',383),
  ('ParametersList -> Type','ParametersList',1,'p_param_list','parser_v4.py',387),
  ('ParametersList -> IdentifierList Type','ParametersList',2,'p_param_list','parser_v4.py',388),
  ('ParametersList -> ParameterDeclCommaRep','ParametersList',1,'p_param_list','parser_v4.py',389),
  ('ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl','ParameterDeclCommaRep',3,'p_param_decl_comma_rep','parser_v4.py',396),
  ('ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl','ParameterDeclCommaRep',3,'p_param_decl_comma_rep','parser_v4.py',397),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_param_decl','parser_v4.py',401),
  ('ParameterDecl -> Type','ParameterDecl',1,'p_param_decl','parser_v4.py',402),
  ('Block -> LBRACE StatementList RBRACE','Block',3,'p_block','parser_v4.py',412),
  ('StatementList -> StatementRep','StatementList',1,'p_stat_list','parser_v4.py',416),
  ('StatementRep -> StatementRep Statement SEMICOLON','StatementRep',3,'p_stat_rep','parser_v4.py',420),
  ('StatementRep -> epsilon','StatementRep',1,'p_stat_rep','parser_v4.py',421),
  ('Declaration -> ConstDecl','Declaration',1,'p_decl','parser_v4.py',431),
  ('Declaration -> TypeDecl','Declaration',1,'p_decl','parser_v4.py',432),
  ('Declaration -> VarDecl','Declaration',1,'p_decl','parser_v4.py',433),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_toplevel_decl','parser_v4.py',437),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_toplevel_decl','parser_v4.py',438),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','parser_v4.py',445),
  ('ConstDecl -> CONST LPAREN ConstSpecRep RPAREN','ConstDecl',4,'p_const_decl','parser_v4.py',446),
  ('ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON','ConstSpecRep',3,'p_const_spec_rep','parser_v4.py',453),
  ('ConstSpecRep -> epsilon','ConstSpecRep',1,'p_const_spec_rep','parser_v4.py',454),
  ('ConstSpec -> IdentifierList TypeExprListOpt','ConstSpec',2,'p_const_spec','parser_v4.py',461),
  ('TypeExprListOpt -> TypeOpt ASSIGN ExpressionList','TypeExprListOpt',3,'p_type_expr_list','parser_v4.py',465),
  ('TypeExprListOpt -> epsilon','TypeExprListOpt',1,'p_type_expr_list','parser_v4.py',466),
  ('IdentifierList -> IDENT IdentifierRep','IdentifierList',2,'p_identifier_list','parser_v4.py',473),
  ('IdentifierRep -> IdentifierRep COMMA IDENT','IdentifierRep',3,'p_identifier_rep','parser_v4.py',477),
  ('IdentifierRep -> epsilon','IdentifierRep',1,'p_identifier_rep','parser_v4.py',478),
  ('ExpressionList -> Expression ExpressionRep','ExpressionList',2,'p_expr_list','parser_v4.py',485),
  ('ExpressionRep -> ExpressionRep COMMA Expression','ExpressionRep',3,'p_expr_rep','parser_v4.py',489),
  ('ExpressionRep -> epsilon','ExpressionRep',1,'p_expr_rep','parser_v4.py',490),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','parser_v4.py',500),
  ('TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN','TypeDecl',4,'p_type_decl','parser_v4.py',501),
  ('TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON','TypeSpecRep',3,'p_type_spec_rep','parser_v4.py',508),
  ('TypeSpecRep -> epsilon','TypeSpecRep',1,'p_type_spec_rep','parser_v4.py',509),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_type_spec','parser_v4.py',516),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser_v4.py',517),
  ('AliasDecl -> IDENT ASSIGN Type','AliasDecl',3,'p_alias_decl','parser_v4.py',521),
  ('TypeDef -> IDENT Type','TypeDef',2,'p_type_def','parser_v4.py',528),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_var_decl','parser_v4.py',535),
  ('VarDecl -> VAR LPAREN VarSpecRep RPAREN','VarDecl',4,'p_var_decl','parser_v4.py',536),
  ('VarSpecRep -> VarSpecRep VarSpec SEMICOLON','VarSpecRep',3,'p_var_spec_rep','parser_v4.py',543),
  ('VarSpecRep -> epsilon','VarSpecRep',1,'p_var_spec_rep','parser_v4.py',544),
  ('VarSpec -> IdentifierList Type ExpressionListOpt','VarSpec',3,'p_var_spec','parser_v4.py',551),
  ('VarSpec -> IdentifierList ASSIGN ExpressionList','VarSpec',3,'p_var_spec','parser_v4.py',552),
  ('ExpressionListOpt -> ASSIGN ExpressionList','ExpressionListOpt',2,'p_expr_list_opt','parser_v4.py',559),
  ('ExpressionListOpt -> epsilon','ExpressionListOpt',1,'p_expr_list_opt','parser_v4.py',560),
  ('ShortVarDecl -> IDENT DEFINE Expression','ShortVarDecl',3,'p_short_var_decl','parser_v4.py',570),
  ('FunctionDecl -> FUNC FunctionName Function','FunctionDecl',3,'p_func_decl','parser_v4.py',578),
  ('FunctionDecl -> FUNC FunctionName Signature','FunctionDecl',3,'p_func_decl','parser_v4.py',579),
  ('FunctionName -> IDENT','FunctionName',1,'p_func_name','parser_v4.py',583),
  ('Function -> Signature FunctionBody','Function',2,'p_func','parser_v4.py',587),
  ('FunctionBody -> Block','FunctionBody',1,'p_func_body','parser_v4.py',591),
  ('Operand -> Literal','Operand',1,'p_operand','parser_v4.py',598),
  ('Operand -> OperandName','Operand',1,'p_operand','parser_v4.py',599),
  ('Operand -> LPAREN Expression RPAREN','Operand',3,'p_operand','parser_v4.py',600),
  ('Literal -> BasicLit','Literal',1,'p_literal','parser_v4.py',607),
  ('BasicLit -> INT','BasicLit',1,'p_basic_lit','parser_v4.py',612),
  ('BasicLit -> FLOAT','BasicLit',1,'p_basic_lit','parser_v4.py',613),
  ('BasicLit -> STRING','BasicLit',1,'p_basic_lit','parser_v4.py',614),
  ('OperandName -> IDENT','OperandName',1,'p_operand_name','parser_v4.py',619),
  ('QualifiedIdent -> IDENT PERIOD TypeName','QualifiedIdent',3,'p_quali_ident','parser_v4.py',626),
  ('CompositeLit -> LiteralType LiteralValue','CompositeLit',2,'p_comp_lit','parser_v4.py',633),
  ('LiteralType -> ArrayType','LiteralType',1,'p_lit_type','parser_v4.py',637),
  ('LiteralType -> ElementType','LiteralType',1,'p_lit_type','parser_v4.py',638),
  ('LiteralType -> TypeName','LiteralType',1,'p_lit_type','parser_v4.py',639),
  ('LiteralValue -> LBRACE ElementListOpt RBRACE','LiteralValue',3,'p_lit_val','parser_v4.py',643),
  ('ElementListOpt -> ElementList','ElementListOpt',1,'p_elem_list_comma_opt','parser_v4.py',647),
  ('ElementListOpt -> epsilon','ElementListOpt',1,'p_elem_list_comma_opt','parser_v4.py',648),
  ('ElementList -> KeyedElement KeyedElementCommaRep','ElementList',2,'p_elem_list','parser_v4.py',652),
  ('KeyedElementCommaRep -> KeyedElementCommaRep COMMA KeyedElement','KeyedElementCommaRep',3,'p_key_elem_comma_rep','parser_v4.py',656),
  ('KeyedElementCommaRep -> epsilon','KeyedElementCommaRep',1,'p_key_elem_comma_rep','parser_v4.py',657),
  ('KeyedElement -> Key COLON Element','KeyedElement',3,'p_key_elem','parser_v4.py',664),
  ('KeyedElement -> Element','KeyedElement',1,'p_key_elem','parser_v4.py',665),
  ('Key -> FieldName','Key',1,'p_key','parser_v4.py',672),
  ('Key -> Expression','Key',1,'p_key','parser_v4.py',673),
  ('Key -> LiteralValue','Key',1,'p_key','parser_v4.py',674),
  ('FieldName -> IDENT','FieldName',1,'p_field_name','parser_v4.py',678),
  ('Element -> Expression','Element',1,'p_elem','parser_v4.py',682),
  ('Element -> LiteralValue','Element',1,'p_elem','parser_v4.py',683),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_prim_expr','parser_v4.py',690),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_prim_expr','parser_v4.py',691),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_prim_expr','parser_v4.py',692),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_prim_expr','parser_v4.py',693),
  ('PrimaryExpr -> PrimaryExpr TypeAssertion','PrimaryExpr',2,'p_prim_expr','parser_v4.py',694),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_prim_expr','parser_v4.py',695),
  ('Selector -> PERIOD IDENT','Selector',2,'p_selector','parser_v4.py',702),
  ('Index -> LBRACK Expression RBRACK','Index',3,'p_index','parser_v4.py',706),
  ('Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK','Slice',5,'p_slice','parser_v4.py',710),
  ('Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK','Slice',7,'p_slice','parser_v4.py',711),
  ('TypeAssertion -> PERIOD LPAREN Type RPAREN','TypeAssertion',4,'p_type_assert','parser_v4.py',718),
  ('Arguments -> LPAREN ExpressionListTypeOpt RPAREN','Arguments',3,'p_argument','parser_v4.py',722),
  ('ExpressionListTypeOpt -> ExpressionList','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser_v4.py',726),
  ('ExpressionListTypeOpt -> epsilon','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser_v4.py',727),
  ('ExpressionListCommaOpt -> COMMA ExpressionList','ExpressionListCommaOpt',2,'p_expr_list_comma_opt','parser_v4.py',742),
  ('ExpressionListCommaOpt -> epsilon','ExpressionListCommaOpt',1,'p_expr_list_comma_opt','parser_v4.py',743),
  ('Expression -> UnaryExpr','Expression',1,'p_expr','parser_v4.py',753),
  ('Expression -> Expression BinaryOp Expression','Expression',3,'p_expr','parser_v4.py',754),
  ('ExpressionOpt -> Expression','ExpressionOpt',1,'p_expr_opt','parser_v4.py',761),
  ('ExpressionOpt -> epsilon','ExpressionOpt',1,'p_expr_opt','parser_v4.py',762),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_unary_expr','parser_v4.py',766),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_unary_expr','parser_v4.py',767),
  ('UnaryExpr -> NOT UnaryExpr','UnaryExpr',2,'p_unary_expr','parser_v4.py',768),
  ('BinaryOp -> LOR','BinaryOp',1,'p_binary_op','parser_v4.py',777),
  ('BinaryOp -> LAND','BinaryOp',1,'p_binary_op','parser_v4.py',778),
  ('BinaryOp -> RelOp','BinaryOp',1,'p_binary_op','parser_v4.py',779),
  ('BinaryOp -> AddMulOp','BinaryOp',1,'p_binary_op','parser_v4.py',780),
  ('RelOp -> EQL','RelOp',1,'p_rel_op','parser_v4.py',789),
  ('RelOp -> NEQ','RelOp',1,'p_rel_op','parser_v4.py',790),
  ('RelOp -> LSS','RelOp',1,'p_rel_op','parser_v4.py',791),
  ('RelOp -> GTR','RelOp',1,'p_rel_op','parser_v4.py',792),
  ('RelOp -> LEQ','RelOp',1,'p_rel_op','parser_v4.py',793),
  ('RelOp -> GEQ','RelOp',1,'p_rel_op','parser_v4.py',794),
  ('AddMulOp -> UnaryOp','AddMulOp',1,'p_add_mul_op','parser_v4.py',809),
  ('AddMulOp -> OR','AddMulOp',1,'p_add_mul_op','parser_v4.py',810),
  ('AddMulOp -> XOR','AddMulOp',1,'p_add_mul_op','parser_v4.py',811),
  ('AddMulOp -> QUO','AddMulOp',1,'p_add_mul_op','parser_v4.py',812),
  ('AddMulOp -> REM','AddMulOp',1,'p_add_mul_op','parser_v4.py',813),
  ('AddMulOp -> SHL','AddMulOp',1,'p_add_mul_op','parser_v4.py',814),
  ('AddMulOp -> SHR','AddMulOp',1,'p_add_mul_op','parser_v4.py',815),
  ('UnaryOp -> ADD','UnaryOp',1,'p_unary_op','parser_v4.py',832),
  ('UnaryOp -> SUB','UnaryOp',1,'p_unary_op','parser_v4.py',833),
  ('UnaryOp -> MUL','UnaryOp',1,'p_unary_op','parser_v4.py',834),
  ('UnaryOp -> AND','UnaryOp',1,'p_unary_op','parser_v4.py',835),
  ('Statement -> Declaration','Statement',1,'p_statement','parser_v4.py',862),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','parser_v4.py',863),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','parser_v4.py',864),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','parser_v4.py',865),
  ('Statement -> BreakStmt','Statement',1,'p_statement','parser_v4.py',866),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','parser_v4.py',867),
  ('Statement -> GotoStmt','Statement',1,'p_statement','parser_v4.py',868),
  ('Statement -> Block','Statement',1,'p_statement','parser_v4.py',869),
  ('Statement -> IfStmt','Statement',1,'p_statement','parser_v4.py',870),
  ('Statement -> SwitchStmt','Statement',1,'p_statement','parser_v4.py',871),
  ('Statement -> ForStmt','Statement',1,'p_statement','parser_v4.py',872),
  ('SimpleStmt -> epsilon','SimpleStmt',1,'p_simple_stmt','parser_v4.py',878),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_simple_stmt','parser_v4.py',879),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','parser_v4.py',880),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','parser_v4.py',881),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','parser_v4.py',882),
  ('LabeledStmt -> Label COLON Statement','LabeledStmt',3,'p_labeled_statements','parser_v4.py',887),
  ('Label -> IDENT','Label',1,'p_label','parser_v4.py',891),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_expression_stmt','parser_v4.py',896),
  ('IncDecStmt -> Expression INC','IncDecStmt',2,'p_inc_dec','parser_v4.py',900),
  ('IncDecStmt -> Expression DEC','IncDecStmt',2,'p_inc_dec','parser_v4.py',901),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_assignment','parser_v4.py',909),
  ('assign_op -> AssignOp','assign_op',1,'p_assign_op','parser_v4.py',913),
  ('AssignOp -> ADD_ASSIGN','AssignOp',1,'p_AssignOp','parser_v4.py',917),
  ('AssignOp -> SUB_ASSIGN','AssignOp',1,'p_AssignOp','parser_v4.py',918),
  ('AssignOp -> MUL_ASSIGN','AssignOp',1,'p_AssignOp','parser_v4.py',919),
  ('AssignOp -> QUO_ASSIGN','AssignOp',1,'p_AssignOp','parser_v4.py',920),
  ('AssignOp -> REM_ASSIGN','AssignOp',1,'p_AssignOp','parser_v4.py',921),
  ('AssignOp -> AND_ASSIGN','AssignOp',1,'p_AssignOp','parser_v4.py',922),
  ('AssignOp -> OR_ASSIGN','AssignOp',1,'p_AssignOp','parser_v4.py',923),
  ('AssignOp -> XOR_ASSIGN','AssignOp',1,'p_AssignOp','parser_v4.py',924),
  ('AssignOp -> SHL_ASSIGN','AssignOp',1,'p_AssignOp','parser_v4.py',925),
  ('AssignOp -> SHR_ASSIGN','AssignOp',1,'p_AssignOp','parser_v4.py',926),
  ('AssignOp -> ASSIGN','AssignOp',1,'p_AssignOp','parser_v4.py',927),
  ('IfStmt -> IF Expression Block ElseOpt','IfStmt',4,'p_if_statement','parser_v4.py',932),
  ('SimpleStmtOpt -> SimpleStmt SEMICOLON','SimpleStmtOpt',2,'p_SimpleStmtOpt','parser_v4.py',936),
  ('SimpleStmtOpt -> epsilon','SimpleStmtOpt',1,'p_SimpleStmtOpt','parser_v4.py',937),
  ('ElseOpt -> ELSE IfStmt','ElseOpt',2,'p_else_opt','parser_v4.py',944),
  ('ElseOpt -> ELSE Block','ElseOpt',2,'p_else_opt','parser_v4.py',945),
  ('ElseOpt -> epsilon','ElseOpt',1,'p_else_opt','parser_v4.py',946),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_switch_statement','parser_v4.py',961),
  ('SwitchStmt -> TypeSwitchStmt','SwitchStmt',1,'p_switch_statement','parser_v4.py',962),
  ('ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE','ExprSwitchStmt',5,'p_expr_switch_stmt','parser_v4.py',967),
  ('ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause','ExprCaseClauseRep',2,'p_expr_case_clause_rep','parser_v4.py',971),
  ('ExprCaseClauseRep -> epsilon','ExprCaseClauseRep',1,'p_expr_case_clause_rep','parser_v4.py',972),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_expr_case_clause','parser_v4.py',979),
  ('ExprSwitchCase -> CASE ExpressionList','ExprSwitchCase',2,'p_expr_switch_case','parser_v4.py',983),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_expr_switch_case','parser_v4.py',984),
  ('TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE','TypeSwitchStmt',6,'p_type_switch_stmt','parser_v4.py',991),
  ('TypeSwitchGuard -> IdentifierOpt PrimaryExpr PERIOD LPAREN TYPE RPAREN','TypeSwitchGuard',6,'p_type_switch_guard','parser_v4.py',996),
  ('IdentifierOpt -> IDENT DEFINE','IdentifierOpt',2,'p_identifier_opt','parser_v4.py',1001),
  ('IdentifierOpt -> epsilon','IdentifierOpt',1,'p_identifier_opt','parser_v4.py',1002),
  ('TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause','TypeCaseClauseOpt',2,'p_type_case_clause_opt','parser_v4.py',1010),
  ('TypeCaseClauseOpt -> epsilon','TypeCaseClauseOpt',1,'p_type_case_clause_opt','parser_v4.py',1011),
  ('TypeCaseClause -> TypeSwitchCase COLON StatementList','TypeCaseClause',3,'p_type_case_clause','parser_v4.py',1018),
  ('TypeSwitchCase -> CASE TypeList','TypeSwitchCase',2,'p_type_switch_case','parser_v4.py',1023),
  ('TypeSwitchCase -> DEFAULT','TypeSwitchCase',1,'p_type_switch_case','parser_v4.py',1024),
  ('TypeList -> Type TypeRep','TypeList',2,'p_type_list','parser_v4.py',1031),
  ('TypeRep -> TypeRep COMMA Type','TypeRep',3,'p_type_rep','parser_v4.py',1035),
  ('TypeRep -> epsilon','TypeRep',1,'p_type_rep','parser_v4.py',1036),
  ('ForStmt -> FOR ConditionBlockOpt Block','ForStmt',3,'p_for','parser_v4.py',1051),
  ('ConditionBlockOpt -> epsilon','ConditionBlockOpt',1,'p_conditionblockopt','parser_v4.py',1055),
  ('ConditionBlockOpt -> Condition','ConditionBlockOpt',1,'p_conditionblockopt','parser_v4.py',1056),
  ('ConditionBlockOpt -> ForClause','ConditionBlockOpt',1,'p_conditionblockopt','parser_v4.py',1057),
  ('ConditionBlockOpt -> RangeClause','ConditionBlockOpt',1,'p_conditionblockopt','parser_v4.py',1058),
  ('Condition -> Expression','Condition',1,'p_condition','parser_v4.py',1062),
  ('ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt','ForClause',5,'p_forclause','parser_v4.py',1066),
  ('ConditionOpt -> epsilon','ConditionOpt',1,'p_conditionopt','parser_v4.py',1080),
  ('ConditionOpt -> Condition','ConditionOpt',1,'p_conditionopt','parser_v4.py',1081),
  ('RangeClause -> ExpressionIdentListOpt RANGE Expression','RangeClause',3,'p_rageclause','parser_v4.py',1094),
  ('ExpressionIdentListOpt -> epsilon','ExpressionIdentListOpt',1,'p_expression_ident_listopt','parser_v4.py',1098),
  ('ExpressionIdentListOpt -> ExpressionIdentifier','ExpressionIdentListOpt',1,'p_expression_ident_listopt','parser_v4.py',1099),
  ('ExpressionIdentifier -> ExpressionList ASSIGN','ExpressionIdentifier',2,'p_expressionidentifier','parser_v4.py',1103),
  ('ReturnStmt -> RETURN ExpressionListPureOpt','ReturnStmt',2,'p_return','parser_v4.py',1110),
  ('ExpressionListPureOpt -> ExpressionList','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser_v4.py',1114),
  ('ExpressionListPureOpt -> epsilon','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser_v4.py',1115),
  ('BreakStmt -> BREAK LabelOpt','BreakStmt',2,'p_break','parser_v4.py',1119),
  ('ContinueStmt -> CONTINUE LabelOpt','ContinueStmt',2,'p_continue','parser_v4.py',1123),
  ('LabelOpt -> Label','LabelOpt',1,'p_labelopt','parser_v4.py',1127),
  ('LabelOpt -> epsilon','LabelOpt',1,'p_labelopt','parser_v4.py',1128),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_goto','parser_v4.py',1132),
  ('SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep','SourceFile',4,'p_source_file','parser_v4.py',1139),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','parser_v4.py',1143),
  ('ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON','ImportDeclRep',3,'p_import_decl_rep','parser_v4.py',1144),
  ('TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON','TopLevelDeclRep',3,'p_toplevel_decl_rep','parser_v4.py',1151),
  ('TopLevelDeclRep -> epsilon','TopLevelDeclRep',1,'p_toplevel_decl_rep','parser_v4.py',1152),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_package_clause','parser_v4.py',1162),
  ('PackageName -> IDENT','PackageName',1,'p_package_name','parser_v4.py',1167),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser_v4.py',1174),
  ('ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN','ImportDecl',4,'p_import_decl','parser_v4.py',1175),
  ('ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON','ImportSpecRep',3,'p_import_spec_rep','parser_v4.py',1182),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','parser_v4.py',1183),
  ('ImportSpec -> PackageNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','parser_v4.py',1190),
  ('PackageNameDotOpt -> PERIOD','PackageNameDotOpt',1,'p_package_name_dot_opt','parser_v4.py',1194),
  ('PackageNameDotOpt -> PackageName','PackageNameDotOpt',1,'p_package_name_dot_opt','parser_v4.py',1195),
  ('PackageNameDotOpt -> epsilon','PackageNameDotOpt',1,'p_package_name_dot_opt','parser_v4.py',1196),
  ('ImportPath -> STRING','ImportPath',1,'p_import_path','parser_v4.py',1203),
  ('epsilon -> <empty>','epsilon',0,'p_empty','parser_v4.py',1209),
]

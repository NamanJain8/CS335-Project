Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    CHAR
    AND_NOT
    AND_NOT_ASSIGN
    ARROW
    ELLIPSIS
    SELECT
    INTERFACE
    DEFER
    GO
    CHAN
    MAP
    FALLTHROUGH

Grammar

Rule 0     S' -> start
Rule 1     start -> SourceFile
Rule 2     Type -> TypeName
Rule 3     Type -> TypeLit
Rule 4     Type -> LPAREN Type RPAREN
Rule 5     TypeName -> TypeToken
Rule 6     TypeName -> QualifiedIdent
Rule 7     TypeToken -> INT
Rule 8     TypeToken -> FLOAT
Rule 9     TypeToken -> IMAG
Rule 10    TypeToken -> STRING
Rule 11    TypeToken -> BOOL
Rule 12    TypeToken -> TYPE IDENT
Rule 13    TypeLit -> ArrayType
Rule 14    TypeLit -> StructType
Rule 15    TypeLit -> PointerType
Rule 16    TypeOpt -> Type
Rule 17    TypeOpt -> epsilon
Rule 18    ArrayType -> LBRACK ArrayLength RBRACK ElementType
Rule 19    ArrayLength -> Expression
Rule 20    ElementType -> Type
Rule 21    StructType -> STRUCT LBRACE FieldDeclRep RBRACE
Rule 22    FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON
Rule 23    FieldDeclRep -> epsilon
Rule 24    FieldDecl -> IdentifierList Type TagOpt
Rule 25    TagOpt -> Tag
Rule 26    TagOpt -> epsilon
Rule 27    Tag -> STRING_LITERAL
Rule 28    PointerType -> MUL BaseType
Rule 29    BaseType -> Type
Rule 30    Signature -> Parameters ResultOpt
Rule 31    ResultOpt -> Result
Rule 32    ResultOpt -> epsilon
Rule 33    Result -> Parameters
Rule 34    Result -> Type
Rule 35    Parameters -> LPAREN ParameterListOpt RPAREN
Rule 36    ParameterListOpt -> ParametersList
Rule 37    ParameterListOpt -> epsilon
Rule 38    ParametersList -> Type
Rule 39    ParametersList -> IdentifierList Type
Rule 40    ParametersList -> ParameterDeclCommaRep
Rule 41    ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl
Rule 42    ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl
Rule 43    ParameterDecl -> IdentifierList Type
Rule 44    ParameterDecl -> Type
Rule 45    Block -> LBRACE StatementList RBRACE
Rule 46    StatementList -> StatementRep
Rule 47    StatementRep -> StatementRep Statement SEMICOLON
Rule 48    StatementRep -> epsilon
Rule 49    Declaration -> ConstDecl
Rule 50    Declaration -> TypeDecl
Rule 51    Declaration -> VarDecl
Rule 52    TopLevelDecl -> Declaration
Rule 53    TopLevelDecl -> FunctionDecl
Rule 54    ConstDecl -> CONST ConstSpec
Rule 55    ConstDecl -> CONST LPAREN ConstSpecRep RPAREN
Rule 56    ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON
Rule 57    ConstSpecRep -> epsilon
Rule 58    ConstSpec -> IdentifierList TypeExprListOpt
Rule 59    TypeExprListOpt -> TypeOpt ASSIGN ExpressionList
Rule 60    TypeExprListOpt -> epsilon
Rule 61    IdentifierList -> IDENT IdentifierRep
Rule 62    IdentifierRep -> IdentifierRep COMMA IDENT
Rule 63    IdentifierRep -> epsilon
Rule 64    ExpressionList -> Expression ExpressionRep
Rule 65    ExpressionRep -> ExpressionRep COMMA Expression
Rule 66    ExpressionRep -> epsilon
Rule 67    TypeDecl -> TYPE TypeSpec
Rule 68    TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN
Rule 69    TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON
Rule 70    TypeSpecRep -> epsilon
Rule 71    TypeSpec -> AliasDecl
Rule 72    TypeSpec -> TypeDef
Rule 73    AliasDecl -> IDENT ASSIGN Type
Rule 74    TypeDef -> IDENT Type
Rule 75    VarDecl -> VAR VarSpec
Rule 76    VarDecl -> VAR LPAREN VarSpecRep RPAREN
Rule 77    VarSpecRep -> VarSpecRep VarSpec SEMICOLON
Rule 78    VarSpecRep -> epsilon
Rule 79    VarSpec -> IdentifierList Type ExpressionListOpt
Rule 80    VarSpec -> IdentifierList ASSIGN ExpressionList
Rule 81    ExpressionListOpt -> ASSIGN ExpressionList
Rule 82    ExpressionListOpt -> epsilon
Rule 83    ShortVarDecl -> IDENT DEFINE Expression
Rule 84    FunctionDecl -> FUNC FunctionName Function
Rule 85    FunctionDecl -> FUNC FunctionName Signature
Rule 86    FunctionName -> IDENT
Rule 87    Function -> Signature FunctionBody
Rule 88    FunctionBody -> Block
Rule 89    Operand -> Literal
Rule 90    Operand -> OperandName
Rule 91    Operand -> LPAREN Expression RPAREN
Rule 92    Literal -> BasicLit
Rule 93    BasicLit -> INT_LITERAL
Rule 94    BasicLit -> FLOAT_LITERAL
Rule 95    BasicLit -> STRING_LITERAL
Rule 96    OperandName -> IDENT
Rule 97    QualifiedIdent -> IDENT PERIOD TypeName
Rule 98    CompositeLit -> LiteralType LiteralValue
Rule 99    LiteralType -> ArrayType
Rule 100   LiteralType -> ElementType
Rule 101   LiteralType -> TypeName
Rule 102   LiteralValue -> LBRACE ElementListOpt RBRACE
Rule 103   ElementListOpt -> ElementList
Rule 104   ElementListOpt -> epsilon
Rule 105   ElementList -> KeyedElement KeyedElementCommaRep
Rule 106   KeyedElementCommaRep -> KeyedElementCommaRep COMMA KeyedElement
Rule 107   KeyedElementCommaRep -> epsilon
Rule 108   KeyedElement -> Key COLON Element
Rule 109   KeyedElement -> Element
Rule 110   Key -> FieldName
Rule 111   Key -> Expression
Rule 112   Key -> LiteralValue
Rule 113   FieldName -> IDENT
Rule 114   Element -> Expression
Rule 115   Element -> LiteralValue
Rule 116   PrimaryExpr -> Operand
Rule 117   PrimaryExpr -> PrimaryExpr Selector
Rule 118   PrimaryExpr -> PrimaryExpr Index
Rule 119   PrimaryExpr -> PrimaryExpr Slice
Rule 120   PrimaryExpr -> PrimaryExpr TypeAssertion
Rule 121   PrimaryExpr -> PrimaryExpr Arguments
Rule 122   Selector -> PERIOD IDENT
Rule 123   Index -> LBRACK Expression RBRACK
Rule 124   Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
Rule 125   Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK
Rule 126   TypeAssertion -> PERIOD LPAREN Type RPAREN
Rule 127   Arguments -> LPAREN ExpressionListTypeOpt RPAREN
Rule 128   ExpressionListTypeOpt -> ExpressionList
Rule 129   ExpressionListTypeOpt -> epsilon
Rule 130   ExpressionListCommaOpt -> COMMA ExpressionList
Rule 131   ExpressionListCommaOpt -> epsilon
Rule 132   Expression -> UnaryExpr
Rule 133   Expression -> Expression BinaryOp Expression
Rule 134   ExpressionOpt -> Expression
Rule 135   ExpressionOpt -> epsilon
Rule 136   UnaryExpr -> PrimaryExpr
Rule 137   UnaryExpr -> UnaryOp UnaryExpr
Rule 138   UnaryExpr -> NOT UnaryExpr
Rule 139   BinaryOp -> LOR
Rule 140   BinaryOp -> LAND
Rule 141   BinaryOp -> RelOp
Rule 142   BinaryOp -> AddMulOp
Rule 143   RelOp -> EQL
Rule 144   RelOp -> NEQ
Rule 145   RelOp -> LSS
Rule 146   RelOp -> GTR
Rule 147   RelOp -> LEQ
Rule 148   RelOp -> GEQ
Rule 149   AddMulOp -> UnaryOp
Rule 150   AddMulOp -> OR
Rule 151   AddMulOp -> XOR
Rule 152   AddMulOp -> QUO
Rule 153   AddMulOp -> REM
Rule 154   AddMulOp -> SHL
Rule 155   AddMulOp -> SHR
Rule 156   UnaryOp -> ADD
Rule 157   UnaryOp -> SUB
Rule 158   UnaryOp -> MUL
Rule 159   UnaryOp -> AND
Rule 160   Statement -> Declaration
Rule 161   Statement -> LabeledStmt
Rule 162   Statement -> SimpleStmt
Rule 163   Statement -> ReturnStmt
Rule 164   Statement -> BreakStmt
Rule 165   Statement -> ContinueStmt
Rule 166   Statement -> GotoStmt
Rule 167   Statement -> Block
Rule 168   Statement -> IfStmt
Rule 169   Statement -> SwitchStmt
Rule 170   Statement -> ForStmt
Rule 171   SimpleStmt -> epsilon
Rule 172   SimpleStmt -> ExpressionStmt
Rule 173   SimpleStmt -> IncDecStmt
Rule 174   SimpleStmt -> Assignment
Rule 175   SimpleStmt -> ShortVarDecl
Rule 176   LabeledStmt -> Label COLON Statement
Rule 177   Label -> IDENT
Rule 178   ExpressionStmt -> Expression
Rule 179   IncDecStmt -> Expression INC
Rule 180   IncDecStmt -> Expression DEC
Rule 181   Assignment -> ExpressionList assign_op ExpressionList
Rule 182   assign_op -> AssignOp
Rule 183   AssignOp -> ADD_ASSIGN
Rule 184   AssignOp -> SUB_ASSIGN
Rule 185   AssignOp -> MUL_ASSIGN
Rule 186   AssignOp -> QUO_ASSIGN
Rule 187   AssignOp -> REM_ASSIGN
Rule 188   AssignOp -> AND_ASSIGN
Rule 189   AssignOp -> OR_ASSIGN
Rule 190   AssignOp -> XOR_ASSIGN
Rule 191   AssignOp -> SHL_ASSIGN
Rule 192   AssignOp -> SHR_ASSIGN
Rule 193   AssignOp -> ASSIGN
Rule 194   IfStmt -> IF Expression Block ElseOpt
Rule 195   SimpleStmtOpt -> SimpleStmt SEMICOLON
Rule 196   SimpleStmtOpt -> epsilon
Rule 197   ElseOpt -> ELSE IfStmt
Rule 198   ElseOpt -> ELSE Block
Rule 199   ElseOpt -> epsilon
Rule 200   SwitchStmt -> ExprSwitchStmt
Rule 201   SwitchStmt -> TypeSwitchStmt
Rule 202   ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE
Rule 203   ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause
Rule 204   ExprCaseClauseRep -> epsilon
Rule 205   ExprCaseClause -> ExprSwitchCase COLON StatementList
Rule 206   ExprSwitchCase -> CASE ExpressionList
Rule 207   ExprSwitchCase -> DEFAULT
Rule 208   TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
Rule 209   TypeSwitchGuard -> IdentifierOpt PrimaryExpr PERIOD LPAREN TYPE RPAREN
Rule 210   IdentifierOpt -> IDENT DEFINE
Rule 211   IdentifierOpt -> epsilon
Rule 212   TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause
Rule 213   TypeCaseClauseOpt -> epsilon
Rule 214   TypeCaseClause -> TypeSwitchCase COLON StatementList
Rule 215   TypeSwitchCase -> CASE TypeList
Rule 216   TypeSwitchCase -> DEFAULT
Rule 217   TypeList -> Type TypeRep
Rule 218   TypeRep -> TypeRep COMMA Type
Rule 219   TypeRep -> epsilon
Rule 220   ForStmt -> FOR ConditionBlockOpt Block
Rule 221   ConditionBlockOpt -> epsilon
Rule 222   ConditionBlockOpt -> Condition
Rule 223   ConditionBlockOpt -> ForClause
Rule 224   ConditionBlockOpt -> RangeClause
Rule 225   Condition -> Expression
Rule 226   ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt
Rule 227   ConditionOpt -> epsilon
Rule 228   ConditionOpt -> Condition
Rule 229   RangeClause -> ExpressionIdentListOpt RANGE Expression
Rule 230   ExpressionIdentListOpt -> epsilon
Rule 231   ExpressionIdentListOpt -> ExpressionIdentifier
Rule 232   ExpressionIdentifier -> ExpressionList ASSIGN
Rule 233   ReturnStmt -> RETURN ExpressionListPureOpt
Rule 234   ExpressionListPureOpt -> ExpressionList
Rule 235   ExpressionListPureOpt -> epsilon
Rule 236   BreakStmt -> BREAK LabelOpt
Rule 237   ContinueStmt -> CONTINUE LabelOpt
Rule 238   LabelOpt -> Label
Rule 239   LabelOpt -> epsilon
Rule 240   GotoStmt -> GOTO Label
Rule 241   SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep
Rule 242   ImportDeclRep -> epsilon
Rule 243   ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON
Rule 244   TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON
Rule 245   TopLevelDeclRep -> epsilon
Rule 246   PackageClause -> PACKAGE PackageName
Rule 247   PackageName -> IDENT
Rule 248   ImportDecl -> IMPORT ImportSpec
Rule 249   ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN
Rule 250   ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON
Rule 251   ImportSpecRep -> epsilon
Rule 252   ImportSpec -> PackageNameDotOpt ImportPath
Rule 253   PackageNameDotOpt -> PERIOD
Rule 254   PackageNameDotOpt -> PackageName
Rule 255   PackageNameDotOpt -> epsilon
Rule 256   ImportPath -> STRING_LITERAL
Rule 257   epsilon -> <empty>

Terminals, with rules where they appear

ADD                  : 156
ADD_ASSIGN           : 183
AND                  : 159
AND_ASSIGN           : 188
AND_NOT              : 
AND_NOT_ASSIGN       : 
ARROW                : 
ASSIGN               : 59 73 80 81 193 232
BOOL                 : 11
BREAK                : 236
CASE                 : 206 215
CHAN                 : 
CHAR                 : 
COLON                : 108 124 125 125 176 205 214
COMMA                : 41 42 62 65 106 130 218
CONST                : 54 55
CONTINUE             : 237
DEC                  : 180
DEFAULT              : 207 216
DEFER                : 
DEFINE               : 83 210
ELLIPSIS             : 
ELSE                 : 197 198
EQL                  : 143
FALLTHROUGH          : 
FLOAT                : 8
FLOAT_LITERAL        : 94
FOR                  : 220
FUNC                 : 84 85
GEQ                  : 148
GO                   : 
GOTO                 : 240
GTR                  : 146
IDENT                : 12 61 62 73 74 83 86 96 97 113 122 177 210 247
IF                   : 194
IMAG                 : 9
IMPORT               : 248 249
INC                  : 179
INT                  : 7
INTERFACE            : 
INT_LITERAL          : 93
LAND                 : 140
LBRACE               : 21 45 102 202 208
LBRACK               : 18 123 124 125
LEQ                  : 147
LOR                  : 139
LPAREN               : 4 35 55 68 76 91 126 127 209 249
LSS                  : 145
MAP                  : 
MUL                  : 28 158
MUL_ASSIGN           : 185
NEQ                  : 144
NOT                  : 138
OR                   : 150
OR_ASSIGN            : 189
PACKAGE              : 246
PERIOD               : 97 122 126 209 253
QUO                  : 152
QUO_ASSIGN           : 186
RANGE                : 229
RBRACE               : 21 45 102 202 208
RBRACK               : 18 123 124 125
REM                  : 153
REM_ASSIGN           : 187
RETURN               : 233
RPAREN               : 4 35 55 68 76 91 126 127 209 249
SELECT               : 
SEMICOLON            : 22 47 56 69 77 195 226 226 241 243 244 250
SHL                  : 154
SHL_ASSIGN           : 191
SHR                  : 155
SHR_ASSIGN           : 192
STRING               : 10
STRING_LITERAL       : 27 95 256
STRUCT               : 21
SUB                  : 157
SUB_ASSIGN           : 184
SWITCH               : 202 208
TYPE                 : 12 67 68 209
VAR                  : 75 76
XOR                  : 151
XOR_ASSIGN           : 190
error                : 

Nonterminals, with rules where they appear

AddMulOp             : 142
AliasDecl            : 71
Arguments            : 121
ArrayLength          : 18
ArrayType            : 13 99
AssignOp             : 182
Assignment           : 174
BaseType             : 28
BasicLit             : 92
BinaryOp             : 133
Block                : 88 167 194 198 220
BreakStmt            : 164
CompositeLit         : 
Condition            : 222 228
ConditionBlockOpt    : 220
ConditionOpt         : 226
ConstDecl            : 49
ConstSpec            : 54 56
ConstSpecRep         : 55 56
ContinueStmt         : 165
Declaration          : 52 160
Element              : 108 109
ElementList          : 103
ElementListOpt       : 102
ElementType          : 18 100
ElseOpt              : 194
ExprCaseClause       : 203
ExprCaseClauseRep    : 202 203
ExprSwitchCase       : 205
ExprSwitchStmt       : 200
Expression           : 19 64 65 83 91 111 114 123 125 125 133 133 134 178 179 180 194 225 229
ExpressionIdentListOpt : 229
ExpressionIdentifier : 231
ExpressionList       : 59 80 81 128 130 181 181 206 232 234
ExpressionListCommaOpt : 
ExpressionListOpt    : 79
ExpressionListPureOpt : 233
ExpressionListTypeOpt : 127
ExpressionOpt        : 124 124 125 202
ExpressionRep        : 64 65
ExpressionStmt       : 172
FieldDecl            : 22
FieldDeclRep         : 21 22
FieldName            : 110
ForClause            : 223
ForStmt              : 170
Function             : 84
FunctionBody         : 87
FunctionDecl         : 53
FunctionName         : 84 85
GotoStmt             : 166
IdentifierList       : 24 39 43 58 79 80
IdentifierOpt        : 209
IdentifierRep        : 61 62
IfStmt               : 168 197
ImportDecl           : 243
ImportDeclRep        : 241 243
ImportPath           : 252
ImportSpec           : 248 250
ImportSpecRep        : 249 250
IncDecStmt           : 173
Index                : 118
Key                  : 108
KeyedElement         : 105 106
KeyedElementCommaRep : 105 106
Label                : 176 238 240
LabelOpt             : 236 237
LabeledStmt          : 161
Literal              : 89
LiteralType          : 98
LiteralValue         : 98 112 115
Operand              : 116
OperandName          : 90
PackageClause        : 241
PackageName          : 246 254
PackageNameDotOpt    : 252
ParameterDecl        : 41 42 42
ParameterDeclCommaRep : 40 41
ParameterListOpt     : 35
Parameters           : 30 33
ParametersList       : 36
PointerType          : 15
PrimaryExpr          : 117 118 119 120 121 136 209
QualifiedIdent       : 6
RangeClause          : 224
RelOp                : 141
Result               : 31
ResultOpt            : 30
ReturnStmt           : 163
Selector             : 117
ShortVarDecl         : 175
Signature            : 85 87
SimpleStmt           : 162 195 226 226
SimpleStmtOpt        : 208
Slice                : 119
SourceFile           : 1
Statement            : 47 176
StatementList        : 45 205 214
StatementRep         : 46 47
StructType           : 14
SwitchStmt           : 169
Tag                  : 25
TagOpt               : 24
TopLevelDecl         : 244
TopLevelDeclRep      : 241 244
Type                 : 4 16 20 24 29 34 38 39 43 44 73 74 79 126 217 218
TypeAssertion        : 120
TypeCaseClause       : 212
TypeCaseClauseOpt    : 208 212
TypeDecl             : 50
TypeDef              : 72
TypeExprListOpt      : 58
TypeList             : 215
TypeLit              : 3
TypeName             : 2 97 101
TypeOpt              : 59
TypeRep              : 217 218
TypeSpec             : 67 69
TypeSpecRep          : 68 69
TypeSwitchCase       : 214
TypeSwitchGuard      : 208
TypeSwitchStmt       : 201
TypeToken            : 5
UnaryExpr            : 132 137 138
UnaryOp              : 137 149
VarDecl              : 51
VarSpec              : 75 77
VarSpecRep           : 76 77
assign_op            : 181
epsilon              : 17 23 26 32 37 48 57 60 63 66 70 78 82 104 107 129 131 135 171 196 199 204 211 213 219 221 227 230 235 239 242 245 251 255
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . SourceFile
    (241) SourceFile -> . PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep
    (246) PackageClause -> . PACKAGE PackageName

    PACKAGE         shift and go to state 4

    start                          shift and go to state 1
    SourceFile                     shift and go to state 2
    PackageClause                  shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> SourceFile .

    $end            reduce using rule 1 (start -> SourceFile .)


state 3

    (241) SourceFile -> PackageClause . SEMICOLON ImportDeclRep TopLevelDeclRep

    SEMICOLON       shift and go to state 5


state 4

    (246) PackageClause -> PACKAGE . PackageName
    (247) PackageName -> . IDENT

    IDENT           shift and go to state 7

    PackageName                    shift and go to state 6

state 5

    (241) SourceFile -> PackageClause SEMICOLON . ImportDeclRep TopLevelDeclRep
    (242) ImportDeclRep -> . epsilon
    (243) ImportDeclRep -> . ImportDeclRep ImportDecl SEMICOLON
    (257) epsilon -> .

    IMPORT          reduce using rule 257 (epsilon -> .)
    FUNC            reduce using rule 257 (epsilon -> .)
    CONST           reduce using rule 257 (epsilon -> .)
    TYPE            reduce using rule 257 (epsilon -> .)
    VAR             reduce using rule 257 (epsilon -> .)
    $end            reduce using rule 257 (epsilon -> .)

    ImportDeclRep                  shift and go to state 8
    epsilon                        shift and go to state 9

state 6

    (246) PackageClause -> PACKAGE PackageName .

    SEMICOLON       reduce using rule 246 (PackageClause -> PACKAGE PackageName .)


state 7

    (247) PackageName -> IDENT .

    SEMICOLON       reduce using rule 247 (PackageName -> IDENT .)
    STRING_LITERAL  reduce using rule 247 (PackageName -> IDENT .)


state 8

    (241) SourceFile -> PackageClause SEMICOLON ImportDeclRep . TopLevelDeclRep
    (243) ImportDeclRep -> ImportDeclRep . ImportDecl SEMICOLON
    (244) TopLevelDeclRep -> . TopLevelDeclRep TopLevelDecl SEMICOLON
    (245) TopLevelDeclRep -> . epsilon
    (248) ImportDecl -> . IMPORT ImportSpec
    (249) ImportDecl -> . IMPORT LPAREN ImportSpecRep RPAREN
    (257) epsilon -> .

    IMPORT          shift and go to state 13
    FUNC            reduce using rule 257 (epsilon -> .)
    CONST           reduce using rule 257 (epsilon -> .)
    TYPE            reduce using rule 257 (epsilon -> .)
    VAR             reduce using rule 257 (epsilon -> .)
    $end            reduce using rule 257 (epsilon -> .)

    TopLevelDeclRep                shift and go to state 10
    ImportDecl                     shift and go to state 11
    epsilon                        shift and go to state 12

state 9

    (242) ImportDeclRep -> epsilon .

    IMPORT          reduce using rule 242 (ImportDeclRep -> epsilon .)
    FUNC            reduce using rule 242 (ImportDeclRep -> epsilon .)
    CONST           reduce using rule 242 (ImportDeclRep -> epsilon .)
    TYPE            reduce using rule 242 (ImportDeclRep -> epsilon .)
    VAR             reduce using rule 242 (ImportDeclRep -> epsilon .)
    $end            reduce using rule 242 (ImportDeclRep -> epsilon .)


state 10

    (241) SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep .
    (244) TopLevelDeclRep -> TopLevelDeclRep . TopLevelDecl SEMICOLON
    (52) TopLevelDecl -> . Declaration
    (53) TopLevelDecl -> . FunctionDecl
    (49) Declaration -> . ConstDecl
    (50) Declaration -> . TypeDecl
    (51) Declaration -> . VarDecl
    (84) FunctionDecl -> . FUNC FunctionName Function
    (85) FunctionDecl -> . FUNC FunctionName Signature
    (54) ConstDecl -> . CONST ConstSpec
    (55) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (67) TypeDecl -> . TYPE TypeSpec
    (68) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (75) VarDecl -> . VAR VarSpec
    (76) VarDecl -> . VAR LPAREN VarSpecRep RPAREN

    $end            reduce using rule 241 (SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep .)
    FUNC            shift and go to state 20
    CONST           shift and go to state 21
    TYPE            shift and go to state 22
    VAR             shift and go to state 23

    TopLevelDecl                   shift and go to state 14
    Declaration                    shift and go to state 15
    FunctionDecl                   shift and go to state 16
    ConstDecl                      shift and go to state 17
    TypeDecl                       shift and go to state 18
    VarDecl                        shift and go to state 19

state 11

    (243) ImportDeclRep -> ImportDeclRep ImportDecl . SEMICOLON

    SEMICOLON       shift and go to state 24


state 12

    (245) TopLevelDeclRep -> epsilon .

    FUNC            reduce using rule 245 (TopLevelDeclRep -> epsilon .)
    CONST           reduce using rule 245 (TopLevelDeclRep -> epsilon .)
    TYPE            reduce using rule 245 (TopLevelDeclRep -> epsilon .)
    VAR             reduce using rule 245 (TopLevelDeclRep -> epsilon .)
    $end            reduce using rule 245 (TopLevelDeclRep -> epsilon .)


state 13

    (248) ImportDecl -> IMPORT . ImportSpec
    (249) ImportDecl -> IMPORT . LPAREN ImportSpecRep RPAREN
    (252) ImportSpec -> . PackageNameDotOpt ImportPath
    (253) PackageNameDotOpt -> . PERIOD
    (254) PackageNameDotOpt -> . PackageName
    (255) PackageNameDotOpt -> . epsilon
    (247) PackageName -> . IDENT
    (257) epsilon -> .

    LPAREN          shift and go to state 26
    PERIOD          shift and go to state 28
    IDENT           shift and go to state 7
    STRING_LITERAL  reduce using rule 257 (epsilon -> .)

    ImportSpec                     shift and go to state 25
    PackageNameDotOpt              shift and go to state 27
    PackageName                    shift and go to state 29
    epsilon                        shift and go to state 30

state 14

    (244) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl . SEMICOLON

    SEMICOLON       shift and go to state 31


state 15

    (52) TopLevelDecl -> Declaration .

    SEMICOLON       reduce using rule 52 (TopLevelDecl -> Declaration .)


state 16

    (53) TopLevelDecl -> FunctionDecl .

    SEMICOLON       reduce using rule 53 (TopLevelDecl -> FunctionDecl .)


state 17

    (49) Declaration -> ConstDecl .

    SEMICOLON       reduce using rule 49 (Declaration -> ConstDecl .)


state 18

    (50) Declaration -> TypeDecl .

    SEMICOLON       reduce using rule 50 (Declaration -> TypeDecl .)


state 19

    (51) Declaration -> VarDecl .

    SEMICOLON       reduce using rule 51 (Declaration -> VarDecl .)


state 20

    (84) FunctionDecl -> FUNC . FunctionName Function
    (85) FunctionDecl -> FUNC . FunctionName Signature
    (86) FunctionName -> . IDENT

    IDENT           shift and go to state 33

    FunctionName                   shift and go to state 32

state 21

    (54) ConstDecl -> CONST . ConstSpec
    (55) ConstDecl -> CONST . LPAREN ConstSpecRep RPAREN
    (58) ConstSpec -> . IdentifierList TypeExprListOpt
    (61) IdentifierList -> . IDENT IdentifierRep

    LPAREN          shift and go to state 35
    IDENT           shift and go to state 37

    ConstSpec                      shift and go to state 34
    IdentifierList                 shift and go to state 36

state 22

    (67) TypeDecl -> TYPE . TypeSpec
    (68) TypeDecl -> TYPE . LPAREN TypeSpecRep RPAREN
    (71) TypeSpec -> . AliasDecl
    (72) TypeSpec -> . TypeDef
    (73) AliasDecl -> . IDENT ASSIGN Type
    (74) TypeDef -> . IDENT Type

    LPAREN          shift and go to state 39
    IDENT           shift and go to state 42

    TypeSpec                       shift and go to state 38
    AliasDecl                      shift and go to state 40
    TypeDef                        shift and go to state 41

state 23

    (75) VarDecl -> VAR . VarSpec
    (76) VarDecl -> VAR . LPAREN VarSpecRep RPAREN
    (79) VarSpec -> . IdentifierList Type ExpressionListOpt
    (80) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (61) IdentifierList -> . IDENT IdentifierRep

    LPAREN          shift and go to state 44
    IDENT           shift and go to state 37

    VarSpec                        shift and go to state 43
    IdentifierList                 shift and go to state 45

state 24

    (243) ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .

    IMPORT          reduce using rule 243 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    FUNC            reduce using rule 243 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    CONST           reduce using rule 243 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    TYPE            reduce using rule 243 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    VAR             reduce using rule 243 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    $end            reduce using rule 243 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)


state 25

    (248) ImportDecl -> IMPORT ImportSpec .

    SEMICOLON       reduce using rule 248 (ImportDecl -> IMPORT ImportSpec .)


state 26

    (249) ImportDecl -> IMPORT LPAREN . ImportSpecRep RPAREN
    (250) ImportSpecRep -> . ImportSpecRep ImportSpec SEMICOLON
    (251) ImportSpecRep -> . epsilon
    (257) epsilon -> .

    RPAREN          reduce using rule 257 (epsilon -> .)
    PERIOD          reduce using rule 257 (epsilon -> .)
    IDENT           reduce using rule 257 (epsilon -> .)
    STRING_LITERAL  reduce using rule 257 (epsilon -> .)

    ImportSpecRep                  shift and go to state 46
    epsilon                        shift and go to state 47

state 27

    (252) ImportSpec -> PackageNameDotOpt . ImportPath
    (256) ImportPath -> . STRING_LITERAL

    STRING_LITERAL  shift and go to state 49

    ImportPath                     shift and go to state 48

state 28

    (253) PackageNameDotOpt -> PERIOD .

    STRING_LITERAL  reduce using rule 253 (PackageNameDotOpt -> PERIOD .)


state 29

    (254) PackageNameDotOpt -> PackageName .

    STRING_LITERAL  reduce using rule 254 (PackageNameDotOpt -> PackageName .)


state 30

    (255) PackageNameDotOpt -> epsilon .

    STRING_LITERAL  reduce using rule 255 (PackageNameDotOpt -> epsilon .)


state 31

    (244) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .

    FUNC            reduce using rule 244 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    CONST           reduce using rule 244 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    TYPE            reduce using rule 244 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    VAR             reduce using rule 244 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    $end            reduce using rule 244 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)


state 32

    (84) FunctionDecl -> FUNC FunctionName . Function
    (85) FunctionDecl -> FUNC FunctionName . Signature
    (87) Function -> . Signature FunctionBody
    (30) Signature -> . Parameters ResultOpt
    (35) Parameters -> . LPAREN ParameterListOpt RPAREN

    LPAREN          shift and go to state 53

    Function                       shift and go to state 50
    Signature                      shift and go to state 51
    Parameters                     shift and go to state 52

state 33

    (86) FunctionName -> IDENT .

    LPAREN          reduce using rule 86 (FunctionName -> IDENT .)


state 34

    (54) ConstDecl -> CONST ConstSpec .

    SEMICOLON       reduce using rule 54 (ConstDecl -> CONST ConstSpec .)


state 35

    (55) ConstDecl -> CONST LPAREN . ConstSpecRep RPAREN
    (56) ConstSpecRep -> . ConstSpecRep ConstSpec SEMICOLON
    (57) ConstSpecRep -> . epsilon
    (257) epsilon -> .

    RPAREN          reduce using rule 257 (epsilon -> .)
    IDENT           reduce using rule 257 (epsilon -> .)

    ConstSpecRep                   shift and go to state 54
    epsilon                        shift and go to state 55

state 36

    (58) ConstSpec -> IdentifierList . TypeExprListOpt
    (59) TypeExprListOpt -> . TypeOpt ASSIGN ExpressionList
    (60) TypeExprListOpt -> . epsilon
    (16) TypeOpt -> . Type
    (17) TypeOpt -> . epsilon
    (257) epsilon -> .
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . IMAG
    (10) TypeToken -> . STRING
    (11) TypeToken -> . BOOL
    (12) TypeToken -> . TYPE IDENT
    (97) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    SEMICOLON       reduce using rule 257 (epsilon -> .)
    ASSIGN          reduce using rule 257 (epsilon -> .)
    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    IMAG            shift and go to state 70
    STRING          shift and go to state 71
    BOOL            shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    TypeExprListOpt                shift and go to state 56
    TypeOpt                        shift and go to state 57
    epsilon                        shift and go to state 58
    Type                           shift and go to state 59
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 37

    (61) IdentifierList -> IDENT . IdentifierRep
    (62) IdentifierRep -> . IdentifierRep COMMA IDENT
    (63) IdentifierRep -> . epsilon
    (257) epsilon -> .

    COMMA           reduce using rule 257 (epsilon -> .)
    LPAREN          reduce using rule 257 (epsilon -> .)
    INT             reduce using rule 257 (epsilon -> .)
    FLOAT           reduce using rule 257 (epsilon -> .)
    IMAG            reduce using rule 257 (epsilon -> .)
    STRING          reduce using rule 257 (epsilon -> .)
    BOOL            reduce using rule 257 (epsilon -> .)
    TYPE            reduce using rule 257 (epsilon -> .)
    IDENT           reduce using rule 257 (epsilon -> .)
    LBRACK          reduce using rule 257 (epsilon -> .)
    STRUCT          reduce using rule 257 (epsilon -> .)
    MUL             reduce using rule 257 (epsilon -> .)
    ASSIGN          reduce using rule 257 (epsilon -> .)
    SEMICOLON       reduce using rule 257 (epsilon -> .)

    IdentifierRep                  shift and go to state 78
    epsilon                        shift and go to state 79

state 38

    (67) TypeDecl -> TYPE TypeSpec .

    SEMICOLON       reduce using rule 67 (TypeDecl -> TYPE TypeSpec .)


state 39

    (68) TypeDecl -> TYPE LPAREN . TypeSpecRep RPAREN
    (69) TypeSpecRep -> . TypeSpecRep TypeSpec SEMICOLON
    (70) TypeSpecRep -> . epsilon
    (257) epsilon -> .

    RPAREN          reduce using rule 257 (epsilon -> .)
    IDENT           reduce using rule 257 (epsilon -> .)

    TypeSpecRep                    shift and go to state 80
    epsilon                        shift and go to state 81

state 40

    (71) TypeSpec -> AliasDecl .

    SEMICOLON       reduce using rule 71 (TypeSpec -> AliasDecl .)


state 41

    (72) TypeSpec -> TypeDef .

    SEMICOLON       reduce using rule 72 (TypeSpec -> TypeDef .)


state 42

    (73) AliasDecl -> IDENT . ASSIGN Type
    (74) TypeDef -> IDENT . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . IMAG
    (10) TypeToken -> . STRING
    (11) TypeToken -> . BOOL
    (12) TypeToken -> . TYPE IDENT
    (97) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    ASSIGN          shift and go to state 82
    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    IMAG            shift and go to state 70
    STRING          shift and go to state 71
    BOOL            shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Type                           shift and go to state 83
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 43

    (75) VarDecl -> VAR VarSpec .

    SEMICOLON       reduce using rule 75 (VarDecl -> VAR VarSpec .)


state 44

    (76) VarDecl -> VAR LPAREN . VarSpecRep RPAREN
    (77) VarSpecRep -> . VarSpecRep VarSpec SEMICOLON
    (78) VarSpecRep -> . epsilon
    (257) epsilon -> .

    RPAREN          reduce using rule 257 (epsilon -> .)
    IDENT           reduce using rule 257 (epsilon -> .)

    VarSpecRep                     shift and go to state 84
    epsilon                        shift and go to state 85

state 45

    (79) VarSpec -> IdentifierList . Type ExpressionListOpt
    (80) VarSpec -> IdentifierList . ASSIGN ExpressionList
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . IMAG
    (10) TypeToken -> . STRING
    (11) TypeToken -> . BOOL
    (12) TypeToken -> . TYPE IDENT
    (97) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    ASSIGN          shift and go to state 87
    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    IMAG            shift and go to state 70
    STRING          shift and go to state 71
    BOOL            shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Type                           shift and go to state 86
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 46

    (249) ImportDecl -> IMPORT LPAREN ImportSpecRep . RPAREN
    (250) ImportSpecRep -> ImportSpecRep . ImportSpec SEMICOLON
    (252) ImportSpec -> . PackageNameDotOpt ImportPath
    (253) PackageNameDotOpt -> . PERIOD
    (254) PackageNameDotOpt -> . PackageName
    (255) PackageNameDotOpt -> . epsilon
    (247) PackageName -> . IDENT
    (257) epsilon -> .

    RPAREN          shift and go to state 88
    PERIOD          shift and go to state 28
    IDENT           shift and go to state 7
    STRING_LITERAL  reduce using rule 257 (epsilon -> .)

    ImportSpec                     shift and go to state 89
    PackageNameDotOpt              shift and go to state 27
    PackageName                    shift and go to state 29
    epsilon                        shift and go to state 30

state 47

    (251) ImportSpecRep -> epsilon .

    RPAREN          reduce using rule 251 (ImportSpecRep -> epsilon .)
    PERIOD          reduce using rule 251 (ImportSpecRep -> epsilon .)
    IDENT           reduce using rule 251 (ImportSpecRep -> epsilon .)
    STRING_LITERAL  reduce using rule 251 (ImportSpecRep -> epsilon .)


state 48

    (252) ImportSpec -> PackageNameDotOpt ImportPath .

    SEMICOLON       reduce using rule 252 (ImportSpec -> PackageNameDotOpt ImportPath .)


state 49

    (256) ImportPath -> STRING_LITERAL .

    SEMICOLON       reduce using rule 256 (ImportPath -> STRING_LITERAL .)


state 50

    (84) FunctionDecl -> FUNC FunctionName Function .

    SEMICOLON       reduce using rule 84 (FunctionDecl -> FUNC FunctionName Function .)


state 51

    (85) FunctionDecl -> FUNC FunctionName Signature .
    (87) Function -> Signature . FunctionBody
    (88) FunctionBody -> . Block
    (45) Block -> . LBRACE StatementList RBRACE

    SEMICOLON       reduce using rule 85 (FunctionDecl -> FUNC FunctionName Signature .)
    LBRACE          shift and go to state 92

    FunctionBody                   shift and go to state 90
    Block                          shift and go to state 91

state 52

    (30) Signature -> Parameters . ResultOpt
    (31) ResultOpt -> . Result
    (32) ResultOpt -> . epsilon
    (33) Result -> . Parameters
    (34) Result -> . Type
    (257) epsilon -> .
    (35) Parameters -> . LPAREN ParameterListOpt RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . IMAG
    (10) TypeToken -> . STRING
    (11) TypeToken -> . BOOL
    (12) TypeToken -> . TYPE IDENT
    (97) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LBRACE          reduce using rule 257 (epsilon -> .)
    SEMICOLON       reduce using rule 257 (epsilon -> .)
    LPAREN          shift and go to state 98
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    IMAG            shift and go to state 70
    STRING          shift and go to state 71
    BOOL            shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Parameters                     shift and go to state 93
    ResultOpt                      shift and go to state 94
    Result                         shift and go to state 95
    epsilon                        shift and go to state 96
    Type                           shift and go to state 97
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 53

    (35) Parameters -> LPAREN . ParameterListOpt RPAREN
    (36) ParameterListOpt -> . ParametersList
    (37) ParameterListOpt -> . epsilon
    (38) ParametersList -> . Type
    (39) ParametersList -> . IdentifierList Type
    (40) ParametersList -> . ParameterDeclCommaRep
    (257) epsilon -> .
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (61) IdentifierList -> . IDENT IdentifierRep
    (41) ParameterDeclCommaRep -> . ParameterDeclCommaRep COMMA ParameterDecl
    (42) ParameterDeclCommaRep -> . ParameterDecl COMMA ParameterDecl
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (43) ParameterDecl -> . IdentifierList Type
    (44) ParameterDecl -> . Type
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . IMAG
    (10) TypeToken -> . STRING
    (11) TypeToken -> . BOOL
    (12) TypeToken -> . TYPE IDENT
    (97) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    RPAREN          reduce using rule 257 (epsilon -> .)
    LPAREN          shift and go to state 62
    IDENT           shift and go to state 105
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    IMAG            shift and go to state 70
    STRING          shift and go to state 71
    BOOL            shift and go to state 72
    TYPE            shift and go to state 73
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    ParameterListOpt               shift and go to state 99
    ParametersList                 shift and go to state 100
    epsilon                        shift and go to state 101
    Type                           shift and go to state 102
    IdentifierList                 shift and go to state 103
    ParameterDeclCommaRep          shift and go to state 104
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    ParameterDecl                  shift and go to state 106
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 54

    (55) ConstDecl -> CONST LPAREN ConstSpecRep . RPAREN
    (56) ConstSpecRep -> ConstSpecRep . ConstSpec SEMICOLON
    (58) ConstSpec -> . IdentifierList TypeExprListOpt
    (61) IdentifierList -> . IDENT IdentifierRep

    RPAREN          shift and go to state 107
    IDENT           shift and go to state 37

    ConstSpec                      shift and go to state 108
    IdentifierList                 shift and go to state 36

state 55

    (57) ConstSpecRep -> epsilon .

    RPAREN          reduce using rule 57 (ConstSpecRep -> epsilon .)
    IDENT           reduce using rule 57 (ConstSpecRep -> epsilon .)


state 56

    (58) ConstSpec -> IdentifierList TypeExprListOpt .

    SEMICOLON       reduce using rule 58 (ConstSpec -> IdentifierList TypeExprListOpt .)


state 57

    (59) TypeExprListOpt -> TypeOpt . ASSIGN ExpressionList

    ASSIGN          shift and go to state 109


state 58

    (60) TypeExprListOpt -> epsilon .
    (17) TypeOpt -> epsilon .

    SEMICOLON       reduce using rule 60 (TypeExprListOpt -> epsilon .)
    ASSIGN          reduce using rule 17 (TypeOpt -> epsilon .)


state 59

    (16) TypeOpt -> Type .

    ASSIGN          reduce using rule 16 (TypeOpt -> Type .)


state 60

    (2) Type -> TypeName .

    ASSIGN          reduce using rule 2 (Type -> TypeName .)
    SEMICOLON       reduce using rule 2 (Type -> TypeName .)
    LBRACE          reduce using rule 2 (Type -> TypeName .)
    RPAREN          reduce using rule 2 (Type -> TypeName .)
    COMMA           reduce using rule 2 (Type -> TypeName .)
    STRING_LITERAL  reduce using rule 2 (Type -> TypeName .)
    COLON           reduce using rule 2 (Type -> TypeName .)


state 61

    (3) Type -> TypeLit .

    ASSIGN          reduce using rule 3 (Type -> TypeLit .)
    SEMICOLON       reduce using rule 3 (Type -> TypeLit .)
    LBRACE          reduce using rule 3 (Type -> TypeLit .)
    RPAREN          reduce using rule 3 (Type -> TypeLit .)
    COMMA           reduce using rule 3 (Type -> TypeLit .)
    STRING_LITERAL  reduce using rule 3 (Type -> TypeLit .)
    COLON           reduce using rule 3 (Type -> TypeLit .)


state 62

    (4) Type -> LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . IMAG
    (10) TypeToken -> . STRING
    (11) TypeToken -> . BOOL
    (12) TypeToken -> . TYPE IDENT
    (97) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    IMAG            shift and go to state 70
    STRING          shift and go to state 71
    BOOL            shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Type                           shift and go to state 110
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 63

    (5) TypeName -> TypeToken .

    ASSIGN          reduce using rule 5 (TypeName -> TypeToken .)
    SEMICOLON       reduce using rule 5 (TypeName -> TypeToken .)
    LBRACE          reduce using rule 5 (TypeName -> TypeToken .)
    RPAREN          reduce using rule 5 (TypeName -> TypeToken .)
    COMMA           reduce using rule 5 (TypeName -> TypeToken .)
    STRING_LITERAL  reduce using rule 5 (TypeName -> TypeToken .)
    COLON           reduce using rule 5 (TypeName -> TypeToken .)


state 64

    (6) TypeName -> QualifiedIdent .

    ASSIGN          reduce using rule 6 (TypeName -> QualifiedIdent .)
    SEMICOLON       reduce using rule 6 (TypeName -> QualifiedIdent .)
    LBRACE          reduce using rule 6 (TypeName -> QualifiedIdent .)
    RPAREN          reduce using rule 6 (TypeName -> QualifiedIdent .)
    COMMA           reduce using rule 6 (TypeName -> QualifiedIdent .)
    STRING_LITERAL  reduce using rule 6 (TypeName -> QualifiedIdent .)
    COLON           reduce using rule 6 (TypeName -> QualifiedIdent .)


state 65

    (13) TypeLit -> ArrayType .

    ASSIGN          reduce using rule 13 (TypeLit -> ArrayType .)
    SEMICOLON       reduce using rule 13 (TypeLit -> ArrayType .)
    LBRACE          reduce using rule 13 (TypeLit -> ArrayType .)
    RPAREN          reduce using rule 13 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 13 (TypeLit -> ArrayType .)
    STRING_LITERAL  reduce using rule 13 (TypeLit -> ArrayType .)
    COLON           reduce using rule 13 (TypeLit -> ArrayType .)


state 66

    (14) TypeLit -> StructType .

    ASSIGN          reduce using rule 14 (TypeLit -> StructType .)
    SEMICOLON       reduce using rule 14 (TypeLit -> StructType .)
    LBRACE          reduce using rule 14 (TypeLit -> StructType .)
    RPAREN          reduce using rule 14 (TypeLit -> StructType .)
    COMMA           reduce using rule 14 (TypeLit -> StructType .)
    STRING_LITERAL  reduce using rule 14 (TypeLit -> StructType .)
    COLON           reduce using rule 14 (TypeLit -> StructType .)


state 67

    (15) TypeLit -> PointerType .

    ASSIGN          reduce using rule 15 (TypeLit -> PointerType .)
    SEMICOLON       reduce using rule 15 (TypeLit -> PointerType .)
    LBRACE          reduce using rule 15 (TypeLit -> PointerType .)
    RPAREN          reduce using rule 15 (TypeLit -> PointerType .)
    COMMA           reduce using rule 15 (TypeLit -> PointerType .)
    STRING_LITERAL  reduce using rule 15 (TypeLit -> PointerType .)
    COLON           reduce using rule 15 (TypeLit -> PointerType .)


state 68

    (7) TypeToken -> INT .

    ASSIGN          reduce using rule 7 (TypeToken -> INT .)
    SEMICOLON       reduce using rule 7 (TypeToken -> INT .)
    LBRACE          reduce using rule 7 (TypeToken -> INT .)
    RPAREN          reduce using rule 7 (TypeToken -> INT .)
    COMMA           reduce using rule 7 (TypeToken -> INT .)
    STRING_LITERAL  reduce using rule 7 (TypeToken -> INT .)
    COLON           reduce using rule 7 (TypeToken -> INT .)


state 69

    (8) TypeToken -> FLOAT .

    ASSIGN          reduce using rule 8 (TypeToken -> FLOAT .)
    SEMICOLON       reduce using rule 8 (TypeToken -> FLOAT .)
    LBRACE          reduce using rule 8 (TypeToken -> FLOAT .)
    RPAREN          reduce using rule 8 (TypeToken -> FLOAT .)
    COMMA           reduce using rule 8 (TypeToken -> FLOAT .)
    STRING_LITERAL  reduce using rule 8 (TypeToken -> FLOAT .)
    COLON           reduce using rule 8 (TypeToken -> FLOAT .)


state 70

    (9) TypeToken -> IMAG .

    ASSIGN          reduce using rule 9 (TypeToken -> IMAG .)
    SEMICOLON       reduce using rule 9 (TypeToken -> IMAG .)
    LBRACE          reduce using rule 9 (TypeToken -> IMAG .)
    RPAREN          reduce using rule 9 (TypeToken -> IMAG .)
    COMMA           reduce using rule 9 (TypeToken -> IMAG .)
    STRING_LITERAL  reduce using rule 9 (TypeToken -> IMAG .)
    COLON           reduce using rule 9 (TypeToken -> IMAG .)


state 71

    (10) TypeToken -> STRING .

    ASSIGN          reduce using rule 10 (TypeToken -> STRING .)
    SEMICOLON       reduce using rule 10 (TypeToken -> STRING .)
    LBRACE          reduce using rule 10 (TypeToken -> STRING .)
    RPAREN          reduce using rule 10 (TypeToken -> STRING .)
    COMMA           reduce using rule 10 (TypeToken -> STRING .)
    STRING_LITERAL  reduce using rule 10 (TypeToken -> STRING .)
    COLON           reduce using rule 10 (TypeToken -> STRING .)


state 72

    (11) TypeToken -> BOOL .

    ASSIGN          reduce using rule 11 (TypeToken -> BOOL .)
    SEMICOLON       reduce using rule 11 (TypeToken -> BOOL .)
    LBRACE          reduce using rule 11 (TypeToken -> BOOL .)
    RPAREN          reduce using rule 11 (TypeToken -> BOOL .)
    COMMA           reduce using rule 11 (TypeToken -> BOOL .)
    STRING_LITERAL  reduce using rule 11 (TypeToken -> BOOL .)
    COLON           reduce using rule 11 (TypeToken -> BOOL .)


state 73

    (12) TypeToken -> TYPE . IDENT

    IDENT           shift and go to state 111


state 74

    (97) QualifiedIdent -> IDENT . PERIOD TypeName

    PERIOD          shift and go to state 112


state 75

    (18) ArrayType -> LBRACK . ArrayLength RBRACK ElementType
    (19) ArrayLength -> . Expression
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    ArrayLength                    shift and go to state 113
    Expression                     shift and go to state 114
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 76

    (21) StructType -> STRUCT . LBRACE FieldDeclRep RBRACE

    LBRACE          shift and go to state 132


state 77

    (28) PointerType -> MUL . BaseType
    (29) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . IMAG
    (10) TypeToken -> . STRING
    (11) TypeToken -> . BOOL
    (12) TypeToken -> . TYPE IDENT
    (97) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    IMAG            shift and go to state 70
    STRING          shift and go to state 71
    BOOL            shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    BaseType                       shift and go to state 133
    Type                           shift and go to state 134
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 78

    (61) IdentifierList -> IDENT IdentifierRep .
    (62) IdentifierRep -> IdentifierRep . COMMA IDENT

    LPAREN          reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    INT             reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    FLOAT           reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    IMAG            reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    STRING          reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    BOOL            reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    TYPE            reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    IDENT           reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    LBRACK          reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    STRUCT          reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    MUL             reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    ASSIGN          reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    SEMICOLON       reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    COMMA           shift and go to state 135


state 79

    (63) IdentifierRep -> epsilon .

    COMMA           reduce using rule 63 (IdentifierRep -> epsilon .)
    LPAREN          reduce using rule 63 (IdentifierRep -> epsilon .)
    INT             reduce using rule 63 (IdentifierRep -> epsilon .)
    FLOAT           reduce using rule 63 (IdentifierRep -> epsilon .)
    IMAG            reduce using rule 63 (IdentifierRep -> epsilon .)
    STRING          reduce using rule 63 (IdentifierRep -> epsilon .)
    BOOL            reduce using rule 63 (IdentifierRep -> epsilon .)
    TYPE            reduce using rule 63 (IdentifierRep -> epsilon .)
    IDENT           reduce using rule 63 (IdentifierRep -> epsilon .)
    LBRACK          reduce using rule 63 (IdentifierRep -> epsilon .)
    STRUCT          reduce using rule 63 (IdentifierRep -> epsilon .)
    MUL             reduce using rule 63 (IdentifierRep -> epsilon .)
    ASSIGN          reduce using rule 63 (IdentifierRep -> epsilon .)
    SEMICOLON       reduce using rule 63 (IdentifierRep -> epsilon .)


state 80

    (68) TypeDecl -> TYPE LPAREN TypeSpecRep . RPAREN
    (69) TypeSpecRep -> TypeSpecRep . TypeSpec SEMICOLON
    (71) TypeSpec -> . AliasDecl
    (72) TypeSpec -> . TypeDef
    (73) AliasDecl -> . IDENT ASSIGN Type
    (74) TypeDef -> . IDENT Type

    RPAREN          shift and go to state 136
    IDENT           shift and go to state 42

    TypeSpec                       shift and go to state 137
    AliasDecl                      shift and go to state 40
    TypeDef                        shift and go to state 41

state 81

    (70) TypeSpecRep -> epsilon .

    RPAREN          reduce using rule 70 (TypeSpecRep -> epsilon .)
    IDENT           reduce using rule 70 (TypeSpecRep -> epsilon .)


state 82

    (73) AliasDecl -> IDENT ASSIGN . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . IMAG
    (10) TypeToken -> . STRING
    (11) TypeToken -> . BOOL
    (12) TypeToken -> . TYPE IDENT
    (97) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    IMAG            shift and go to state 70
    STRING          shift and go to state 71
    BOOL            shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Type                           shift and go to state 138
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 83

    (74) TypeDef -> IDENT Type .

    SEMICOLON       reduce using rule 74 (TypeDef -> IDENT Type .)


state 84

    (76) VarDecl -> VAR LPAREN VarSpecRep . RPAREN
    (77) VarSpecRep -> VarSpecRep . VarSpec SEMICOLON
    (79) VarSpec -> . IdentifierList Type ExpressionListOpt
    (80) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (61) IdentifierList -> . IDENT IdentifierRep

    RPAREN          shift and go to state 139
    IDENT           shift and go to state 37

    VarSpec                        shift and go to state 140
    IdentifierList                 shift and go to state 45

state 85

    (78) VarSpecRep -> epsilon .

    RPAREN          reduce using rule 78 (VarSpecRep -> epsilon .)
    IDENT           reduce using rule 78 (VarSpecRep -> epsilon .)


state 86

    (79) VarSpec -> IdentifierList Type . ExpressionListOpt
    (81) ExpressionListOpt -> . ASSIGN ExpressionList
    (82) ExpressionListOpt -> . epsilon
    (257) epsilon -> .

    ASSIGN          shift and go to state 142
    SEMICOLON       reduce using rule 257 (epsilon -> .)

    ExpressionListOpt              shift and go to state 141
    epsilon                        shift and go to state 143

state 87

    (80) VarSpec -> IdentifierList ASSIGN . ExpressionList
    (64) ExpressionList -> . Expression ExpressionRep
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    ExpressionList                 shift and go to state 144
    Expression                     shift and go to state 145
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 88

    (249) ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .

    SEMICOLON       reduce using rule 249 (ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .)


state 89

    (250) ImportSpecRep -> ImportSpecRep ImportSpec . SEMICOLON

    SEMICOLON       shift and go to state 146


state 90

    (87) Function -> Signature FunctionBody .

    SEMICOLON       reduce using rule 87 (Function -> Signature FunctionBody .)


state 91

    (88) FunctionBody -> Block .

    SEMICOLON       reduce using rule 88 (FunctionBody -> Block .)


state 92

    (45) Block -> LBRACE . StatementList RBRACE
    (46) StatementList -> . StatementRep
    (47) StatementRep -> . StatementRep Statement SEMICOLON
    (48) StatementRep -> . epsilon
    (257) epsilon -> .

    RETURN          reduce using rule 257 (epsilon -> .)
    BREAK           reduce using rule 257 (epsilon -> .)
    CONTINUE        reduce using rule 257 (epsilon -> .)
    GOTO            reduce using rule 257 (epsilon -> .)
    LBRACE          reduce using rule 257 (epsilon -> .)
    IF              reduce using rule 257 (epsilon -> .)
    FOR             reduce using rule 257 (epsilon -> .)
    CONST           reduce using rule 257 (epsilon -> .)
    TYPE            reduce using rule 257 (epsilon -> .)
    VAR             reduce using rule 257 (epsilon -> .)
    IDENT           reduce using rule 257 (epsilon -> .)
    SWITCH          reduce using rule 257 (epsilon -> .)
    NOT             reduce using rule 257 (epsilon -> .)
    ADD             reduce using rule 257 (epsilon -> .)
    SUB             reduce using rule 257 (epsilon -> .)
    MUL             reduce using rule 257 (epsilon -> .)
    AND             reduce using rule 257 (epsilon -> .)
    LPAREN          reduce using rule 257 (epsilon -> .)
    INT_LITERAL     reduce using rule 257 (epsilon -> .)
    FLOAT_LITERAL   reduce using rule 257 (epsilon -> .)
    STRING_LITERAL  reduce using rule 257 (epsilon -> .)
    SEMICOLON       reduce using rule 257 (epsilon -> .)
    RBRACE          reduce using rule 257 (epsilon -> .)

    StatementList                  shift and go to state 147
    StatementRep                   shift and go to state 148
    epsilon                        shift and go to state 149

state 93

    (33) Result -> Parameters .

    LBRACE          reduce using rule 33 (Result -> Parameters .)
    SEMICOLON       reduce using rule 33 (Result -> Parameters .)


state 94

    (30) Signature -> Parameters ResultOpt .

    LBRACE          reduce using rule 30 (Signature -> Parameters ResultOpt .)
    SEMICOLON       reduce using rule 30 (Signature -> Parameters ResultOpt .)


state 95

    (31) ResultOpt -> Result .

    LBRACE          reduce using rule 31 (ResultOpt -> Result .)
    SEMICOLON       reduce using rule 31 (ResultOpt -> Result .)


state 96

    (32) ResultOpt -> epsilon .

    LBRACE          reduce using rule 32 (ResultOpt -> epsilon .)
    SEMICOLON       reduce using rule 32 (ResultOpt -> epsilon .)


state 97

    (34) Result -> Type .

    LBRACE          reduce using rule 34 (Result -> Type .)
    SEMICOLON       reduce using rule 34 (Result -> Type .)


state 98

    (35) Parameters -> LPAREN . ParameterListOpt RPAREN
    (4) Type -> LPAREN . Type RPAREN
    (36) ParameterListOpt -> . ParametersList
    (37) ParameterListOpt -> . epsilon
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (38) ParametersList -> . Type
    (39) ParametersList -> . IdentifierList Type
    (40) ParametersList -> . ParameterDeclCommaRep
    (257) epsilon -> .
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (61) IdentifierList -> . IDENT IdentifierRep
    (41) ParameterDeclCommaRep -> . ParameterDeclCommaRep COMMA ParameterDecl
    (42) ParameterDeclCommaRep -> . ParameterDecl COMMA ParameterDecl
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . IMAG
    (10) TypeToken -> . STRING
    (11) TypeToken -> . BOOL
    (12) TypeToken -> . TYPE IDENT
    (97) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType
    (43) ParameterDecl -> . IdentifierList Type
    (44) ParameterDecl -> . Type

    LPAREN          shift and go to state 62
    RPAREN          reduce using rule 257 (epsilon -> .)
    IDENT           shift and go to state 105
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    IMAG            shift and go to state 70
    STRING          shift and go to state 71
    BOOL            shift and go to state 72
    TYPE            shift and go to state 73
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    ParameterListOpt               shift and go to state 99
    Type                           shift and go to state 150
    ParametersList                 shift and go to state 100
    epsilon                        shift and go to state 101
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    IdentifierList                 shift and go to state 103
    ParameterDeclCommaRep          shift and go to state 104
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67
    ParameterDecl                  shift and go to state 106

state 99

    (35) Parameters -> LPAREN ParameterListOpt . RPAREN

    RPAREN          shift and go to state 151


state 100

    (36) ParameterListOpt -> ParametersList .

    RPAREN          reduce using rule 36 (ParameterListOpt -> ParametersList .)


state 101

    (37) ParameterListOpt -> epsilon .

    RPAREN          reduce using rule 37 (ParameterListOpt -> epsilon .)


state 102

    (38) ParametersList -> Type .
    (44) ParameterDecl -> Type .

    RPAREN          reduce using rule 38 (ParametersList -> Type .)
    COMMA           reduce using rule 44 (ParameterDecl -> Type .)


state 103

    (39) ParametersList -> IdentifierList . Type
    (43) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . IMAG
    (10) TypeToken -> . STRING
    (11) TypeToken -> . BOOL
    (12) TypeToken -> . TYPE IDENT
    (97) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    IMAG            shift and go to state 70
    STRING          shift and go to state 71
    BOOL            shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Type                           shift and go to state 152
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 104

    (40) ParametersList -> ParameterDeclCommaRep .
    (41) ParameterDeclCommaRep -> ParameterDeclCommaRep . COMMA ParameterDecl

    RPAREN          reduce using rule 40 (ParametersList -> ParameterDeclCommaRep .)
    COMMA           shift and go to state 153


state 105

    (61) IdentifierList -> IDENT . IdentifierRep
    (97) QualifiedIdent -> IDENT . PERIOD TypeName
    (62) IdentifierRep -> . IdentifierRep COMMA IDENT
    (63) IdentifierRep -> . epsilon
    (257) epsilon -> .

    PERIOD          shift and go to state 112
    COMMA           reduce using rule 257 (epsilon -> .)
    LPAREN          reduce using rule 257 (epsilon -> .)
    INT             reduce using rule 257 (epsilon -> .)
    FLOAT           reduce using rule 257 (epsilon -> .)
    IMAG            reduce using rule 257 (epsilon -> .)
    STRING          reduce using rule 257 (epsilon -> .)
    BOOL            reduce using rule 257 (epsilon -> .)
    TYPE            reduce using rule 257 (epsilon -> .)
    IDENT           reduce using rule 257 (epsilon -> .)
    LBRACK          reduce using rule 257 (epsilon -> .)
    STRUCT          reduce using rule 257 (epsilon -> .)
    MUL             reduce using rule 257 (epsilon -> .)

    IdentifierRep                  shift and go to state 78
    epsilon                        shift and go to state 79

state 106

    (42) ParameterDeclCommaRep -> ParameterDecl . COMMA ParameterDecl

    COMMA           shift and go to state 154


state 107

    (55) ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .

    SEMICOLON       reduce using rule 55 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)


state 108

    (56) ConstSpecRep -> ConstSpecRep ConstSpec . SEMICOLON

    SEMICOLON       shift and go to state 155


state 109

    (59) TypeExprListOpt -> TypeOpt ASSIGN . ExpressionList
    (64) ExpressionList -> . Expression ExpressionRep
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    ExpressionList                 shift and go to state 156
    Expression                     shift and go to state 145
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 110

    (4) Type -> LPAREN Type . RPAREN

    RPAREN          shift and go to state 157


state 111

    (12) TypeToken -> TYPE IDENT .

    ASSIGN          reduce using rule 12 (TypeToken -> TYPE IDENT .)
    SEMICOLON       reduce using rule 12 (TypeToken -> TYPE IDENT .)
    LBRACE          reduce using rule 12 (TypeToken -> TYPE IDENT .)
    RPAREN          reduce using rule 12 (TypeToken -> TYPE IDENT .)
    COMMA           reduce using rule 12 (TypeToken -> TYPE IDENT .)
    STRING_LITERAL  reduce using rule 12 (TypeToken -> TYPE IDENT .)
    COLON           reduce using rule 12 (TypeToken -> TYPE IDENT .)


state 112

    (97) QualifiedIdent -> IDENT PERIOD . TypeName
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . IMAG
    (10) TypeToken -> . STRING
    (11) TypeToken -> . BOOL
    (12) TypeToken -> . TYPE IDENT
    (97) QualifiedIdent -> . IDENT PERIOD TypeName

    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    IMAG            shift and go to state 70
    STRING          shift and go to state 71
    BOOL            shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74

    TypeName                       shift and go to state 158
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64

state 113

    (18) ArrayType -> LBRACK ArrayLength . RBRACK ElementType

    RBRACK          shift and go to state 159


state 114

    (19) ArrayLength -> Expression .
    (133) Expression -> Expression . BinaryOp Expression
    (139) BinaryOp -> . LOR
    (140) BinaryOp -> . LAND
    (141) BinaryOp -> . RelOp
    (142) BinaryOp -> . AddMulOp
    (143) RelOp -> . EQL
    (144) RelOp -> . NEQ
    (145) RelOp -> . LSS
    (146) RelOp -> . GTR
    (147) RelOp -> . LEQ
    (148) RelOp -> . GEQ
    (149) AddMulOp -> . UnaryOp
    (150) AddMulOp -> . OR
    (151) AddMulOp -> . XOR
    (152) AddMulOp -> . QUO
    (153) AddMulOp -> . REM
    (154) AddMulOp -> . SHL
    (155) AddMulOp -> . SHR
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND

    RBRACK          reduce using rule 19 (ArrayLength -> Expression .)
    LOR             shift and go to state 161
    LAND            shift and go to state 162
    EQL             shift and go to state 165
    NEQ             shift and go to state 166
    LSS             shift and go to state 167
    GTR             shift and go to state 168
    LEQ             shift and go to state 169
    GEQ             shift and go to state 170
    OR              shift and go to state 172
    XOR             shift and go to state 173
    QUO             shift and go to state 174
    REM             shift and go to state 175
    SHL             shift and go to state 176
    SHR             shift and go to state 177
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 160
    RelOp                          shift and go to state 163
    AddMulOp                       shift and go to state 164
    UnaryOp                        shift and go to state 171

state 115

    (132) Expression -> UnaryExpr .

    LOR             reduce using rule 132 (Expression -> UnaryExpr .)
    LAND            reduce using rule 132 (Expression -> UnaryExpr .)
    EQL             reduce using rule 132 (Expression -> UnaryExpr .)
    NEQ             reduce using rule 132 (Expression -> UnaryExpr .)
    LSS             reduce using rule 132 (Expression -> UnaryExpr .)
    GTR             reduce using rule 132 (Expression -> UnaryExpr .)
    LEQ             reduce using rule 132 (Expression -> UnaryExpr .)
    GEQ             reduce using rule 132 (Expression -> UnaryExpr .)
    OR              reduce using rule 132 (Expression -> UnaryExpr .)
    XOR             reduce using rule 132 (Expression -> UnaryExpr .)
    QUO             reduce using rule 132 (Expression -> UnaryExpr .)
    REM             reduce using rule 132 (Expression -> UnaryExpr .)
    SHL             reduce using rule 132 (Expression -> UnaryExpr .)
    SHR             reduce using rule 132 (Expression -> UnaryExpr .)
    ADD             reduce using rule 132 (Expression -> UnaryExpr .)
    SUB             reduce using rule 132 (Expression -> UnaryExpr .)
    MUL             reduce using rule 132 (Expression -> UnaryExpr .)
    AND             reduce using rule 132 (Expression -> UnaryExpr .)
    RBRACK          reduce using rule 132 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 132 (Expression -> UnaryExpr .)
    SEMICOLON       reduce using rule 132 (Expression -> UnaryExpr .)
    RPAREN          reduce using rule 132 (Expression -> UnaryExpr .)
    INC             reduce using rule 132 (Expression -> UnaryExpr .)
    DEC             reduce using rule 132 (Expression -> UnaryExpr .)
    ADD_ASSIGN      reduce using rule 132 (Expression -> UnaryExpr .)
    SUB_ASSIGN      reduce using rule 132 (Expression -> UnaryExpr .)
    MUL_ASSIGN      reduce using rule 132 (Expression -> UnaryExpr .)
    QUO_ASSIGN      reduce using rule 132 (Expression -> UnaryExpr .)
    REM_ASSIGN      reduce using rule 132 (Expression -> UnaryExpr .)
    AND_ASSIGN      reduce using rule 132 (Expression -> UnaryExpr .)
    OR_ASSIGN       reduce using rule 132 (Expression -> UnaryExpr .)
    XOR_ASSIGN      reduce using rule 132 (Expression -> UnaryExpr .)
    SHL_ASSIGN      reduce using rule 132 (Expression -> UnaryExpr .)
    SHR_ASSIGN      reduce using rule 132 (Expression -> UnaryExpr .)
    ASSIGN          reduce using rule 132 (Expression -> UnaryExpr .)
    COLON           reduce using rule 132 (Expression -> UnaryExpr .)
    LBRACE          reduce using rule 132 (Expression -> UnaryExpr .)


state 116

    (136) UnaryExpr -> PrimaryExpr .
    (117) PrimaryExpr -> PrimaryExpr . Selector
    (118) PrimaryExpr -> PrimaryExpr . Index
    (119) PrimaryExpr -> PrimaryExpr . Slice
    (120) PrimaryExpr -> PrimaryExpr . TypeAssertion
    (121) PrimaryExpr -> PrimaryExpr . Arguments
    (122) Selector -> . PERIOD IDENT
    (123) Index -> . LBRACK Expression RBRACK
    (124) Slice -> . LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
    (125) Slice -> . LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK
    (126) TypeAssertion -> . PERIOD LPAREN Type RPAREN
    (127) Arguments -> . LPAREN ExpressionListTypeOpt RPAREN

    LOR             reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    LAND            reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    EQL             reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    NEQ             reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    LSS             reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    GTR             reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    XOR             reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    QUO             reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    REM             reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    SHL             reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    SHR             reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    ADD             reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    SUB             reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    MUL             reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    AND             reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    RBRACK          reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    SEMICOLON       reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    INC             reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    DEC             reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    ADD_ASSIGN      reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    SUB_ASSIGN      reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    MUL_ASSIGN      reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    QUO_ASSIGN      reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    REM_ASSIGN      reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    AND_ASSIGN      reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    OR_ASSIGN       reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    XOR_ASSIGN      reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    SHL_ASSIGN      reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    SHR_ASSIGN      reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    ASSIGN          reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    PERIOD          shift and go to state 183
    LBRACK          shift and go to state 184
    LPAREN          shift and go to state 185

    Selector                       shift and go to state 178
    Index                          shift and go to state 179
    Slice                          shift and go to state 180
    TypeAssertion                  shift and go to state 181
    Arguments                      shift and go to state 182

state 117

    (137) UnaryExpr -> UnaryOp . UnaryExpr
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    UnaryOp                        shift and go to state 117
    UnaryExpr                      shift and go to state 186
    PrimaryExpr                    shift and go to state 116
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 118

    (138) UnaryExpr -> NOT . UnaryExpr
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    UnaryExpr                      shift and go to state 187
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 119

    (116) PrimaryExpr -> Operand .

    PERIOD          reduce using rule 116 (PrimaryExpr -> Operand .)
    LBRACK          reduce using rule 116 (PrimaryExpr -> Operand .)
    LPAREN          reduce using rule 116 (PrimaryExpr -> Operand .)
    LOR             reduce using rule 116 (PrimaryExpr -> Operand .)
    LAND            reduce using rule 116 (PrimaryExpr -> Operand .)
    EQL             reduce using rule 116 (PrimaryExpr -> Operand .)
    NEQ             reduce using rule 116 (PrimaryExpr -> Operand .)
    LSS             reduce using rule 116 (PrimaryExpr -> Operand .)
    GTR             reduce using rule 116 (PrimaryExpr -> Operand .)
    LEQ             reduce using rule 116 (PrimaryExpr -> Operand .)
    GEQ             reduce using rule 116 (PrimaryExpr -> Operand .)
    OR              reduce using rule 116 (PrimaryExpr -> Operand .)
    XOR             reduce using rule 116 (PrimaryExpr -> Operand .)
    QUO             reduce using rule 116 (PrimaryExpr -> Operand .)
    REM             reduce using rule 116 (PrimaryExpr -> Operand .)
    SHL             reduce using rule 116 (PrimaryExpr -> Operand .)
    SHR             reduce using rule 116 (PrimaryExpr -> Operand .)
    ADD             reduce using rule 116 (PrimaryExpr -> Operand .)
    SUB             reduce using rule 116 (PrimaryExpr -> Operand .)
    MUL             reduce using rule 116 (PrimaryExpr -> Operand .)
    AND             reduce using rule 116 (PrimaryExpr -> Operand .)
    RBRACK          reduce using rule 116 (PrimaryExpr -> Operand .)
    COMMA           reduce using rule 116 (PrimaryExpr -> Operand .)
    SEMICOLON       reduce using rule 116 (PrimaryExpr -> Operand .)
    RPAREN          reduce using rule 116 (PrimaryExpr -> Operand .)
    INC             reduce using rule 116 (PrimaryExpr -> Operand .)
    DEC             reduce using rule 116 (PrimaryExpr -> Operand .)
    ADD_ASSIGN      reduce using rule 116 (PrimaryExpr -> Operand .)
    SUB_ASSIGN      reduce using rule 116 (PrimaryExpr -> Operand .)
    MUL_ASSIGN      reduce using rule 116 (PrimaryExpr -> Operand .)
    QUO_ASSIGN      reduce using rule 116 (PrimaryExpr -> Operand .)
    REM_ASSIGN      reduce using rule 116 (PrimaryExpr -> Operand .)
    AND_ASSIGN      reduce using rule 116 (PrimaryExpr -> Operand .)
    OR_ASSIGN       reduce using rule 116 (PrimaryExpr -> Operand .)
    XOR_ASSIGN      reduce using rule 116 (PrimaryExpr -> Operand .)
    SHL_ASSIGN      reduce using rule 116 (PrimaryExpr -> Operand .)
    SHR_ASSIGN      reduce using rule 116 (PrimaryExpr -> Operand .)
    ASSIGN          reduce using rule 116 (PrimaryExpr -> Operand .)
    COLON           reduce using rule 116 (PrimaryExpr -> Operand .)
    LBRACE          reduce using rule 116 (PrimaryExpr -> Operand .)


state 120

    (156) UnaryOp -> ADD .

    NOT             reduce using rule 156 (UnaryOp -> ADD .)
    ADD             reduce using rule 156 (UnaryOp -> ADD .)
    SUB             reduce using rule 156 (UnaryOp -> ADD .)
    MUL             reduce using rule 156 (UnaryOp -> ADD .)
    AND             reduce using rule 156 (UnaryOp -> ADD .)
    LPAREN          reduce using rule 156 (UnaryOp -> ADD .)
    IDENT           reduce using rule 156 (UnaryOp -> ADD .)
    INT_LITERAL     reduce using rule 156 (UnaryOp -> ADD .)
    FLOAT_LITERAL   reduce using rule 156 (UnaryOp -> ADD .)
    STRING_LITERAL  reduce using rule 156 (UnaryOp -> ADD .)


state 121

    (157) UnaryOp -> SUB .

    NOT             reduce using rule 157 (UnaryOp -> SUB .)
    ADD             reduce using rule 157 (UnaryOp -> SUB .)
    SUB             reduce using rule 157 (UnaryOp -> SUB .)
    MUL             reduce using rule 157 (UnaryOp -> SUB .)
    AND             reduce using rule 157 (UnaryOp -> SUB .)
    LPAREN          reduce using rule 157 (UnaryOp -> SUB .)
    IDENT           reduce using rule 157 (UnaryOp -> SUB .)
    INT_LITERAL     reduce using rule 157 (UnaryOp -> SUB .)
    FLOAT_LITERAL   reduce using rule 157 (UnaryOp -> SUB .)
    STRING_LITERAL  reduce using rule 157 (UnaryOp -> SUB .)


state 122

    (158) UnaryOp -> MUL .

    NOT             reduce using rule 158 (UnaryOp -> MUL .)
    ADD             reduce using rule 158 (UnaryOp -> MUL .)
    SUB             reduce using rule 158 (UnaryOp -> MUL .)
    MUL             reduce using rule 158 (UnaryOp -> MUL .)
    AND             reduce using rule 158 (UnaryOp -> MUL .)
    LPAREN          reduce using rule 158 (UnaryOp -> MUL .)
    IDENT           reduce using rule 158 (UnaryOp -> MUL .)
    INT_LITERAL     reduce using rule 158 (UnaryOp -> MUL .)
    FLOAT_LITERAL   reduce using rule 158 (UnaryOp -> MUL .)
    STRING_LITERAL  reduce using rule 158 (UnaryOp -> MUL .)


state 123

    (159) UnaryOp -> AND .

    NOT             reduce using rule 159 (UnaryOp -> AND .)
    ADD             reduce using rule 159 (UnaryOp -> AND .)
    SUB             reduce using rule 159 (UnaryOp -> AND .)
    MUL             reduce using rule 159 (UnaryOp -> AND .)
    AND             reduce using rule 159 (UnaryOp -> AND .)
    LPAREN          reduce using rule 159 (UnaryOp -> AND .)
    IDENT           reduce using rule 159 (UnaryOp -> AND .)
    INT_LITERAL     reduce using rule 159 (UnaryOp -> AND .)
    FLOAT_LITERAL   reduce using rule 159 (UnaryOp -> AND .)
    STRING_LITERAL  reduce using rule 159 (UnaryOp -> AND .)


state 124

    (89) Operand -> Literal .

    PERIOD          reduce using rule 89 (Operand -> Literal .)
    LBRACK          reduce using rule 89 (Operand -> Literal .)
    LPAREN          reduce using rule 89 (Operand -> Literal .)
    LOR             reduce using rule 89 (Operand -> Literal .)
    LAND            reduce using rule 89 (Operand -> Literal .)
    EQL             reduce using rule 89 (Operand -> Literal .)
    NEQ             reduce using rule 89 (Operand -> Literal .)
    LSS             reduce using rule 89 (Operand -> Literal .)
    GTR             reduce using rule 89 (Operand -> Literal .)
    LEQ             reduce using rule 89 (Operand -> Literal .)
    GEQ             reduce using rule 89 (Operand -> Literal .)
    OR              reduce using rule 89 (Operand -> Literal .)
    XOR             reduce using rule 89 (Operand -> Literal .)
    QUO             reduce using rule 89 (Operand -> Literal .)
    REM             reduce using rule 89 (Operand -> Literal .)
    SHL             reduce using rule 89 (Operand -> Literal .)
    SHR             reduce using rule 89 (Operand -> Literal .)
    ADD             reduce using rule 89 (Operand -> Literal .)
    SUB             reduce using rule 89 (Operand -> Literal .)
    MUL             reduce using rule 89 (Operand -> Literal .)
    AND             reduce using rule 89 (Operand -> Literal .)
    RBRACK          reduce using rule 89 (Operand -> Literal .)
    COMMA           reduce using rule 89 (Operand -> Literal .)
    SEMICOLON       reduce using rule 89 (Operand -> Literal .)
    RPAREN          reduce using rule 89 (Operand -> Literal .)
    INC             reduce using rule 89 (Operand -> Literal .)
    DEC             reduce using rule 89 (Operand -> Literal .)
    ADD_ASSIGN      reduce using rule 89 (Operand -> Literal .)
    SUB_ASSIGN      reduce using rule 89 (Operand -> Literal .)
    MUL_ASSIGN      reduce using rule 89 (Operand -> Literal .)
    QUO_ASSIGN      reduce using rule 89 (Operand -> Literal .)
    REM_ASSIGN      reduce using rule 89 (Operand -> Literal .)
    AND_ASSIGN      reduce using rule 89 (Operand -> Literal .)
    OR_ASSIGN       reduce using rule 89 (Operand -> Literal .)
    XOR_ASSIGN      reduce using rule 89 (Operand -> Literal .)
    SHL_ASSIGN      reduce using rule 89 (Operand -> Literal .)
    SHR_ASSIGN      reduce using rule 89 (Operand -> Literal .)
    ASSIGN          reduce using rule 89 (Operand -> Literal .)
    COLON           reduce using rule 89 (Operand -> Literal .)
    LBRACE          reduce using rule 89 (Operand -> Literal .)


state 125

    (90) Operand -> OperandName .

    PERIOD          reduce using rule 90 (Operand -> OperandName .)
    LBRACK          reduce using rule 90 (Operand -> OperandName .)
    LPAREN          reduce using rule 90 (Operand -> OperandName .)
    LOR             reduce using rule 90 (Operand -> OperandName .)
    LAND            reduce using rule 90 (Operand -> OperandName .)
    EQL             reduce using rule 90 (Operand -> OperandName .)
    NEQ             reduce using rule 90 (Operand -> OperandName .)
    LSS             reduce using rule 90 (Operand -> OperandName .)
    GTR             reduce using rule 90 (Operand -> OperandName .)
    LEQ             reduce using rule 90 (Operand -> OperandName .)
    GEQ             reduce using rule 90 (Operand -> OperandName .)
    OR              reduce using rule 90 (Operand -> OperandName .)
    XOR             reduce using rule 90 (Operand -> OperandName .)
    QUO             reduce using rule 90 (Operand -> OperandName .)
    REM             reduce using rule 90 (Operand -> OperandName .)
    SHL             reduce using rule 90 (Operand -> OperandName .)
    SHR             reduce using rule 90 (Operand -> OperandName .)
    ADD             reduce using rule 90 (Operand -> OperandName .)
    SUB             reduce using rule 90 (Operand -> OperandName .)
    MUL             reduce using rule 90 (Operand -> OperandName .)
    AND             reduce using rule 90 (Operand -> OperandName .)
    RBRACK          reduce using rule 90 (Operand -> OperandName .)
    COMMA           reduce using rule 90 (Operand -> OperandName .)
    SEMICOLON       reduce using rule 90 (Operand -> OperandName .)
    RPAREN          reduce using rule 90 (Operand -> OperandName .)
    INC             reduce using rule 90 (Operand -> OperandName .)
    DEC             reduce using rule 90 (Operand -> OperandName .)
    ADD_ASSIGN      reduce using rule 90 (Operand -> OperandName .)
    SUB_ASSIGN      reduce using rule 90 (Operand -> OperandName .)
    MUL_ASSIGN      reduce using rule 90 (Operand -> OperandName .)
    QUO_ASSIGN      reduce using rule 90 (Operand -> OperandName .)
    REM_ASSIGN      reduce using rule 90 (Operand -> OperandName .)
    AND_ASSIGN      reduce using rule 90 (Operand -> OperandName .)
    OR_ASSIGN       reduce using rule 90 (Operand -> OperandName .)
    XOR_ASSIGN      reduce using rule 90 (Operand -> OperandName .)
    SHL_ASSIGN      reduce using rule 90 (Operand -> OperandName .)
    SHR_ASSIGN      reduce using rule 90 (Operand -> OperandName .)
    ASSIGN          reduce using rule 90 (Operand -> OperandName .)
    COLON           reduce using rule 90 (Operand -> OperandName .)
    LBRACE          reduce using rule 90 (Operand -> OperandName .)


state 126

    (91) Operand -> LPAREN . Expression RPAREN
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    Expression                     shift and go to state 188
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 127

    (92) Literal -> BasicLit .

    PERIOD          reduce using rule 92 (Literal -> BasicLit .)
    LBRACK          reduce using rule 92 (Literal -> BasicLit .)
    LPAREN          reduce using rule 92 (Literal -> BasicLit .)
    LOR             reduce using rule 92 (Literal -> BasicLit .)
    LAND            reduce using rule 92 (Literal -> BasicLit .)
    EQL             reduce using rule 92 (Literal -> BasicLit .)
    NEQ             reduce using rule 92 (Literal -> BasicLit .)
    LSS             reduce using rule 92 (Literal -> BasicLit .)
    GTR             reduce using rule 92 (Literal -> BasicLit .)
    LEQ             reduce using rule 92 (Literal -> BasicLit .)
    GEQ             reduce using rule 92 (Literal -> BasicLit .)
    OR              reduce using rule 92 (Literal -> BasicLit .)
    XOR             reduce using rule 92 (Literal -> BasicLit .)
    QUO             reduce using rule 92 (Literal -> BasicLit .)
    REM             reduce using rule 92 (Literal -> BasicLit .)
    SHL             reduce using rule 92 (Literal -> BasicLit .)
    SHR             reduce using rule 92 (Literal -> BasicLit .)
    ADD             reduce using rule 92 (Literal -> BasicLit .)
    SUB             reduce using rule 92 (Literal -> BasicLit .)
    MUL             reduce using rule 92 (Literal -> BasicLit .)
    AND             reduce using rule 92 (Literal -> BasicLit .)
    RBRACK          reduce using rule 92 (Literal -> BasicLit .)
    COMMA           reduce using rule 92 (Literal -> BasicLit .)
    SEMICOLON       reduce using rule 92 (Literal -> BasicLit .)
    RPAREN          reduce using rule 92 (Literal -> BasicLit .)
    INC             reduce using rule 92 (Literal -> BasicLit .)
    DEC             reduce using rule 92 (Literal -> BasicLit .)
    ADD_ASSIGN      reduce using rule 92 (Literal -> BasicLit .)
    SUB_ASSIGN      reduce using rule 92 (Literal -> BasicLit .)
    MUL_ASSIGN      reduce using rule 92 (Literal -> BasicLit .)
    QUO_ASSIGN      reduce using rule 92 (Literal -> BasicLit .)
    REM_ASSIGN      reduce using rule 92 (Literal -> BasicLit .)
    AND_ASSIGN      reduce using rule 92 (Literal -> BasicLit .)
    OR_ASSIGN       reduce using rule 92 (Literal -> BasicLit .)
    XOR_ASSIGN      reduce using rule 92 (Literal -> BasicLit .)
    SHL_ASSIGN      reduce using rule 92 (Literal -> BasicLit .)
    SHR_ASSIGN      reduce using rule 92 (Literal -> BasicLit .)
    ASSIGN          reduce using rule 92 (Literal -> BasicLit .)
    COLON           reduce using rule 92 (Literal -> BasicLit .)
    LBRACE          reduce using rule 92 (Literal -> BasicLit .)


state 128

    (96) OperandName -> IDENT .

    PERIOD          reduce using rule 96 (OperandName -> IDENT .)
    LBRACK          reduce using rule 96 (OperandName -> IDENT .)
    LPAREN          reduce using rule 96 (OperandName -> IDENT .)
    LOR             reduce using rule 96 (OperandName -> IDENT .)
    LAND            reduce using rule 96 (OperandName -> IDENT .)
    EQL             reduce using rule 96 (OperandName -> IDENT .)
    NEQ             reduce using rule 96 (OperandName -> IDENT .)
    LSS             reduce using rule 96 (OperandName -> IDENT .)
    GTR             reduce using rule 96 (OperandName -> IDENT .)
    LEQ             reduce using rule 96 (OperandName -> IDENT .)
    GEQ             reduce using rule 96 (OperandName -> IDENT .)
    OR              reduce using rule 96 (OperandName -> IDENT .)
    XOR             reduce using rule 96 (OperandName -> IDENT .)
    QUO             reduce using rule 96 (OperandName -> IDENT .)
    REM             reduce using rule 96 (OperandName -> IDENT .)
    SHL             reduce using rule 96 (OperandName -> IDENT .)
    SHR             reduce using rule 96 (OperandName -> IDENT .)
    ADD             reduce using rule 96 (OperandName -> IDENT .)
    SUB             reduce using rule 96 (OperandName -> IDENT .)
    MUL             reduce using rule 96 (OperandName -> IDENT .)
    AND             reduce using rule 96 (OperandName -> IDENT .)
    RBRACK          reduce using rule 96 (OperandName -> IDENT .)
    COMMA           reduce using rule 96 (OperandName -> IDENT .)
    SEMICOLON       reduce using rule 96 (OperandName -> IDENT .)
    RPAREN          reduce using rule 96 (OperandName -> IDENT .)
    INC             reduce using rule 96 (OperandName -> IDENT .)
    DEC             reduce using rule 96 (OperandName -> IDENT .)
    ADD_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    SUB_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    MUL_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    QUO_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    REM_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    AND_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    OR_ASSIGN       reduce using rule 96 (OperandName -> IDENT .)
    XOR_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    SHL_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    SHR_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    ASSIGN          reduce using rule 96 (OperandName -> IDENT .)
    COLON           reduce using rule 96 (OperandName -> IDENT .)
    LBRACE          reduce using rule 96 (OperandName -> IDENT .)


state 129

    (93) BasicLit -> INT_LITERAL .

    PERIOD          reduce using rule 93 (BasicLit -> INT_LITERAL .)
    LBRACK          reduce using rule 93 (BasicLit -> INT_LITERAL .)
    LPAREN          reduce using rule 93 (BasicLit -> INT_LITERAL .)
    LOR             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    LAND            reduce using rule 93 (BasicLit -> INT_LITERAL .)
    EQL             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    NEQ             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    LSS             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    GTR             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    LEQ             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    GEQ             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    OR              reduce using rule 93 (BasicLit -> INT_LITERAL .)
    XOR             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    QUO             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    REM             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    SHL             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    SHR             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    ADD             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    SUB             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    MUL             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    AND             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    RBRACK          reduce using rule 93 (BasicLit -> INT_LITERAL .)
    COMMA           reduce using rule 93 (BasicLit -> INT_LITERAL .)
    SEMICOLON       reduce using rule 93 (BasicLit -> INT_LITERAL .)
    RPAREN          reduce using rule 93 (BasicLit -> INT_LITERAL .)
    INC             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    DEC             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    ADD_ASSIGN      reduce using rule 93 (BasicLit -> INT_LITERAL .)
    SUB_ASSIGN      reduce using rule 93 (BasicLit -> INT_LITERAL .)
    MUL_ASSIGN      reduce using rule 93 (BasicLit -> INT_LITERAL .)
    QUO_ASSIGN      reduce using rule 93 (BasicLit -> INT_LITERAL .)
    REM_ASSIGN      reduce using rule 93 (BasicLit -> INT_LITERAL .)
    AND_ASSIGN      reduce using rule 93 (BasicLit -> INT_LITERAL .)
    OR_ASSIGN       reduce using rule 93 (BasicLit -> INT_LITERAL .)
    XOR_ASSIGN      reduce using rule 93 (BasicLit -> INT_LITERAL .)
    SHL_ASSIGN      reduce using rule 93 (BasicLit -> INT_LITERAL .)
    SHR_ASSIGN      reduce using rule 93 (BasicLit -> INT_LITERAL .)
    ASSIGN          reduce using rule 93 (BasicLit -> INT_LITERAL .)
    COLON           reduce using rule 93 (BasicLit -> INT_LITERAL .)
    LBRACE          reduce using rule 93 (BasicLit -> INT_LITERAL .)


state 130

    (94) BasicLit -> FLOAT_LITERAL .

    PERIOD          reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    LBRACK          reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    LPAREN          reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    LOR             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    LAND            reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    EQL             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    NEQ             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    LSS             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    GTR             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    LEQ             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    GEQ             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    OR              reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    XOR             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    QUO             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    REM             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    SHL             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    SHR             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    ADD             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    SUB             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    MUL             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    AND             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    RBRACK          reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    COMMA           reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    SEMICOLON       reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    RPAREN          reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    INC             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    DEC             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    ADD_ASSIGN      reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    SUB_ASSIGN      reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    MUL_ASSIGN      reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    QUO_ASSIGN      reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    REM_ASSIGN      reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    AND_ASSIGN      reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    OR_ASSIGN       reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    XOR_ASSIGN      reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    SHL_ASSIGN      reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    SHR_ASSIGN      reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    ASSIGN          reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    COLON           reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    LBRACE          reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)


state 131

    (95) BasicLit -> STRING_LITERAL .

    PERIOD          reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    LBRACK          reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    LPAREN          reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    LOR             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    LAND            reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    EQL             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    NEQ             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    LSS             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    GTR             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    LEQ             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    GEQ             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    OR              reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    XOR             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    QUO             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    REM             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    SHL             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    SHR             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    ADD             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    SUB             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    MUL             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    AND             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    RBRACK          reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    COMMA           reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    SEMICOLON       reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    RPAREN          reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    INC             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    DEC             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    ADD_ASSIGN      reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    SUB_ASSIGN      reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    MUL_ASSIGN      reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    QUO_ASSIGN      reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    REM_ASSIGN      reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    AND_ASSIGN      reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    OR_ASSIGN       reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    XOR_ASSIGN      reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    SHL_ASSIGN      reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    SHR_ASSIGN      reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    ASSIGN          reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    COLON           reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    LBRACE          reduce using rule 95 (BasicLit -> STRING_LITERAL .)


state 132

    (21) StructType -> STRUCT LBRACE . FieldDeclRep RBRACE
    (22) FieldDeclRep -> . FieldDeclRep FieldDecl SEMICOLON
    (23) FieldDeclRep -> . epsilon
    (257) epsilon -> .

    RBRACE          reduce using rule 257 (epsilon -> .)
    IDENT           reduce using rule 257 (epsilon -> .)

    FieldDeclRep                   shift and go to state 189
    epsilon                        shift and go to state 190

state 133

    (28) PointerType -> MUL BaseType .

    ASSIGN          reduce using rule 28 (PointerType -> MUL BaseType .)
    SEMICOLON       reduce using rule 28 (PointerType -> MUL BaseType .)
    LBRACE          reduce using rule 28 (PointerType -> MUL BaseType .)
    RPAREN          reduce using rule 28 (PointerType -> MUL BaseType .)
    COMMA           reduce using rule 28 (PointerType -> MUL BaseType .)
    STRING_LITERAL  reduce using rule 28 (PointerType -> MUL BaseType .)
    COLON           reduce using rule 28 (PointerType -> MUL BaseType .)


state 134

    (29) BaseType -> Type .

    ASSIGN          reduce using rule 29 (BaseType -> Type .)
    SEMICOLON       reduce using rule 29 (BaseType -> Type .)
    LBRACE          reduce using rule 29 (BaseType -> Type .)
    RPAREN          reduce using rule 29 (BaseType -> Type .)
    COMMA           reduce using rule 29 (BaseType -> Type .)
    STRING_LITERAL  reduce using rule 29 (BaseType -> Type .)
    COLON           reduce using rule 29 (BaseType -> Type .)


state 135

    (62) IdentifierRep -> IdentifierRep COMMA . IDENT

    IDENT           shift and go to state 191


state 136

    (68) TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .

    SEMICOLON       reduce using rule 68 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)


state 137

    (69) TypeSpecRep -> TypeSpecRep TypeSpec . SEMICOLON

    SEMICOLON       shift and go to state 192


state 138

    (73) AliasDecl -> IDENT ASSIGN Type .

    SEMICOLON       reduce using rule 73 (AliasDecl -> IDENT ASSIGN Type .)


state 139

    (76) VarDecl -> VAR LPAREN VarSpecRep RPAREN .

    SEMICOLON       reduce using rule 76 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)


state 140

    (77) VarSpecRep -> VarSpecRep VarSpec . SEMICOLON

    SEMICOLON       shift and go to state 193


state 141

    (79) VarSpec -> IdentifierList Type ExpressionListOpt .

    SEMICOLON       reduce using rule 79 (VarSpec -> IdentifierList Type ExpressionListOpt .)


state 142

    (81) ExpressionListOpt -> ASSIGN . ExpressionList
    (64) ExpressionList -> . Expression ExpressionRep
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    ExpressionList                 shift and go to state 194
    Expression                     shift and go to state 145
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 143

    (82) ExpressionListOpt -> epsilon .

    SEMICOLON       reduce using rule 82 (ExpressionListOpt -> epsilon .)


state 144

    (80) VarSpec -> IdentifierList ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 80 (VarSpec -> IdentifierList ASSIGN ExpressionList .)


state 145

    (64) ExpressionList -> Expression . ExpressionRep
    (133) Expression -> Expression . BinaryOp Expression
    (65) ExpressionRep -> . ExpressionRep COMMA Expression
    (66) ExpressionRep -> . epsilon
    (139) BinaryOp -> . LOR
    (140) BinaryOp -> . LAND
    (141) BinaryOp -> . RelOp
    (142) BinaryOp -> . AddMulOp
    (257) epsilon -> .
    (143) RelOp -> . EQL
    (144) RelOp -> . NEQ
    (145) RelOp -> . LSS
    (146) RelOp -> . GTR
    (147) RelOp -> . LEQ
    (148) RelOp -> . GEQ
    (149) AddMulOp -> . UnaryOp
    (150) AddMulOp -> . OR
    (151) AddMulOp -> . XOR
    (152) AddMulOp -> . QUO
    (153) AddMulOp -> . REM
    (154) AddMulOp -> . SHL
    (155) AddMulOp -> . SHR
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND

    LOR             shift and go to state 161
    LAND            shift and go to state 162
    COMMA           reduce using rule 257 (epsilon -> .)
    SEMICOLON       reduce using rule 257 (epsilon -> .)
    RPAREN          reduce using rule 257 (epsilon -> .)
    LBRACE          reduce using rule 257 (epsilon -> .)
    COLON           reduce using rule 257 (epsilon -> .)
    EQL             shift and go to state 165
    NEQ             shift and go to state 166
    LSS             shift and go to state 167
    GTR             shift and go to state 168
    LEQ             shift and go to state 169
    GEQ             shift and go to state 170
    OR              shift and go to state 172
    XOR             shift and go to state 173
    QUO             shift and go to state 174
    REM             shift and go to state 175
    SHL             shift and go to state 176
    SHR             shift and go to state 177
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    ExpressionRep                  shift and go to state 195
    BinaryOp                       shift and go to state 160
    epsilon                        shift and go to state 196
    RelOp                          shift and go to state 163
    AddMulOp                       shift and go to state 164
    UnaryOp                        shift and go to state 171

state 146

    (250) ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .

    RPAREN          reduce using rule 250 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)
    PERIOD          reduce using rule 250 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)
    IDENT           reduce using rule 250 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)
    STRING_LITERAL  reduce using rule 250 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)


state 147

    (45) Block -> LBRACE StatementList . RBRACE

    RBRACE          shift and go to state 197


state 148

    (46) StatementList -> StatementRep .
    (47) StatementRep -> StatementRep . Statement SEMICOLON
    (160) Statement -> . Declaration
    (161) Statement -> . LabeledStmt
    (162) Statement -> . SimpleStmt
    (163) Statement -> . ReturnStmt
    (164) Statement -> . BreakStmt
    (165) Statement -> . ContinueStmt
    (166) Statement -> . GotoStmt
    (167) Statement -> . Block
    (168) Statement -> . IfStmt
    (169) Statement -> . SwitchStmt
    (170) Statement -> . ForStmt
    (49) Declaration -> . ConstDecl
    (50) Declaration -> . TypeDecl
    (51) Declaration -> . VarDecl
    (176) LabeledStmt -> . Label COLON Statement
    (171) SimpleStmt -> . epsilon
    (172) SimpleStmt -> . ExpressionStmt
    (173) SimpleStmt -> . IncDecStmt
    (174) SimpleStmt -> . Assignment
    (175) SimpleStmt -> . ShortVarDecl
    (233) ReturnStmt -> . RETURN ExpressionListPureOpt
    (236) BreakStmt -> . BREAK LabelOpt
    (237) ContinueStmt -> . CONTINUE LabelOpt
    (240) GotoStmt -> . GOTO Label
    (45) Block -> . LBRACE StatementList RBRACE
    (194) IfStmt -> . IF Expression Block ElseOpt
    (200) SwitchStmt -> . ExprSwitchStmt
    (201) SwitchStmt -> . TypeSwitchStmt
    (220) ForStmt -> . FOR ConditionBlockOpt Block
    (54) ConstDecl -> . CONST ConstSpec
    (55) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (67) TypeDecl -> . TYPE TypeSpec
    (68) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (75) VarDecl -> . VAR VarSpec
    (76) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (177) Label -> . IDENT
    (257) epsilon -> .
    (178) ExpressionStmt -> . Expression
    (179) IncDecStmt -> . Expression INC
    (180) IncDecStmt -> . Expression DEC
    (181) Assignment -> . ExpressionList assign_op ExpressionList
    (83) ShortVarDecl -> . IDENT DEFINE Expression
    (202) ExprSwitchStmt -> . SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE
    (208) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (64) ExpressionList -> . Expression ExpressionRep
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    RBRACE          reduce using rule 46 (StatementList -> StatementRep .)
    CASE            reduce using rule 46 (StatementList -> StatementRep .)
    DEFAULT         reduce using rule 46 (StatementList -> StatementRep .)
    RETURN          shift and go to state 216
    BREAK           shift and go to state 217
    CONTINUE        shift and go to state 218
    GOTO            shift and go to state 219
    LBRACE          shift and go to state 92
    IF              shift and go to state 220
    FOR             shift and go to state 224
    CONST           shift and go to state 21
    TYPE            shift and go to state 22
    VAR             shift and go to state 23
    IDENT           shift and go to state 225
    SEMICOLON       reduce using rule 257 (epsilon -> .)
    SWITCH          shift and go to state 227
    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    Statement                      shift and go to state 198
    Declaration                    shift and go to state 199
    LabeledStmt                    shift and go to state 200
    SimpleStmt                     shift and go to state 201
    ReturnStmt                     shift and go to state 202
    BreakStmt                      shift and go to state 203
    ContinueStmt                   shift and go to state 204
    GotoStmt                       shift and go to state 205
    Block                          shift and go to state 206
    IfStmt                         shift and go to state 207
    SwitchStmt                     shift and go to state 208
    ForStmt                        shift and go to state 209
    ConstDecl                      shift and go to state 17
    TypeDecl                       shift and go to state 18
    VarDecl                        shift and go to state 19
    Label                          shift and go to state 210
    epsilon                        shift and go to state 211
    ExpressionStmt                 shift and go to state 212
    IncDecStmt                     shift and go to state 213
    Assignment                     shift and go to state 214
    ShortVarDecl                   shift and go to state 215
    Expression                     shift and go to state 221
    ExprSwitchStmt                 shift and go to state 222
    TypeSwitchStmt                 shift and go to state 223
    ExpressionList                 shift and go to state 226
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 149

    (48) StatementRep -> epsilon .

    RETURN          reduce using rule 48 (StatementRep -> epsilon .)
    BREAK           reduce using rule 48 (StatementRep -> epsilon .)
    CONTINUE        reduce using rule 48 (StatementRep -> epsilon .)
    GOTO            reduce using rule 48 (StatementRep -> epsilon .)
    LBRACE          reduce using rule 48 (StatementRep -> epsilon .)
    IF              reduce using rule 48 (StatementRep -> epsilon .)
    FOR             reduce using rule 48 (StatementRep -> epsilon .)
    CONST           reduce using rule 48 (StatementRep -> epsilon .)
    TYPE            reduce using rule 48 (StatementRep -> epsilon .)
    VAR             reduce using rule 48 (StatementRep -> epsilon .)
    IDENT           reduce using rule 48 (StatementRep -> epsilon .)
    SWITCH          reduce using rule 48 (StatementRep -> epsilon .)
    NOT             reduce using rule 48 (StatementRep -> epsilon .)
    ADD             reduce using rule 48 (StatementRep -> epsilon .)
    SUB             reduce using rule 48 (StatementRep -> epsilon .)
    MUL             reduce using rule 48 (StatementRep -> epsilon .)
    AND             reduce using rule 48 (StatementRep -> epsilon .)
    LPAREN          reduce using rule 48 (StatementRep -> epsilon .)
    INT_LITERAL     reduce using rule 48 (StatementRep -> epsilon .)
    FLOAT_LITERAL   reduce using rule 48 (StatementRep -> epsilon .)
    STRING_LITERAL  reduce using rule 48 (StatementRep -> epsilon .)
    SEMICOLON       reduce using rule 48 (StatementRep -> epsilon .)
    RBRACE          reduce using rule 48 (StatementRep -> epsilon .)
    CASE            reduce using rule 48 (StatementRep -> epsilon .)
    DEFAULT         reduce using rule 48 (StatementRep -> epsilon .)


state 150

    (4) Type -> LPAREN Type . RPAREN
    (38) ParametersList -> Type .
    (44) ParameterDecl -> Type .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 157
    COMMA           reduce using rule 44 (ParameterDecl -> Type .)

  ! RPAREN          [ reduce using rule 38 (ParametersList -> Type .) ]


state 151

    (35) Parameters -> LPAREN ParameterListOpt RPAREN .

    LPAREN          reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    INT             reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    FLOAT           reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    IMAG            reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRING          reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    BOOL            reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    TYPE            reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    IDENT           reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LBRACK          reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRUCT          reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    MUL             reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LBRACE          reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    SEMICOLON       reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)


state 152

    (39) ParametersList -> IdentifierList Type .
    (43) ParameterDecl -> IdentifierList Type .

    RPAREN          reduce using rule 39 (ParametersList -> IdentifierList Type .)
    COMMA           reduce using rule 43 (ParameterDecl -> IdentifierList Type .)


state 153

    (41) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA . ParameterDecl
    (43) ParameterDecl -> . IdentifierList Type
    (44) ParameterDecl -> . Type
    (61) IdentifierList -> . IDENT IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . IMAG
    (10) TypeToken -> . STRING
    (11) TypeToken -> . BOOL
    (12) TypeToken -> . TYPE IDENT
    (97) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    IDENT           shift and go to state 105
    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    IMAG            shift and go to state 70
    STRING          shift and go to state 71
    BOOL            shift and go to state 72
    TYPE            shift and go to state 73
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    ParameterDecl                  shift and go to state 228
    IdentifierList                 shift and go to state 229
    Type                           shift and go to state 230
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 154

    (42) ParameterDeclCommaRep -> ParameterDecl COMMA . ParameterDecl
    (43) ParameterDecl -> . IdentifierList Type
    (44) ParameterDecl -> . Type
    (61) IdentifierList -> . IDENT IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . IMAG
    (10) TypeToken -> . STRING
    (11) TypeToken -> . BOOL
    (12) TypeToken -> . TYPE IDENT
    (97) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    IDENT           shift and go to state 105
    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    IMAG            shift and go to state 70
    STRING          shift and go to state 71
    BOOL            shift and go to state 72
    TYPE            shift and go to state 73
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    ParameterDecl                  shift and go to state 231
    IdentifierList                 shift and go to state 229
    Type                           shift and go to state 230
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 155

    (56) ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON .

    RPAREN          reduce using rule 56 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON .)
    IDENT           reduce using rule 56 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON .)


state 156

    (59) TypeExprListOpt -> TypeOpt ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 59 (TypeExprListOpt -> TypeOpt ASSIGN ExpressionList .)


state 157

    (4) Type -> LPAREN Type RPAREN .

    ASSIGN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    LBRACE          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    RPAREN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    STRING_LITERAL  reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    COLON           reduce using rule 4 (Type -> LPAREN Type RPAREN .)


state 158

    (97) QualifiedIdent -> IDENT PERIOD TypeName .

    ASSIGN          reduce using rule 97 (QualifiedIdent -> IDENT PERIOD TypeName .)
    SEMICOLON       reduce using rule 97 (QualifiedIdent -> IDENT PERIOD TypeName .)
    LBRACE          reduce using rule 97 (QualifiedIdent -> IDENT PERIOD TypeName .)
    RPAREN          reduce using rule 97 (QualifiedIdent -> IDENT PERIOD TypeName .)
    COMMA           reduce using rule 97 (QualifiedIdent -> IDENT PERIOD TypeName .)
    STRING_LITERAL  reduce using rule 97 (QualifiedIdent -> IDENT PERIOD TypeName .)
    COLON           reduce using rule 97 (QualifiedIdent -> IDENT PERIOD TypeName .)


state 159

    (18) ArrayType -> LBRACK ArrayLength RBRACK . ElementType
    (20) ElementType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . IMAG
    (10) TypeToken -> . STRING
    (11) TypeToken -> . BOOL
    (12) TypeToken -> . TYPE IDENT
    (97) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    IMAG            shift and go to state 70
    STRING          shift and go to state 71
    BOOL            shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    ElementType                    shift and go to state 232
    Type                           shift and go to state 233
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 160

    (133) Expression -> Expression BinaryOp . Expression
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    Expression                     shift and go to state 234
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 161

    (139) BinaryOp -> LOR .

    NOT             reduce using rule 139 (BinaryOp -> LOR .)
    ADD             reduce using rule 139 (BinaryOp -> LOR .)
    SUB             reduce using rule 139 (BinaryOp -> LOR .)
    MUL             reduce using rule 139 (BinaryOp -> LOR .)
    AND             reduce using rule 139 (BinaryOp -> LOR .)
    LPAREN          reduce using rule 139 (BinaryOp -> LOR .)
    IDENT           reduce using rule 139 (BinaryOp -> LOR .)
    INT_LITERAL     reduce using rule 139 (BinaryOp -> LOR .)
    FLOAT_LITERAL   reduce using rule 139 (BinaryOp -> LOR .)
    STRING_LITERAL  reduce using rule 139 (BinaryOp -> LOR .)


state 162

    (140) BinaryOp -> LAND .

    NOT             reduce using rule 140 (BinaryOp -> LAND .)
    ADD             reduce using rule 140 (BinaryOp -> LAND .)
    SUB             reduce using rule 140 (BinaryOp -> LAND .)
    MUL             reduce using rule 140 (BinaryOp -> LAND .)
    AND             reduce using rule 140 (BinaryOp -> LAND .)
    LPAREN          reduce using rule 140 (BinaryOp -> LAND .)
    IDENT           reduce using rule 140 (BinaryOp -> LAND .)
    INT_LITERAL     reduce using rule 140 (BinaryOp -> LAND .)
    FLOAT_LITERAL   reduce using rule 140 (BinaryOp -> LAND .)
    STRING_LITERAL  reduce using rule 140 (BinaryOp -> LAND .)


state 163

    (141) BinaryOp -> RelOp .

    NOT             reduce using rule 141 (BinaryOp -> RelOp .)
    ADD             reduce using rule 141 (BinaryOp -> RelOp .)
    SUB             reduce using rule 141 (BinaryOp -> RelOp .)
    MUL             reduce using rule 141 (BinaryOp -> RelOp .)
    AND             reduce using rule 141 (BinaryOp -> RelOp .)
    LPAREN          reduce using rule 141 (BinaryOp -> RelOp .)
    IDENT           reduce using rule 141 (BinaryOp -> RelOp .)
    INT_LITERAL     reduce using rule 141 (BinaryOp -> RelOp .)
    FLOAT_LITERAL   reduce using rule 141 (BinaryOp -> RelOp .)
    STRING_LITERAL  reduce using rule 141 (BinaryOp -> RelOp .)


state 164

    (142) BinaryOp -> AddMulOp .

    NOT             reduce using rule 142 (BinaryOp -> AddMulOp .)
    ADD             reduce using rule 142 (BinaryOp -> AddMulOp .)
    SUB             reduce using rule 142 (BinaryOp -> AddMulOp .)
    MUL             reduce using rule 142 (BinaryOp -> AddMulOp .)
    AND             reduce using rule 142 (BinaryOp -> AddMulOp .)
    LPAREN          reduce using rule 142 (BinaryOp -> AddMulOp .)
    IDENT           reduce using rule 142 (BinaryOp -> AddMulOp .)
    INT_LITERAL     reduce using rule 142 (BinaryOp -> AddMulOp .)
    FLOAT_LITERAL   reduce using rule 142 (BinaryOp -> AddMulOp .)
    STRING_LITERAL  reduce using rule 142 (BinaryOp -> AddMulOp .)


state 165

    (143) RelOp -> EQL .

    NOT             reduce using rule 143 (RelOp -> EQL .)
    ADD             reduce using rule 143 (RelOp -> EQL .)
    SUB             reduce using rule 143 (RelOp -> EQL .)
    MUL             reduce using rule 143 (RelOp -> EQL .)
    AND             reduce using rule 143 (RelOp -> EQL .)
    LPAREN          reduce using rule 143 (RelOp -> EQL .)
    IDENT           reduce using rule 143 (RelOp -> EQL .)
    INT_LITERAL     reduce using rule 143 (RelOp -> EQL .)
    FLOAT_LITERAL   reduce using rule 143 (RelOp -> EQL .)
    STRING_LITERAL  reduce using rule 143 (RelOp -> EQL .)


state 166

    (144) RelOp -> NEQ .

    NOT             reduce using rule 144 (RelOp -> NEQ .)
    ADD             reduce using rule 144 (RelOp -> NEQ .)
    SUB             reduce using rule 144 (RelOp -> NEQ .)
    MUL             reduce using rule 144 (RelOp -> NEQ .)
    AND             reduce using rule 144 (RelOp -> NEQ .)
    LPAREN          reduce using rule 144 (RelOp -> NEQ .)
    IDENT           reduce using rule 144 (RelOp -> NEQ .)
    INT_LITERAL     reduce using rule 144 (RelOp -> NEQ .)
    FLOAT_LITERAL   reduce using rule 144 (RelOp -> NEQ .)
    STRING_LITERAL  reduce using rule 144 (RelOp -> NEQ .)


state 167

    (145) RelOp -> LSS .

    NOT             reduce using rule 145 (RelOp -> LSS .)
    ADD             reduce using rule 145 (RelOp -> LSS .)
    SUB             reduce using rule 145 (RelOp -> LSS .)
    MUL             reduce using rule 145 (RelOp -> LSS .)
    AND             reduce using rule 145 (RelOp -> LSS .)
    LPAREN          reduce using rule 145 (RelOp -> LSS .)
    IDENT           reduce using rule 145 (RelOp -> LSS .)
    INT_LITERAL     reduce using rule 145 (RelOp -> LSS .)
    FLOAT_LITERAL   reduce using rule 145 (RelOp -> LSS .)
    STRING_LITERAL  reduce using rule 145 (RelOp -> LSS .)


state 168

    (146) RelOp -> GTR .

    NOT             reduce using rule 146 (RelOp -> GTR .)
    ADD             reduce using rule 146 (RelOp -> GTR .)
    SUB             reduce using rule 146 (RelOp -> GTR .)
    MUL             reduce using rule 146 (RelOp -> GTR .)
    AND             reduce using rule 146 (RelOp -> GTR .)
    LPAREN          reduce using rule 146 (RelOp -> GTR .)
    IDENT           reduce using rule 146 (RelOp -> GTR .)
    INT_LITERAL     reduce using rule 146 (RelOp -> GTR .)
    FLOAT_LITERAL   reduce using rule 146 (RelOp -> GTR .)
    STRING_LITERAL  reduce using rule 146 (RelOp -> GTR .)


state 169

    (147) RelOp -> LEQ .

    NOT             reduce using rule 147 (RelOp -> LEQ .)
    ADD             reduce using rule 147 (RelOp -> LEQ .)
    SUB             reduce using rule 147 (RelOp -> LEQ .)
    MUL             reduce using rule 147 (RelOp -> LEQ .)
    AND             reduce using rule 147 (RelOp -> LEQ .)
    LPAREN          reduce using rule 147 (RelOp -> LEQ .)
    IDENT           reduce using rule 147 (RelOp -> LEQ .)
    INT_LITERAL     reduce using rule 147 (RelOp -> LEQ .)
    FLOAT_LITERAL   reduce using rule 147 (RelOp -> LEQ .)
    STRING_LITERAL  reduce using rule 147 (RelOp -> LEQ .)


state 170

    (148) RelOp -> GEQ .

    NOT             reduce using rule 148 (RelOp -> GEQ .)
    ADD             reduce using rule 148 (RelOp -> GEQ .)
    SUB             reduce using rule 148 (RelOp -> GEQ .)
    MUL             reduce using rule 148 (RelOp -> GEQ .)
    AND             reduce using rule 148 (RelOp -> GEQ .)
    LPAREN          reduce using rule 148 (RelOp -> GEQ .)
    IDENT           reduce using rule 148 (RelOp -> GEQ .)
    INT_LITERAL     reduce using rule 148 (RelOp -> GEQ .)
    FLOAT_LITERAL   reduce using rule 148 (RelOp -> GEQ .)
    STRING_LITERAL  reduce using rule 148 (RelOp -> GEQ .)


state 171

    (149) AddMulOp -> UnaryOp .

    NOT             reduce using rule 149 (AddMulOp -> UnaryOp .)
    ADD             reduce using rule 149 (AddMulOp -> UnaryOp .)
    SUB             reduce using rule 149 (AddMulOp -> UnaryOp .)
    MUL             reduce using rule 149 (AddMulOp -> UnaryOp .)
    AND             reduce using rule 149 (AddMulOp -> UnaryOp .)
    LPAREN          reduce using rule 149 (AddMulOp -> UnaryOp .)
    IDENT           reduce using rule 149 (AddMulOp -> UnaryOp .)
    INT_LITERAL     reduce using rule 149 (AddMulOp -> UnaryOp .)
    FLOAT_LITERAL   reduce using rule 149 (AddMulOp -> UnaryOp .)
    STRING_LITERAL  reduce using rule 149 (AddMulOp -> UnaryOp .)


state 172

    (150) AddMulOp -> OR .

    NOT             reduce using rule 150 (AddMulOp -> OR .)
    ADD             reduce using rule 150 (AddMulOp -> OR .)
    SUB             reduce using rule 150 (AddMulOp -> OR .)
    MUL             reduce using rule 150 (AddMulOp -> OR .)
    AND             reduce using rule 150 (AddMulOp -> OR .)
    LPAREN          reduce using rule 150 (AddMulOp -> OR .)
    IDENT           reduce using rule 150 (AddMulOp -> OR .)
    INT_LITERAL     reduce using rule 150 (AddMulOp -> OR .)
    FLOAT_LITERAL   reduce using rule 150 (AddMulOp -> OR .)
    STRING_LITERAL  reduce using rule 150 (AddMulOp -> OR .)


state 173

    (151) AddMulOp -> XOR .

    NOT             reduce using rule 151 (AddMulOp -> XOR .)
    ADD             reduce using rule 151 (AddMulOp -> XOR .)
    SUB             reduce using rule 151 (AddMulOp -> XOR .)
    MUL             reduce using rule 151 (AddMulOp -> XOR .)
    AND             reduce using rule 151 (AddMulOp -> XOR .)
    LPAREN          reduce using rule 151 (AddMulOp -> XOR .)
    IDENT           reduce using rule 151 (AddMulOp -> XOR .)
    INT_LITERAL     reduce using rule 151 (AddMulOp -> XOR .)
    FLOAT_LITERAL   reduce using rule 151 (AddMulOp -> XOR .)
    STRING_LITERAL  reduce using rule 151 (AddMulOp -> XOR .)


state 174

    (152) AddMulOp -> QUO .

    NOT             reduce using rule 152 (AddMulOp -> QUO .)
    ADD             reduce using rule 152 (AddMulOp -> QUO .)
    SUB             reduce using rule 152 (AddMulOp -> QUO .)
    MUL             reduce using rule 152 (AddMulOp -> QUO .)
    AND             reduce using rule 152 (AddMulOp -> QUO .)
    LPAREN          reduce using rule 152 (AddMulOp -> QUO .)
    IDENT           reduce using rule 152 (AddMulOp -> QUO .)
    INT_LITERAL     reduce using rule 152 (AddMulOp -> QUO .)
    FLOAT_LITERAL   reduce using rule 152 (AddMulOp -> QUO .)
    STRING_LITERAL  reduce using rule 152 (AddMulOp -> QUO .)


state 175

    (153) AddMulOp -> REM .

    NOT             reduce using rule 153 (AddMulOp -> REM .)
    ADD             reduce using rule 153 (AddMulOp -> REM .)
    SUB             reduce using rule 153 (AddMulOp -> REM .)
    MUL             reduce using rule 153 (AddMulOp -> REM .)
    AND             reduce using rule 153 (AddMulOp -> REM .)
    LPAREN          reduce using rule 153 (AddMulOp -> REM .)
    IDENT           reduce using rule 153 (AddMulOp -> REM .)
    INT_LITERAL     reduce using rule 153 (AddMulOp -> REM .)
    FLOAT_LITERAL   reduce using rule 153 (AddMulOp -> REM .)
    STRING_LITERAL  reduce using rule 153 (AddMulOp -> REM .)


state 176

    (154) AddMulOp -> SHL .

    NOT             reduce using rule 154 (AddMulOp -> SHL .)
    ADD             reduce using rule 154 (AddMulOp -> SHL .)
    SUB             reduce using rule 154 (AddMulOp -> SHL .)
    MUL             reduce using rule 154 (AddMulOp -> SHL .)
    AND             reduce using rule 154 (AddMulOp -> SHL .)
    LPAREN          reduce using rule 154 (AddMulOp -> SHL .)
    IDENT           reduce using rule 154 (AddMulOp -> SHL .)
    INT_LITERAL     reduce using rule 154 (AddMulOp -> SHL .)
    FLOAT_LITERAL   reduce using rule 154 (AddMulOp -> SHL .)
    STRING_LITERAL  reduce using rule 154 (AddMulOp -> SHL .)


state 177

    (155) AddMulOp -> SHR .

    NOT             reduce using rule 155 (AddMulOp -> SHR .)
    ADD             reduce using rule 155 (AddMulOp -> SHR .)
    SUB             reduce using rule 155 (AddMulOp -> SHR .)
    MUL             reduce using rule 155 (AddMulOp -> SHR .)
    AND             reduce using rule 155 (AddMulOp -> SHR .)
    LPAREN          reduce using rule 155 (AddMulOp -> SHR .)
    IDENT           reduce using rule 155 (AddMulOp -> SHR .)
    INT_LITERAL     reduce using rule 155 (AddMulOp -> SHR .)
    FLOAT_LITERAL   reduce using rule 155 (AddMulOp -> SHR .)
    STRING_LITERAL  reduce using rule 155 (AddMulOp -> SHR .)


state 178

    (117) PrimaryExpr -> PrimaryExpr Selector .

    PERIOD          reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACK          reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    LPAREN          reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    LOR             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    LAND            reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    EQL             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    NEQ             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    LSS             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    GTR             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    LEQ             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    GEQ             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    OR              reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    QUO             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    REM             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    SHL             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    SHR             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    ADD             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    SUB             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    MUL             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    AND             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    RBRACK          reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    COMMA           reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    SEMICOLON       reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    RPAREN          reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    INC             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    DEC             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    ADD_ASSIGN      reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    SUB_ASSIGN      reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    MUL_ASSIGN      reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    QUO_ASSIGN      reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    REM_ASSIGN      reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    AND_ASSIGN      reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    OR_ASSIGN       reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR_ASSIGN      reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    SHL_ASSIGN      reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    SHR_ASSIGN      reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    ASSIGN          reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    COLON           reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACE          reduce using rule 117 (PrimaryExpr -> PrimaryExpr Selector .)


state 179

    (118) PrimaryExpr -> PrimaryExpr Index .

    PERIOD          reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACK          reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    LPAREN          reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    LOR             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    LAND            reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    EQL             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    NEQ             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    LSS             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    GTR             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    LEQ             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    GEQ             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    XOR             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    QUO             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    REM             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    SHL             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    SHR             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    ADD             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    SUB             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    MUL             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    AND             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    RBRACK          reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOLON       reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    RPAREN          reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    INC             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    DEC             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    ADD_ASSIGN      reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    SUB_ASSIGN      reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    MUL_ASSIGN      reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    QUO_ASSIGN      reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    REM_ASSIGN      reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    AND_ASSIGN      reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    OR_ASSIGN       reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    XOR_ASSIGN      reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    SHL_ASSIGN      reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    SHR_ASSIGN      reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    ASSIGN          reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACE          reduce using rule 118 (PrimaryExpr -> PrimaryExpr Index .)


state 180

    (119) PrimaryExpr -> PrimaryExpr Slice .

    PERIOD          reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACK          reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    LPAREN          reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    LOR             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    LAND            reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    EQL             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    NEQ             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    LSS             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    GTR             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    LEQ             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    GEQ             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    QUO             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    REM             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    SHL             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    SHR             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    ADD             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    SUB             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    MUL             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    AND             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    RBRACK          reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOLON       reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    RPAREN          reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    INC             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    DEC             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    ADD_ASSIGN      reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    SUB_ASSIGN      reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    MUL_ASSIGN      reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    QUO_ASSIGN      reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    REM_ASSIGN      reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_ASSIGN      reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    OR_ASSIGN       reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR_ASSIGN      reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    SHL_ASSIGN      reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    SHR_ASSIGN      reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    ASSIGN          reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACE          reduce using rule 119 (PrimaryExpr -> PrimaryExpr Slice .)


state 181

    (120) PrimaryExpr -> PrimaryExpr TypeAssertion .

    PERIOD          reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LBRACK          reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LPAREN          reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LOR             reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LAND            reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    EQL             reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    NEQ             reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LSS             reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    GTR             reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LEQ             reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    GEQ             reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    OR              reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    XOR             reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    QUO             reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    REM             reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SHL             reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SHR             reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ADD             reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SUB             reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MUL             reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    AND             reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RBRACK          reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COMMA           reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SEMICOLON       reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RPAREN          reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    INC             reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DEC             reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ADD_ASSIGN      reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SUB_ASSIGN      reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MUL_ASSIGN      reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    QUO_ASSIGN      reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    REM_ASSIGN      reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    AND_ASSIGN      reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    OR_ASSIGN       reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    XOR_ASSIGN      reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SHL_ASSIGN      reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SHR_ASSIGN      reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ASSIGN          reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COLON           reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LBRACE          reduce using rule 120 (PrimaryExpr -> PrimaryExpr TypeAssertion .)


state 182

    (121) PrimaryExpr -> PrimaryExpr Arguments .

    PERIOD          reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACK          reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    LPAREN          reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    LOR             reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    LAND            reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQL             reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    NEQ             reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    LSS             reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    GTR             reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEQ             reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    GEQ             reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR             reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    QUO             reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    REM             reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHL             reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHR             reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD             reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB             reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL             reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND             reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACK          reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOLON       reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    RPAREN          reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    INC             reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    DEC             reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    QUO_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    REM_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR_ASSIGN       reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHL_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHR_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    ASSIGN          reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACE          reduce using rule 121 (PrimaryExpr -> PrimaryExpr Arguments .)


state 183

    (122) Selector -> PERIOD . IDENT
    (126) TypeAssertion -> PERIOD . LPAREN Type RPAREN

    IDENT           shift and go to state 235
    LPAREN          shift and go to state 236


state 184

    (123) Index -> LBRACK . Expression RBRACK
    (124) Slice -> LBRACK . ExpressionOpt COLON ExpressionOpt RBRACK
    (125) Slice -> LBRACK . ExpressionOpt COLON Expression COLON Expression RBRACK
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (134) ExpressionOpt -> . Expression
    (135) ExpressionOpt -> . epsilon
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (257) epsilon -> .
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    NOT             shift and go to state 118
    COLON           reduce using rule 257 (epsilon -> .)
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    Expression                     shift and go to state 237
    ExpressionOpt                  shift and go to state 238
    UnaryExpr                      shift and go to state 115
    epsilon                        shift and go to state 239
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 185

    (127) Arguments -> LPAREN . ExpressionListTypeOpt RPAREN
    (128) ExpressionListTypeOpt -> . ExpressionList
    (129) ExpressionListTypeOpt -> . epsilon
    (64) ExpressionList -> . Expression ExpressionRep
    (257) epsilon -> .
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    RPAREN          reduce using rule 257 (epsilon -> .)
    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    ExpressionListTypeOpt          shift and go to state 240
    ExpressionList                 shift and go to state 241
    epsilon                        shift and go to state 242
    Expression                     shift and go to state 145
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 186

    (137) UnaryExpr -> UnaryOp UnaryExpr .

    LOR             reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    LAND            reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQL             reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    NEQ             reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    LSS             reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    GTR             reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    LEQ             reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    GEQ             reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR              reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR             reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    QUO             reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    REM             reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHL             reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHR             reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    ADD             reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    SUB             reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    MUL             reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND             reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    RBRACK          reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMMA           reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    SEMICOLON       reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    RPAREN          reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    INC             reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    DEC             reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    ADD_ASSIGN      reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    SUB_ASSIGN      reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    MUL_ASSIGN      reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    QUO_ASSIGN      reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    REM_ASSIGN      reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_ASSIGN      reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR_ASSIGN       reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR_ASSIGN      reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHL_ASSIGN      reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHR_ASSIGN      reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    ASSIGN          reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    COLON           reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    LBRACE          reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)


state 187

    (138) UnaryExpr -> NOT UnaryExpr .

    LOR             reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    LAND            reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    EQL             reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    NEQ             reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    LSS             reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    GTR             reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    LEQ             reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    GEQ             reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    OR              reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    XOR             reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    QUO             reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    REM             reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    SHL             reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    SHR             reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    ADD             reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    SUB             reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    MUL             reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    AND             reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    RBRACK          reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    COMMA           reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    SEMICOLON       reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    RPAREN          reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    INC             reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    DEC             reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    ADD_ASSIGN      reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    SUB_ASSIGN      reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    MUL_ASSIGN      reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    QUO_ASSIGN      reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    REM_ASSIGN      reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    AND_ASSIGN      reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    OR_ASSIGN       reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    XOR_ASSIGN      reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    SHL_ASSIGN      reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    SHR_ASSIGN      reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    ASSIGN          reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    COLON           reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    LBRACE          reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)


state 188

    (91) Operand -> LPAREN Expression . RPAREN
    (133) Expression -> Expression . BinaryOp Expression
    (139) BinaryOp -> . LOR
    (140) BinaryOp -> . LAND
    (141) BinaryOp -> . RelOp
    (142) BinaryOp -> . AddMulOp
    (143) RelOp -> . EQL
    (144) RelOp -> . NEQ
    (145) RelOp -> . LSS
    (146) RelOp -> . GTR
    (147) RelOp -> . LEQ
    (148) RelOp -> . GEQ
    (149) AddMulOp -> . UnaryOp
    (150) AddMulOp -> . OR
    (151) AddMulOp -> . XOR
    (152) AddMulOp -> . QUO
    (153) AddMulOp -> . REM
    (154) AddMulOp -> . SHL
    (155) AddMulOp -> . SHR
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND

    RPAREN          shift and go to state 243
    LOR             shift and go to state 161
    LAND            shift and go to state 162
    EQL             shift and go to state 165
    NEQ             shift and go to state 166
    LSS             shift and go to state 167
    GTR             shift and go to state 168
    LEQ             shift and go to state 169
    GEQ             shift and go to state 170
    OR              shift and go to state 172
    XOR             shift and go to state 173
    QUO             shift and go to state 174
    REM             shift and go to state 175
    SHL             shift and go to state 176
    SHR             shift and go to state 177
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 160
    RelOp                          shift and go to state 163
    AddMulOp                       shift and go to state 164
    UnaryOp                        shift and go to state 171

state 189

    (21) StructType -> STRUCT LBRACE FieldDeclRep . RBRACE
    (22) FieldDeclRep -> FieldDeclRep . FieldDecl SEMICOLON
    (24) FieldDecl -> . IdentifierList Type TagOpt
    (61) IdentifierList -> . IDENT IdentifierRep

    RBRACE          shift and go to state 244
    IDENT           shift and go to state 37

    FieldDecl                      shift and go to state 245
    IdentifierList                 shift and go to state 246

state 190

    (23) FieldDeclRep -> epsilon .

    RBRACE          reduce using rule 23 (FieldDeclRep -> epsilon .)
    IDENT           reduce using rule 23 (FieldDeclRep -> epsilon .)


state 191

    (62) IdentifierRep -> IdentifierRep COMMA IDENT .

    COMMA           reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    LPAREN          reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    INT             reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    FLOAT           reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    IMAG            reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    STRING          reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    BOOL            reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    TYPE            reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    IDENT           reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    LBRACK          reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    STRUCT          reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    MUL             reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    ASSIGN          reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    SEMICOLON       reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)


state 192

    (69) TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON .

    RPAREN          reduce using rule 69 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON .)
    IDENT           reduce using rule 69 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON .)


state 193

    (77) VarSpecRep -> VarSpecRep VarSpec SEMICOLON .

    RPAREN          reduce using rule 77 (VarSpecRep -> VarSpecRep VarSpec SEMICOLON .)
    IDENT           reduce using rule 77 (VarSpecRep -> VarSpecRep VarSpec SEMICOLON .)


state 194

    (81) ExpressionListOpt -> ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 81 (ExpressionListOpt -> ASSIGN ExpressionList .)


state 195

    (64) ExpressionList -> Expression ExpressionRep .
    (65) ExpressionRep -> ExpressionRep . COMMA Expression

    SEMICOLON       reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    ADD_ASSIGN      reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    SUB_ASSIGN      reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    MUL_ASSIGN      reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    QUO_ASSIGN      reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    REM_ASSIGN      reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    AND_ASSIGN      reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    OR_ASSIGN       reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    XOR_ASSIGN      reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    SHL_ASSIGN      reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    SHR_ASSIGN      reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    ASSIGN          reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    RPAREN          reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    LBRACE          reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    COLON           reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    COMMA           shift and go to state 247


state 196

    (66) ExpressionRep -> epsilon .

    COMMA           reduce using rule 66 (ExpressionRep -> epsilon .)
    SEMICOLON       reduce using rule 66 (ExpressionRep -> epsilon .)
    RPAREN          reduce using rule 66 (ExpressionRep -> epsilon .)
    LBRACE          reduce using rule 66 (ExpressionRep -> epsilon .)
    COLON           reduce using rule 66 (ExpressionRep -> epsilon .)
    ADD_ASSIGN      reduce using rule 66 (ExpressionRep -> epsilon .)
    SUB_ASSIGN      reduce using rule 66 (ExpressionRep -> epsilon .)
    MUL_ASSIGN      reduce using rule 66 (ExpressionRep -> epsilon .)
    QUO_ASSIGN      reduce using rule 66 (ExpressionRep -> epsilon .)
    REM_ASSIGN      reduce using rule 66 (ExpressionRep -> epsilon .)
    AND_ASSIGN      reduce using rule 66 (ExpressionRep -> epsilon .)
    OR_ASSIGN       reduce using rule 66 (ExpressionRep -> epsilon .)
    XOR_ASSIGN      reduce using rule 66 (ExpressionRep -> epsilon .)
    SHL_ASSIGN      reduce using rule 66 (ExpressionRep -> epsilon .)
    SHR_ASSIGN      reduce using rule 66 (ExpressionRep -> epsilon .)
    ASSIGN          reduce using rule 66 (ExpressionRep -> epsilon .)


state 197

    (45) Block -> LBRACE StatementList RBRACE .

    SEMICOLON       reduce using rule 45 (Block -> LBRACE StatementList RBRACE .)
    ELSE            reduce using rule 45 (Block -> LBRACE StatementList RBRACE .)


state 198

    (47) StatementRep -> StatementRep Statement . SEMICOLON

    SEMICOLON       shift and go to state 248


state 199

    (160) Statement -> Declaration .

    SEMICOLON       reduce using rule 160 (Statement -> Declaration .)


state 200

    (161) Statement -> LabeledStmt .

    SEMICOLON       reduce using rule 161 (Statement -> LabeledStmt .)


state 201

    (162) Statement -> SimpleStmt .

    SEMICOLON       reduce using rule 162 (Statement -> SimpleStmt .)


state 202

    (163) Statement -> ReturnStmt .

    SEMICOLON       reduce using rule 163 (Statement -> ReturnStmt .)


state 203

    (164) Statement -> BreakStmt .

    SEMICOLON       reduce using rule 164 (Statement -> BreakStmt .)


state 204

    (165) Statement -> ContinueStmt .

    SEMICOLON       reduce using rule 165 (Statement -> ContinueStmt .)


state 205

    (166) Statement -> GotoStmt .

    SEMICOLON       reduce using rule 166 (Statement -> GotoStmt .)


state 206

    (167) Statement -> Block .

    SEMICOLON       reduce using rule 167 (Statement -> Block .)


state 207

    (168) Statement -> IfStmt .

    SEMICOLON       reduce using rule 168 (Statement -> IfStmt .)


state 208

    (169) Statement -> SwitchStmt .

    SEMICOLON       reduce using rule 169 (Statement -> SwitchStmt .)


state 209

    (170) Statement -> ForStmt .

    SEMICOLON       reduce using rule 170 (Statement -> ForStmt .)


state 210

    (176) LabeledStmt -> Label . COLON Statement

    COLON           shift and go to state 249


state 211

    (171) SimpleStmt -> epsilon .

    SEMICOLON       reduce using rule 171 (SimpleStmt -> epsilon .)
    LBRACE          reduce using rule 171 (SimpleStmt -> epsilon .)


state 212

    (172) SimpleStmt -> ExpressionStmt .

    SEMICOLON       reduce using rule 172 (SimpleStmt -> ExpressionStmt .)
    LBRACE          reduce using rule 172 (SimpleStmt -> ExpressionStmt .)


state 213

    (173) SimpleStmt -> IncDecStmt .

    SEMICOLON       reduce using rule 173 (SimpleStmt -> IncDecStmt .)
    LBRACE          reduce using rule 173 (SimpleStmt -> IncDecStmt .)


state 214

    (174) SimpleStmt -> Assignment .

    SEMICOLON       reduce using rule 174 (SimpleStmt -> Assignment .)
    LBRACE          reduce using rule 174 (SimpleStmt -> Assignment .)


state 215

    (175) SimpleStmt -> ShortVarDecl .

    SEMICOLON       reduce using rule 175 (SimpleStmt -> ShortVarDecl .)
    LBRACE          reduce using rule 175 (SimpleStmt -> ShortVarDecl .)


state 216

    (233) ReturnStmt -> RETURN . ExpressionListPureOpt
    (234) ExpressionListPureOpt -> . ExpressionList
    (235) ExpressionListPureOpt -> . epsilon
    (64) ExpressionList -> . Expression ExpressionRep
    (257) epsilon -> .
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    SEMICOLON       reduce using rule 257 (epsilon -> .)
    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    ExpressionListPureOpt          shift and go to state 250
    ExpressionList                 shift and go to state 251
    epsilon                        shift and go to state 252
    Expression                     shift and go to state 145
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 217

    (236) BreakStmt -> BREAK . LabelOpt
    (238) LabelOpt -> . Label
    (239) LabelOpt -> . epsilon
    (177) Label -> . IDENT
    (257) epsilon -> .

    IDENT           shift and go to state 256
    SEMICOLON       reduce using rule 257 (epsilon -> .)

    LabelOpt                       shift and go to state 253
    Label                          shift and go to state 254
    epsilon                        shift and go to state 255

state 218

    (237) ContinueStmt -> CONTINUE . LabelOpt
    (238) LabelOpt -> . Label
    (239) LabelOpt -> . epsilon
    (177) Label -> . IDENT
    (257) epsilon -> .

    IDENT           shift and go to state 256
    SEMICOLON       reduce using rule 257 (epsilon -> .)

    LabelOpt                       shift and go to state 257
    Label                          shift and go to state 254
    epsilon                        shift and go to state 255

state 219

    (240) GotoStmt -> GOTO . Label
    (177) Label -> . IDENT

    IDENT           shift and go to state 256

    Label                          shift and go to state 258

state 220

    (194) IfStmt -> IF . Expression Block ElseOpt
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    Expression                     shift and go to state 259
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 221

    (178) ExpressionStmt -> Expression .
    (179) IncDecStmt -> Expression . INC
    (180) IncDecStmt -> Expression . DEC
    (133) Expression -> Expression . BinaryOp Expression
    (64) ExpressionList -> Expression . ExpressionRep
    (139) BinaryOp -> . LOR
    (140) BinaryOp -> . LAND
    (141) BinaryOp -> . RelOp
    (142) BinaryOp -> . AddMulOp
    (65) ExpressionRep -> . ExpressionRep COMMA Expression
    (66) ExpressionRep -> . epsilon
    (143) RelOp -> . EQL
    (144) RelOp -> . NEQ
    (145) RelOp -> . LSS
    (146) RelOp -> . GTR
    (147) RelOp -> . LEQ
    (148) RelOp -> . GEQ
    (149) AddMulOp -> . UnaryOp
    (150) AddMulOp -> . OR
    (151) AddMulOp -> . XOR
    (152) AddMulOp -> . QUO
    (153) AddMulOp -> . REM
    (154) AddMulOp -> . SHL
    (155) AddMulOp -> . SHR
    (257) epsilon -> .
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND

    SEMICOLON       reduce using rule 178 (ExpressionStmt -> Expression .)
    LBRACE          reduce using rule 178 (ExpressionStmt -> Expression .)
    INC             shift and go to state 260
    DEC             shift and go to state 261
    LOR             shift and go to state 161
    LAND            shift and go to state 162
    EQL             shift and go to state 165
    NEQ             shift and go to state 166
    LSS             shift and go to state 167
    GTR             shift and go to state 168
    LEQ             shift and go to state 169
    GEQ             shift and go to state 170
    OR              shift and go to state 172
    XOR             shift and go to state 173
    QUO             shift and go to state 174
    REM             shift and go to state 175
    SHL             shift and go to state 176
    SHR             shift and go to state 177
    COMMA           reduce using rule 257 (epsilon -> .)
    ADD_ASSIGN      reduce using rule 257 (epsilon -> .)
    SUB_ASSIGN      reduce using rule 257 (epsilon -> .)
    MUL_ASSIGN      reduce using rule 257 (epsilon -> .)
    QUO_ASSIGN      reduce using rule 257 (epsilon -> .)
    REM_ASSIGN      reduce using rule 257 (epsilon -> .)
    AND_ASSIGN      reduce using rule 257 (epsilon -> .)
    OR_ASSIGN       reduce using rule 257 (epsilon -> .)
    XOR_ASSIGN      reduce using rule 257 (epsilon -> .)
    SHL_ASSIGN      reduce using rule 257 (epsilon -> .)
    SHR_ASSIGN      reduce using rule 257 (epsilon -> .)
    ASSIGN          reduce using rule 257 (epsilon -> .)
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 160
    ExpressionRep                  shift and go to state 195
    RelOp                          shift and go to state 163
    AddMulOp                       shift and go to state 164
    epsilon                        shift and go to state 196
    UnaryOp                        shift and go to state 171

state 222

    (200) SwitchStmt -> ExprSwitchStmt .

    SEMICOLON       reduce using rule 200 (SwitchStmt -> ExprSwitchStmt .)


state 223

    (201) SwitchStmt -> TypeSwitchStmt .

    SEMICOLON       reduce using rule 201 (SwitchStmt -> TypeSwitchStmt .)


state 224

    (220) ForStmt -> FOR . ConditionBlockOpt Block
    (221) ConditionBlockOpt -> . epsilon
    (222) ConditionBlockOpt -> . Condition
    (223) ConditionBlockOpt -> . ForClause
    (224) ConditionBlockOpt -> . RangeClause
    (257) epsilon -> .
    (225) Condition -> . Expression
    (226) ForClause -> . SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt
    (229) RangeClause -> . ExpressionIdentListOpt RANGE Expression
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (171) SimpleStmt -> . epsilon
    (172) SimpleStmt -> . ExpressionStmt
    (173) SimpleStmt -> . IncDecStmt
    (174) SimpleStmt -> . Assignment
    (175) SimpleStmt -> . ShortVarDecl
    (230) ExpressionIdentListOpt -> . epsilon
    (231) ExpressionIdentListOpt -> . ExpressionIdentifier
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (178) ExpressionStmt -> . Expression
    (179) IncDecStmt -> . Expression INC
    (180) IncDecStmt -> . Expression DEC
    (181) Assignment -> . ExpressionList assign_op ExpressionList
    (83) ShortVarDecl -> . IDENT DEFINE Expression
    (232) ExpressionIdentifier -> . ExpressionList ASSIGN
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (64) ExpressionList -> . Expression ExpressionRep
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    LBRACE          reduce using rule 257 (epsilon -> .)
    SEMICOLON       reduce using rule 257 (epsilon -> .)
    RANGE           reduce using rule 257 (epsilon -> .)
    NOT             shift and go to state 118
    IDENT           shift and go to state 272
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    ConditionBlockOpt              shift and go to state 262
    epsilon                        shift and go to state 263
    Condition                      shift and go to state 264
    ForClause                      shift and go to state 265
    RangeClause                    shift and go to state 266
    Expression                     shift and go to state 267
    SimpleStmt                     shift and go to state 268
    ExpressionIdentListOpt         shift and go to state 269
    UnaryExpr                      shift and go to state 115
    ExpressionStmt                 shift and go to state 212
    IncDecStmt                     shift and go to state 213
    Assignment                     shift and go to state 214
    ShortVarDecl                   shift and go to state 215
    ExpressionIdentifier           shift and go to state 270
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    ExpressionList                 shift and go to state 271
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 225

    (177) Label -> IDENT .
    (83) ShortVarDecl -> IDENT . DEFINE Expression
    (96) OperandName -> IDENT .

    COLON           reduce using rule 177 (Label -> IDENT .)
    DEFINE          shift and go to state 273
    PERIOD          reduce using rule 96 (OperandName -> IDENT .)
    LBRACK          reduce using rule 96 (OperandName -> IDENT .)
    LPAREN          reduce using rule 96 (OperandName -> IDENT .)
    INC             reduce using rule 96 (OperandName -> IDENT .)
    DEC             reduce using rule 96 (OperandName -> IDENT .)
    LOR             reduce using rule 96 (OperandName -> IDENT .)
    LAND            reduce using rule 96 (OperandName -> IDENT .)
    EQL             reduce using rule 96 (OperandName -> IDENT .)
    NEQ             reduce using rule 96 (OperandName -> IDENT .)
    LSS             reduce using rule 96 (OperandName -> IDENT .)
    GTR             reduce using rule 96 (OperandName -> IDENT .)
    LEQ             reduce using rule 96 (OperandName -> IDENT .)
    GEQ             reduce using rule 96 (OperandName -> IDENT .)
    OR              reduce using rule 96 (OperandName -> IDENT .)
    XOR             reduce using rule 96 (OperandName -> IDENT .)
    QUO             reduce using rule 96 (OperandName -> IDENT .)
    REM             reduce using rule 96 (OperandName -> IDENT .)
    SHL             reduce using rule 96 (OperandName -> IDENT .)
    SHR             reduce using rule 96 (OperandName -> IDENT .)
    ADD             reduce using rule 96 (OperandName -> IDENT .)
    SUB             reduce using rule 96 (OperandName -> IDENT .)
    MUL             reduce using rule 96 (OperandName -> IDENT .)
    AND             reduce using rule 96 (OperandName -> IDENT .)
    COMMA           reduce using rule 96 (OperandName -> IDENT .)
    SEMICOLON       reduce using rule 96 (OperandName -> IDENT .)
    ADD_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    SUB_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    MUL_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    QUO_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    REM_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    AND_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    OR_ASSIGN       reduce using rule 96 (OperandName -> IDENT .)
    XOR_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    SHL_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    SHR_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    ASSIGN          reduce using rule 96 (OperandName -> IDENT .)


state 226

    (181) Assignment -> ExpressionList . assign_op ExpressionList
    (182) assign_op -> . AssignOp
    (183) AssignOp -> . ADD_ASSIGN
    (184) AssignOp -> . SUB_ASSIGN
    (185) AssignOp -> . MUL_ASSIGN
    (186) AssignOp -> . QUO_ASSIGN
    (187) AssignOp -> . REM_ASSIGN
    (188) AssignOp -> . AND_ASSIGN
    (189) AssignOp -> . OR_ASSIGN
    (190) AssignOp -> . XOR_ASSIGN
    (191) AssignOp -> . SHL_ASSIGN
    (192) AssignOp -> . SHR_ASSIGN
    (193) AssignOp -> . ASSIGN

    ADD_ASSIGN      shift and go to state 276
    SUB_ASSIGN      shift and go to state 277
    MUL_ASSIGN      shift and go to state 278
    QUO_ASSIGN      shift and go to state 279
    REM_ASSIGN      shift and go to state 280
    AND_ASSIGN      shift and go to state 281
    OR_ASSIGN       shift and go to state 282
    XOR_ASSIGN      shift and go to state 283
    SHL_ASSIGN      shift and go to state 284
    SHR_ASSIGN      shift and go to state 285
    ASSIGN          shift and go to state 286

    assign_op                      shift and go to state 274
    AssignOp                       shift and go to state 275

state 227

    (202) ExprSwitchStmt -> SWITCH . ExpressionOpt LBRACE ExprCaseClauseRep RBRACE
    (208) TypeSwitchStmt -> SWITCH . SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
    (134) ExpressionOpt -> . Expression
    (135) ExpressionOpt -> . epsilon
    (195) SimpleStmtOpt -> . SimpleStmt SEMICOLON
    (196) SimpleStmtOpt -> . epsilon
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (257) epsilon -> .
    (171) SimpleStmt -> . epsilon
    (172) SimpleStmt -> . ExpressionStmt
    (173) SimpleStmt -> . IncDecStmt
    (174) SimpleStmt -> . Assignment
    (175) SimpleStmt -> . ShortVarDecl
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (178) ExpressionStmt -> . Expression
    (179) IncDecStmt -> . Expression INC
    (180) IncDecStmt -> . Expression DEC
    (181) Assignment -> . ExpressionList assign_op ExpressionList
    (83) ShortVarDecl -> . IDENT DEFINE Expression
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (64) ExpressionList -> . Expression ExpressionRep
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INT_LITERAL resolved as shift
  ! shift/reduce conflict for FLOAT_LITERAL resolved as shift
  ! shift/reduce conflict for STRING_LITERAL resolved as shift
    LBRACE          reduce using rule 257 (epsilon -> .)
    SEMICOLON       reduce using rule 257 (epsilon -> .)
    NOT             shift and go to state 118
    IDENT           shift and go to state 272
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

  ! IDENT           [ reduce using rule 257 (epsilon -> .) ]
  ! LPAREN          [ reduce using rule 257 (epsilon -> .) ]
  ! INT_LITERAL     [ reduce using rule 257 (epsilon -> .) ]
  ! FLOAT_LITERAL   [ reduce using rule 257 (epsilon -> .) ]
  ! STRING_LITERAL  [ reduce using rule 257 (epsilon -> .) ]

    ExpressionOpt                  shift and go to state 287
    SimpleStmtOpt                  shift and go to state 288
    Expression                     shift and go to state 289
    epsilon                        shift and go to state 290
    SimpleStmt                     shift and go to state 291
    UnaryExpr                      shift and go to state 115
    ExpressionStmt                 shift and go to state 212
    IncDecStmt                     shift and go to state 213
    Assignment                     shift and go to state 214
    ShortVarDecl                   shift and go to state 215
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    ExpressionList                 shift and go to state 226
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 228

    (41) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .

    COMMA           reduce using rule 41 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)
    RPAREN          reduce using rule 41 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)


state 229

    (43) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . IMAG
    (10) TypeToken -> . STRING
    (11) TypeToken -> . BOOL
    (12) TypeToken -> . TYPE IDENT
    (97) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    IMAG            shift and go to state 70
    STRING          shift and go to state 71
    BOOL            shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Type                           shift and go to state 292
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 230

    (44) ParameterDecl -> Type .

    COMMA           reduce using rule 44 (ParameterDecl -> Type .)
    RPAREN          reduce using rule 44 (ParameterDecl -> Type .)


state 231

    (42) ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .

    COMMA           reduce using rule 42 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)
    RPAREN          reduce using rule 42 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)


state 232

    (18) ArrayType -> LBRACK ArrayLength RBRACK ElementType .

    ASSIGN          reduce using rule 18 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    SEMICOLON       reduce using rule 18 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    LBRACE          reduce using rule 18 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    RPAREN          reduce using rule 18 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    COMMA           reduce using rule 18 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    STRING_LITERAL  reduce using rule 18 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    COLON           reduce using rule 18 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)


state 233

    (20) ElementType -> Type .

    ASSIGN          reduce using rule 20 (ElementType -> Type .)
    SEMICOLON       reduce using rule 20 (ElementType -> Type .)
    LBRACE          reduce using rule 20 (ElementType -> Type .)
    RPAREN          reduce using rule 20 (ElementType -> Type .)
    COMMA           reduce using rule 20 (ElementType -> Type .)
    STRING_LITERAL  reduce using rule 20 (ElementType -> Type .)
    COLON           reduce using rule 20 (ElementType -> Type .)


state 234

    (133) Expression -> Expression BinaryOp Expression .
    (133) Expression -> Expression . BinaryOp Expression
    (139) BinaryOp -> . LOR
    (140) BinaryOp -> . LAND
    (141) BinaryOp -> . RelOp
    (142) BinaryOp -> . AddMulOp
    (143) RelOp -> . EQL
    (144) RelOp -> . NEQ
    (145) RelOp -> . LSS
    (146) RelOp -> . GTR
    (147) RelOp -> . LEQ
    (148) RelOp -> . GEQ
    (149) AddMulOp -> . UnaryOp
    (150) AddMulOp -> . OR
    (151) AddMulOp -> . XOR
    (152) AddMulOp -> . QUO
    (153) AddMulOp -> . REM
    (154) AddMulOp -> . SHL
    (155) AddMulOp -> . SHR
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND

  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for EQL resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for GTR resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for QUO resolved as shift
  ! shift/reduce conflict for REM resolved as shift
  ! shift/reduce conflict for SHL resolved as shift
  ! shift/reduce conflict for SHR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    RBRACK          reduce using rule 133 (Expression -> Expression BinaryOp Expression .)
    COMMA           reduce using rule 133 (Expression -> Expression BinaryOp Expression .)
    SEMICOLON       reduce using rule 133 (Expression -> Expression BinaryOp Expression .)
    RPAREN          reduce using rule 133 (Expression -> Expression BinaryOp Expression .)
    INC             reduce using rule 133 (Expression -> Expression BinaryOp Expression .)
    DEC             reduce using rule 133 (Expression -> Expression BinaryOp Expression .)
    ADD_ASSIGN      reduce using rule 133 (Expression -> Expression BinaryOp Expression .)
    SUB_ASSIGN      reduce using rule 133 (Expression -> Expression BinaryOp Expression .)
    MUL_ASSIGN      reduce using rule 133 (Expression -> Expression BinaryOp Expression .)
    QUO_ASSIGN      reduce using rule 133 (Expression -> Expression BinaryOp Expression .)
    REM_ASSIGN      reduce using rule 133 (Expression -> Expression BinaryOp Expression .)
    AND_ASSIGN      reduce using rule 133 (Expression -> Expression BinaryOp Expression .)
    OR_ASSIGN       reduce using rule 133 (Expression -> Expression BinaryOp Expression .)
    XOR_ASSIGN      reduce using rule 133 (Expression -> Expression BinaryOp Expression .)
    SHL_ASSIGN      reduce using rule 133 (Expression -> Expression BinaryOp Expression .)
    SHR_ASSIGN      reduce using rule 133 (Expression -> Expression BinaryOp Expression .)
    ASSIGN          reduce using rule 133 (Expression -> Expression BinaryOp Expression .)
    COLON           reduce using rule 133 (Expression -> Expression BinaryOp Expression .)
    LBRACE          reduce using rule 133 (Expression -> Expression BinaryOp Expression .)
    LOR             shift and go to state 161
    LAND            shift and go to state 162
    EQL             shift and go to state 165
    NEQ             shift and go to state 166
    LSS             shift and go to state 167
    GTR             shift and go to state 168
    LEQ             shift and go to state 169
    GEQ             shift and go to state 170
    OR              shift and go to state 172
    XOR             shift and go to state 173
    QUO             shift and go to state 174
    REM             shift and go to state 175
    SHL             shift and go to state 176
    SHR             shift and go to state 177
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

  ! LOR             [ reduce using rule 133 (Expression -> Expression BinaryOp Expression .) ]
  ! LAND            [ reduce using rule 133 (Expression -> Expression BinaryOp Expression .) ]
  ! EQL             [ reduce using rule 133 (Expression -> Expression BinaryOp Expression .) ]
  ! NEQ             [ reduce using rule 133 (Expression -> Expression BinaryOp Expression .) ]
  ! LSS             [ reduce using rule 133 (Expression -> Expression BinaryOp Expression .) ]
  ! GTR             [ reduce using rule 133 (Expression -> Expression BinaryOp Expression .) ]
  ! LEQ             [ reduce using rule 133 (Expression -> Expression BinaryOp Expression .) ]
  ! GEQ             [ reduce using rule 133 (Expression -> Expression BinaryOp Expression .) ]
  ! OR              [ reduce using rule 133 (Expression -> Expression BinaryOp Expression .) ]
  ! XOR             [ reduce using rule 133 (Expression -> Expression BinaryOp Expression .) ]
  ! QUO             [ reduce using rule 133 (Expression -> Expression BinaryOp Expression .) ]
  ! REM             [ reduce using rule 133 (Expression -> Expression BinaryOp Expression .) ]
  ! SHL             [ reduce using rule 133 (Expression -> Expression BinaryOp Expression .) ]
  ! SHR             [ reduce using rule 133 (Expression -> Expression BinaryOp Expression .) ]
  ! ADD             [ reduce using rule 133 (Expression -> Expression BinaryOp Expression .) ]
  ! SUB             [ reduce using rule 133 (Expression -> Expression BinaryOp Expression .) ]
  ! MUL             [ reduce using rule 133 (Expression -> Expression BinaryOp Expression .) ]
  ! AND             [ reduce using rule 133 (Expression -> Expression BinaryOp Expression .) ]

    BinaryOp                       shift and go to state 160
    RelOp                          shift and go to state 163
    AddMulOp                       shift and go to state 164
    UnaryOp                        shift and go to state 171

state 235

    (122) Selector -> PERIOD IDENT .

    PERIOD          reduce using rule 122 (Selector -> PERIOD IDENT .)
    LBRACK          reduce using rule 122 (Selector -> PERIOD IDENT .)
    LPAREN          reduce using rule 122 (Selector -> PERIOD IDENT .)
    LOR             reduce using rule 122 (Selector -> PERIOD IDENT .)
    LAND            reduce using rule 122 (Selector -> PERIOD IDENT .)
    EQL             reduce using rule 122 (Selector -> PERIOD IDENT .)
    NEQ             reduce using rule 122 (Selector -> PERIOD IDENT .)
    LSS             reduce using rule 122 (Selector -> PERIOD IDENT .)
    GTR             reduce using rule 122 (Selector -> PERIOD IDENT .)
    LEQ             reduce using rule 122 (Selector -> PERIOD IDENT .)
    GEQ             reduce using rule 122 (Selector -> PERIOD IDENT .)
    OR              reduce using rule 122 (Selector -> PERIOD IDENT .)
    XOR             reduce using rule 122 (Selector -> PERIOD IDENT .)
    QUO             reduce using rule 122 (Selector -> PERIOD IDENT .)
    REM             reduce using rule 122 (Selector -> PERIOD IDENT .)
    SHL             reduce using rule 122 (Selector -> PERIOD IDENT .)
    SHR             reduce using rule 122 (Selector -> PERIOD IDENT .)
    ADD             reduce using rule 122 (Selector -> PERIOD IDENT .)
    SUB             reduce using rule 122 (Selector -> PERIOD IDENT .)
    MUL             reduce using rule 122 (Selector -> PERIOD IDENT .)
    AND             reduce using rule 122 (Selector -> PERIOD IDENT .)
    RBRACK          reduce using rule 122 (Selector -> PERIOD IDENT .)
    COMMA           reduce using rule 122 (Selector -> PERIOD IDENT .)
    SEMICOLON       reduce using rule 122 (Selector -> PERIOD IDENT .)
    RPAREN          reduce using rule 122 (Selector -> PERIOD IDENT .)
    INC             reduce using rule 122 (Selector -> PERIOD IDENT .)
    DEC             reduce using rule 122 (Selector -> PERIOD IDENT .)
    ADD_ASSIGN      reduce using rule 122 (Selector -> PERIOD IDENT .)
    SUB_ASSIGN      reduce using rule 122 (Selector -> PERIOD IDENT .)
    MUL_ASSIGN      reduce using rule 122 (Selector -> PERIOD IDENT .)
    QUO_ASSIGN      reduce using rule 122 (Selector -> PERIOD IDENT .)
    REM_ASSIGN      reduce using rule 122 (Selector -> PERIOD IDENT .)
    AND_ASSIGN      reduce using rule 122 (Selector -> PERIOD IDENT .)
    OR_ASSIGN       reduce using rule 122 (Selector -> PERIOD IDENT .)
    XOR_ASSIGN      reduce using rule 122 (Selector -> PERIOD IDENT .)
    SHL_ASSIGN      reduce using rule 122 (Selector -> PERIOD IDENT .)
    SHR_ASSIGN      reduce using rule 122 (Selector -> PERIOD IDENT .)
    ASSIGN          reduce using rule 122 (Selector -> PERIOD IDENT .)
    COLON           reduce using rule 122 (Selector -> PERIOD IDENT .)
    LBRACE          reduce using rule 122 (Selector -> PERIOD IDENT .)


state 236

    (126) TypeAssertion -> PERIOD LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . IMAG
    (10) TypeToken -> . STRING
    (11) TypeToken -> . BOOL
    (12) TypeToken -> . TYPE IDENT
    (97) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    IMAG            shift and go to state 70
    STRING          shift and go to state 71
    BOOL            shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Type                           shift and go to state 293
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 237

    (123) Index -> LBRACK Expression . RBRACK
    (133) Expression -> Expression . BinaryOp Expression
    (134) ExpressionOpt -> Expression .
    (139) BinaryOp -> . LOR
    (140) BinaryOp -> . LAND
    (141) BinaryOp -> . RelOp
    (142) BinaryOp -> . AddMulOp
    (143) RelOp -> . EQL
    (144) RelOp -> . NEQ
    (145) RelOp -> . LSS
    (146) RelOp -> . GTR
    (147) RelOp -> . LEQ
    (148) RelOp -> . GEQ
    (149) AddMulOp -> . UnaryOp
    (150) AddMulOp -> . OR
    (151) AddMulOp -> . XOR
    (152) AddMulOp -> . QUO
    (153) AddMulOp -> . REM
    (154) AddMulOp -> . SHL
    (155) AddMulOp -> . SHR
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND

    RBRACK          shift and go to state 294
    COLON           reduce using rule 134 (ExpressionOpt -> Expression .)
    LOR             shift and go to state 161
    LAND            shift and go to state 162
    EQL             shift and go to state 165
    NEQ             shift and go to state 166
    LSS             shift and go to state 167
    GTR             shift and go to state 168
    LEQ             shift and go to state 169
    GEQ             shift and go to state 170
    OR              shift and go to state 172
    XOR             shift and go to state 173
    QUO             shift and go to state 174
    REM             shift and go to state 175
    SHL             shift and go to state 176
    SHR             shift and go to state 177
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 160
    RelOp                          shift and go to state 163
    AddMulOp                       shift and go to state 164
    UnaryOp                        shift and go to state 171

state 238

    (124) Slice -> LBRACK ExpressionOpt . COLON ExpressionOpt RBRACK
    (125) Slice -> LBRACK ExpressionOpt . COLON Expression COLON Expression RBRACK

    COLON           shift and go to state 295


state 239

    (135) ExpressionOpt -> epsilon .

    COLON           reduce using rule 135 (ExpressionOpt -> epsilon .)
    RBRACK          reduce using rule 135 (ExpressionOpt -> epsilon .)


state 240

    (127) Arguments -> LPAREN ExpressionListTypeOpt . RPAREN

    RPAREN          shift and go to state 296


state 241

    (128) ExpressionListTypeOpt -> ExpressionList .

    RPAREN          reduce using rule 128 (ExpressionListTypeOpt -> ExpressionList .)


state 242

    (129) ExpressionListTypeOpt -> epsilon .

    RPAREN          reduce using rule 129 (ExpressionListTypeOpt -> epsilon .)


state 243

    (91) Operand -> LPAREN Expression RPAREN .

    PERIOD          reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    LBRACK          reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    LOR             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    LAND            reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    EQL             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    NEQ             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    LSS             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    GTR             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    LEQ             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    GEQ             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    OR              reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    XOR             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    QUO             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    REM             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    SHL             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    SHR             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    ADD             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    SUB             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    MUL             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    AND             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    INC             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    DEC             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    ADD_ASSIGN      reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    SUB_ASSIGN      reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    MUL_ASSIGN      reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    QUO_ASSIGN      reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    REM_ASSIGN      reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    AND_ASSIGN      reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    OR_ASSIGN       reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    XOR_ASSIGN      reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    SHL_ASSIGN      reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    SHR_ASSIGN      reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    ASSIGN          reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)


state 244

    (21) StructType -> STRUCT LBRACE FieldDeclRep RBRACE .

    ASSIGN          reduce using rule 21 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    SEMICOLON       reduce using rule 21 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    LBRACE          reduce using rule 21 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    RPAREN          reduce using rule 21 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    COMMA           reduce using rule 21 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    STRING_LITERAL  reduce using rule 21 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    COLON           reduce using rule 21 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)


state 245

    (22) FieldDeclRep -> FieldDeclRep FieldDecl . SEMICOLON

    SEMICOLON       shift and go to state 297


state 246

    (24) FieldDecl -> IdentifierList . Type TagOpt
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . IMAG
    (10) TypeToken -> . STRING
    (11) TypeToken -> . BOOL
    (12) TypeToken -> . TYPE IDENT
    (97) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    IMAG            shift and go to state 70
    STRING          shift and go to state 71
    BOOL            shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Type                           shift and go to state 298
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 247

    (65) ExpressionRep -> ExpressionRep COMMA . Expression
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    Expression                     shift and go to state 299
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 248

    (47) StatementRep -> StatementRep Statement SEMICOLON .

    RETURN          reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    BREAK           reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    CONTINUE        reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    GOTO            reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    LBRACE          reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    IF              reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    FOR             reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    CONST           reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    TYPE            reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    VAR             reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    IDENT           reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    SWITCH          reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    NOT             reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    ADD             reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    SUB             reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    MUL             reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    AND             reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    LPAREN          reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    INT_LITERAL     reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    STRING_LITERAL  reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    SEMICOLON       reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    RBRACE          reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    CASE            reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    DEFAULT         reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)


state 249

    (176) LabeledStmt -> Label COLON . Statement
    (160) Statement -> . Declaration
    (161) Statement -> . LabeledStmt
    (162) Statement -> . SimpleStmt
    (163) Statement -> . ReturnStmt
    (164) Statement -> . BreakStmt
    (165) Statement -> . ContinueStmt
    (166) Statement -> . GotoStmt
    (167) Statement -> . Block
    (168) Statement -> . IfStmt
    (169) Statement -> . SwitchStmt
    (170) Statement -> . ForStmt
    (49) Declaration -> . ConstDecl
    (50) Declaration -> . TypeDecl
    (51) Declaration -> . VarDecl
    (176) LabeledStmt -> . Label COLON Statement
    (171) SimpleStmt -> . epsilon
    (172) SimpleStmt -> . ExpressionStmt
    (173) SimpleStmt -> . IncDecStmt
    (174) SimpleStmt -> . Assignment
    (175) SimpleStmt -> . ShortVarDecl
    (233) ReturnStmt -> . RETURN ExpressionListPureOpt
    (236) BreakStmt -> . BREAK LabelOpt
    (237) ContinueStmt -> . CONTINUE LabelOpt
    (240) GotoStmt -> . GOTO Label
    (45) Block -> . LBRACE StatementList RBRACE
    (194) IfStmt -> . IF Expression Block ElseOpt
    (200) SwitchStmt -> . ExprSwitchStmt
    (201) SwitchStmt -> . TypeSwitchStmt
    (220) ForStmt -> . FOR ConditionBlockOpt Block
    (54) ConstDecl -> . CONST ConstSpec
    (55) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (67) TypeDecl -> . TYPE TypeSpec
    (68) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (75) VarDecl -> . VAR VarSpec
    (76) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (177) Label -> . IDENT
    (257) epsilon -> .
    (178) ExpressionStmt -> . Expression
    (179) IncDecStmt -> . Expression INC
    (180) IncDecStmt -> . Expression DEC
    (181) Assignment -> . ExpressionList assign_op ExpressionList
    (83) ShortVarDecl -> . IDENT DEFINE Expression
    (202) ExprSwitchStmt -> . SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE
    (208) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (64) ExpressionList -> . Expression ExpressionRep
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    RETURN          shift and go to state 216
    BREAK           shift and go to state 217
    CONTINUE        shift and go to state 218
    GOTO            shift and go to state 219
    LBRACE          shift and go to state 92
    IF              shift and go to state 220
    FOR             shift and go to state 224
    CONST           shift and go to state 21
    TYPE            shift and go to state 22
    VAR             shift and go to state 23
    IDENT           shift and go to state 225
    SEMICOLON       reduce using rule 257 (epsilon -> .)
    SWITCH          shift and go to state 227
    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    Label                          shift and go to state 210
    Statement                      shift and go to state 300
    Declaration                    shift and go to state 199
    LabeledStmt                    shift and go to state 200
    SimpleStmt                     shift and go to state 201
    ReturnStmt                     shift and go to state 202
    BreakStmt                      shift and go to state 203
    ContinueStmt                   shift and go to state 204
    GotoStmt                       shift and go to state 205
    Block                          shift and go to state 206
    IfStmt                         shift and go to state 207
    SwitchStmt                     shift and go to state 208
    ForStmt                        shift and go to state 209
    ConstDecl                      shift and go to state 17
    TypeDecl                       shift and go to state 18
    VarDecl                        shift and go to state 19
    epsilon                        shift and go to state 211
    ExpressionStmt                 shift and go to state 212
    IncDecStmt                     shift and go to state 213
    Assignment                     shift and go to state 214
    ShortVarDecl                   shift and go to state 215
    Expression                     shift and go to state 221
    ExprSwitchStmt                 shift and go to state 222
    TypeSwitchStmt                 shift and go to state 223
    ExpressionList                 shift and go to state 226
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 250

    (233) ReturnStmt -> RETURN ExpressionListPureOpt .

    SEMICOLON       reduce using rule 233 (ReturnStmt -> RETURN ExpressionListPureOpt .)


state 251

    (234) ExpressionListPureOpt -> ExpressionList .

    SEMICOLON       reduce using rule 234 (ExpressionListPureOpt -> ExpressionList .)


state 252

    (235) ExpressionListPureOpt -> epsilon .

    SEMICOLON       reduce using rule 235 (ExpressionListPureOpt -> epsilon .)


state 253

    (236) BreakStmt -> BREAK LabelOpt .

    SEMICOLON       reduce using rule 236 (BreakStmt -> BREAK LabelOpt .)


state 254

    (238) LabelOpt -> Label .

    SEMICOLON       reduce using rule 238 (LabelOpt -> Label .)


state 255

    (239) LabelOpt -> epsilon .

    SEMICOLON       reduce using rule 239 (LabelOpt -> epsilon .)


state 256

    (177) Label -> IDENT .

    SEMICOLON       reduce using rule 177 (Label -> IDENT .)


state 257

    (237) ContinueStmt -> CONTINUE LabelOpt .

    SEMICOLON       reduce using rule 237 (ContinueStmt -> CONTINUE LabelOpt .)


state 258

    (240) GotoStmt -> GOTO Label .

    SEMICOLON       reduce using rule 240 (GotoStmt -> GOTO Label .)


state 259

    (194) IfStmt -> IF Expression . Block ElseOpt
    (133) Expression -> Expression . BinaryOp Expression
    (45) Block -> . LBRACE StatementList RBRACE
    (139) BinaryOp -> . LOR
    (140) BinaryOp -> . LAND
    (141) BinaryOp -> . RelOp
    (142) BinaryOp -> . AddMulOp
    (143) RelOp -> . EQL
    (144) RelOp -> . NEQ
    (145) RelOp -> . LSS
    (146) RelOp -> . GTR
    (147) RelOp -> . LEQ
    (148) RelOp -> . GEQ
    (149) AddMulOp -> . UnaryOp
    (150) AddMulOp -> . OR
    (151) AddMulOp -> . XOR
    (152) AddMulOp -> . QUO
    (153) AddMulOp -> . REM
    (154) AddMulOp -> . SHL
    (155) AddMulOp -> . SHR
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND

    LBRACE          shift and go to state 92
    LOR             shift and go to state 161
    LAND            shift and go to state 162
    EQL             shift and go to state 165
    NEQ             shift and go to state 166
    LSS             shift and go to state 167
    GTR             shift and go to state 168
    LEQ             shift and go to state 169
    GEQ             shift and go to state 170
    OR              shift and go to state 172
    XOR             shift and go to state 173
    QUO             shift and go to state 174
    REM             shift and go to state 175
    SHL             shift and go to state 176
    SHR             shift and go to state 177
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    Block                          shift and go to state 301
    BinaryOp                       shift and go to state 160
    RelOp                          shift and go to state 163
    AddMulOp                       shift and go to state 164
    UnaryOp                        shift and go to state 171

state 260

    (179) IncDecStmt -> Expression INC .

    SEMICOLON       reduce using rule 179 (IncDecStmt -> Expression INC .)
    LBRACE          reduce using rule 179 (IncDecStmt -> Expression INC .)


state 261

    (180) IncDecStmt -> Expression DEC .

    SEMICOLON       reduce using rule 180 (IncDecStmt -> Expression DEC .)
    LBRACE          reduce using rule 180 (IncDecStmt -> Expression DEC .)


state 262

    (220) ForStmt -> FOR ConditionBlockOpt . Block
    (45) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 92

    Block                          shift and go to state 302

state 263

    (221) ConditionBlockOpt -> epsilon .
    (171) SimpleStmt -> epsilon .
    (230) ExpressionIdentListOpt -> epsilon .

    LBRACE          reduce using rule 221 (ConditionBlockOpt -> epsilon .)
    SEMICOLON       reduce using rule 171 (SimpleStmt -> epsilon .)
    RANGE           reduce using rule 230 (ExpressionIdentListOpt -> epsilon .)


state 264

    (222) ConditionBlockOpt -> Condition .

    LBRACE          reduce using rule 222 (ConditionBlockOpt -> Condition .)


state 265

    (223) ConditionBlockOpt -> ForClause .

    LBRACE          reduce using rule 223 (ConditionBlockOpt -> ForClause .)


state 266

    (224) ConditionBlockOpt -> RangeClause .

    LBRACE          reduce using rule 224 (ConditionBlockOpt -> RangeClause .)


state 267

    (225) Condition -> Expression .
    (133) Expression -> Expression . BinaryOp Expression
    (178) ExpressionStmt -> Expression .
    (179) IncDecStmt -> Expression . INC
    (180) IncDecStmt -> Expression . DEC
    (64) ExpressionList -> Expression . ExpressionRep
    (139) BinaryOp -> . LOR
    (140) BinaryOp -> . LAND
    (141) BinaryOp -> . RelOp
    (142) BinaryOp -> . AddMulOp
    (65) ExpressionRep -> . ExpressionRep COMMA Expression
    (66) ExpressionRep -> . epsilon
    (143) RelOp -> . EQL
    (144) RelOp -> . NEQ
    (145) RelOp -> . LSS
    (146) RelOp -> . GTR
    (147) RelOp -> . LEQ
    (148) RelOp -> . GEQ
    (149) AddMulOp -> . UnaryOp
    (150) AddMulOp -> . OR
    (151) AddMulOp -> . XOR
    (152) AddMulOp -> . QUO
    (153) AddMulOp -> . REM
    (154) AddMulOp -> . SHL
    (155) AddMulOp -> . SHR
    (257) epsilon -> .
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND

    LBRACE          reduce using rule 225 (Condition -> Expression .)
    SEMICOLON       reduce using rule 178 (ExpressionStmt -> Expression .)
    INC             shift and go to state 260
    DEC             shift and go to state 261
    LOR             shift and go to state 161
    LAND            shift and go to state 162
    EQL             shift and go to state 165
    NEQ             shift and go to state 166
    LSS             shift and go to state 167
    GTR             shift and go to state 168
    LEQ             shift and go to state 169
    GEQ             shift and go to state 170
    OR              shift and go to state 172
    XOR             shift and go to state 173
    QUO             shift and go to state 174
    REM             shift and go to state 175
    SHL             shift and go to state 176
    SHR             shift and go to state 177
    COMMA           reduce using rule 257 (epsilon -> .)
    ASSIGN          reduce using rule 257 (epsilon -> .)
    ADD_ASSIGN      reduce using rule 257 (epsilon -> .)
    SUB_ASSIGN      reduce using rule 257 (epsilon -> .)
    MUL_ASSIGN      reduce using rule 257 (epsilon -> .)
    QUO_ASSIGN      reduce using rule 257 (epsilon -> .)
    REM_ASSIGN      reduce using rule 257 (epsilon -> .)
    AND_ASSIGN      reduce using rule 257 (epsilon -> .)
    OR_ASSIGN       reduce using rule 257 (epsilon -> .)
    XOR_ASSIGN      reduce using rule 257 (epsilon -> .)
    SHL_ASSIGN      reduce using rule 257 (epsilon -> .)
    SHR_ASSIGN      reduce using rule 257 (epsilon -> .)
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 160
    ExpressionRep                  shift and go to state 195
    RelOp                          shift and go to state 163
    AddMulOp                       shift and go to state 164
    epsilon                        shift and go to state 196
    UnaryOp                        shift and go to state 171

state 268

    (226) ForClause -> SimpleStmt . SEMICOLON ConditionOpt SEMICOLON SimpleStmt

    SEMICOLON       shift and go to state 303


state 269

    (229) RangeClause -> ExpressionIdentListOpt . RANGE Expression

    RANGE           shift and go to state 304


state 270

    (231) ExpressionIdentListOpt -> ExpressionIdentifier .

    RANGE           reduce using rule 231 (ExpressionIdentListOpt -> ExpressionIdentifier .)


state 271

    (181) Assignment -> ExpressionList . assign_op ExpressionList
    (232) ExpressionIdentifier -> ExpressionList . ASSIGN
    (182) assign_op -> . AssignOp
    (183) AssignOp -> . ADD_ASSIGN
    (184) AssignOp -> . SUB_ASSIGN
    (185) AssignOp -> . MUL_ASSIGN
    (186) AssignOp -> . QUO_ASSIGN
    (187) AssignOp -> . REM_ASSIGN
    (188) AssignOp -> . AND_ASSIGN
    (189) AssignOp -> . OR_ASSIGN
    (190) AssignOp -> . XOR_ASSIGN
    (191) AssignOp -> . SHL_ASSIGN
    (192) AssignOp -> . SHR_ASSIGN
    (193) AssignOp -> . ASSIGN

    ASSIGN          shift and go to state 305
    ADD_ASSIGN      shift and go to state 276
    SUB_ASSIGN      shift and go to state 277
    MUL_ASSIGN      shift and go to state 278
    QUO_ASSIGN      shift and go to state 279
    REM_ASSIGN      shift and go to state 280
    AND_ASSIGN      shift and go to state 281
    OR_ASSIGN       shift and go to state 282
    XOR_ASSIGN      shift and go to state 283
    SHL_ASSIGN      shift and go to state 284
    SHR_ASSIGN      shift and go to state 285

    assign_op                      shift and go to state 274
    AssignOp                       shift and go to state 275

state 272

    (83) ShortVarDecl -> IDENT . DEFINE Expression
    (96) OperandName -> IDENT .

    DEFINE          shift and go to state 273
    PERIOD          reduce using rule 96 (OperandName -> IDENT .)
    LBRACK          reduce using rule 96 (OperandName -> IDENT .)
    LPAREN          reduce using rule 96 (OperandName -> IDENT .)
    INC             reduce using rule 96 (OperandName -> IDENT .)
    DEC             reduce using rule 96 (OperandName -> IDENT .)
    LOR             reduce using rule 96 (OperandName -> IDENT .)
    LAND            reduce using rule 96 (OperandName -> IDENT .)
    EQL             reduce using rule 96 (OperandName -> IDENT .)
    NEQ             reduce using rule 96 (OperandName -> IDENT .)
    LSS             reduce using rule 96 (OperandName -> IDENT .)
    GTR             reduce using rule 96 (OperandName -> IDENT .)
    LEQ             reduce using rule 96 (OperandName -> IDENT .)
    GEQ             reduce using rule 96 (OperandName -> IDENT .)
    OR              reduce using rule 96 (OperandName -> IDENT .)
    XOR             reduce using rule 96 (OperandName -> IDENT .)
    QUO             reduce using rule 96 (OperandName -> IDENT .)
    REM             reduce using rule 96 (OperandName -> IDENT .)
    SHL             reduce using rule 96 (OperandName -> IDENT .)
    SHR             reduce using rule 96 (OperandName -> IDENT .)
    ADD             reduce using rule 96 (OperandName -> IDENT .)
    SUB             reduce using rule 96 (OperandName -> IDENT .)
    MUL             reduce using rule 96 (OperandName -> IDENT .)
    AND             reduce using rule 96 (OperandName -> IDENT .)
    COMMA           reduce using rule 96 (OperandName -> IDENT .)
    LBRACE          reduce using rule 96 (OperandName -> IDENT .)
    SEMICOLON       reduce using rule 96 (OperandName -> IDENT .)
    ASSIGN          reduce using rule 96 (OperandName -> IDENT .)
    ADD_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    SUB_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    MUL_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    QUO_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    REM_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    AND_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    OR_ASSIGN       reduce using rule 96 (OperandName -> IDENT .)
    XOR_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    SHL_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)
    SHR_ASSIGN      reduce using rule 96 (OperandName -> IDENT .)


state 273

    (83) ShortVarDecl -> IDENT DEFINE . Expression
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    Expression                     shift and go to state 306
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 274

    (181) Assignment -> ExpressionList assign_op . ExpressionList
    (64) ExpressionList -> . Expression ExpressionRep
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    ExpressionList                 shift and go to state 307
    Expression                     shift and go to state 145
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 275

    (182) assign_op -> AssignOp .

    NOT             reduce using rule 182 (assign_op -> AssignOp .)
    ADD             reduce using rule 182 (assign_op -> AssignOp .)
    SUB             reduce using rule 182 (assign_op -> AssignOp .)
    MUL             reduce using rule 182 (assign_op -> AssignOp .)
    AND             reduce using rule 182 (assign_op -> AssignOp .)
    LPAREN          reduce using rule 182 (assign_op -> AssignOp .)
    IDENT           reduce using rule 182 (assign_op -> AssignOp .)
    INT_LITERAL     reduce using rule 182 (assign_op -> AssignOp .)
    FLOAT_LITERAL   reduce using rule 182 (assign_op -> AssignOp .)
    STRING_LITERAL  reduce using rule 182 (assign_op -> AssignOp .)


state 276

    (183) AssignOp -> ADD_ASSIGN .

    NOT             reduce using rule 183 (AssignOp -> ADD_ASSIGN .)
    ADD             reduce using rule 183 (AssignOp -> ADD_ASSIGN .)
    SUB             reduce using rule 183 (AssignOp -> ADD_ASSIGN .)
    MUL             reduce using rule 183 (AssignOp -> ADD_ASSIGN .)
    AND             reduce using rule 183 (AssignOp -> ADD_ASSIGN .)
    LPAREN          reduce using rule 183 (AssignOp -> ADD_ASSIGN .)
    IDENT           reduce using rule 183 (AssignOp -> ADD_ASSIGN .)
    INT_LITERAL     reduce using rule 183 (AssignOp -> ADD_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 183 (AssignOp -> ADD_ASSIGN .)
    STRING_LITERAL  reduce using rule 183 (AssignOp -> ADD_ASSIGN .)


state 277

    (184) AssignOp -> SUB_ASSIGN .

    NOT             reduce using rule 184 (AssignOp -> SUB_ASSIGN .)
    ADD             reduce using rule 184 (AssignOp -> SUB_ASSIGN .)
    SUB             reduce using rule 184 (AssignOp -> SUB_ASSIGN .)
    MUL             reduce using rule 184 (AssignOp -> SUB_ASSIGN .)
    AND             reduce using rule 184 (AssignOp -> SUB_ASSIGN .)
    LPAREN          reduce using rule 184 (AssignOp -> SUB_ASSIGN .)
    IDENT           reduce using rule 184 (AssignOp -> SUB_ASSIGN .)
    INT_LITERAL     reduce using rule 184 (AssignOp -> SUB_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 184 (AssignOp -> SUB_ASSIGN .)
    STRING_LITERAL  reduce using rule 184 (AssignOp -> SUB_ASSIGN .)


state 278

    (185) AssignOp -> MUL_ASSIGN .

    NOT             reduce using rule 185 (AssignOp -> MUL_ASSIGN .)
    ADD             reduce using rule 185 (AssignOp -> MUL_ASSIGN .)
    SUB             reduce using rule 185 (AssignOp -> MUL_ASSIGN .)
    MUL             reduce using rule 185 (AssignOp -> MUL_ASSIGN .)
    AND             reduce using rule 185 (AssignOp -> MUL_ASSIGN .)
    LPAREN          reduce using rule 185 (AssignOp -> MUL_ASSIGN .)
    IDENT           reduce using rule 185 (AssignOp -> MUL_ASSIGN .)
    INT_LITERAL     reduce using rule 185 (AssignOp -> MUL_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 185 (AssignOp -> MUL_ASSIGN .)
    STRING_LITERAL  reduce using rule 185 (AssignOp -> MUL_ASSIGN .)


state 279

    (186) AssignOp -> QUO_ASSIGN .

    NOT             reduce using rule 186 (AssignOp -> QUO_ASSIGN .)
    ADD             reduce using rule 186 (AssignOp -> QUO_ASSIGN .)
    SUB             reduce using rule 186 (AssignOp -> QUO_ASSIGN .)
    MUL             reduce using rule 186 (AssignOp -> QUO_ASSIGN .)
    AND             reduce using rule 186 (AssignOp -> QUO_ASSIGN .)
    LPAREN          reduce using rule 186 (AssignOp -> QUO_ASSIGN .)
    IDENT           reduce using rule 186 (AssignOp -> QUO_ASSIGN .)
    INT_LITERAL     reduce using rule 186 (AssignOp -> QUO_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 186 (AssignOp -> QUO_ASSIGN .)
    STRING_LITERAL  reduce using rule 186 (AssignOp -> QUO_ASSIGN .)


state 280

    (187) AssignOp -> REM_ASSIGN .

    NOT             reduce using rule 187 (AssignOp -> REM_ASSIGN .)
    ADD             reduce using rule 187 (AssignOp -> REM_ASSIGN .)
    SUB             reduce using rule 187 (AssignOp -> REM_ASSIGN .)
    MUL             reduce using rule 187 (AssignOp -> REM_ASSIGN .)
    AND             reduce using rule 187 (AssignOp -> REM_ASSIGN .)
    LPAREN          reduce using rule 187 (AssignOp -> REM_ASSIGN .)
    IDENT           reduce using rule 187 (AssignOp -> REM_ASSIGN .)
    INT_LITERAL     reduce using rule 187 (AssignOp -> REM_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 187 (AssignOp -> REM_ASSIGN .)
    STRING_LITERAL  reduce using rule 187 (AssignOp -> REM_ASSIGN .)


state 281

    (188) AssignOp -> AND_ASSIGN .

    NOT             reduce using rule 188 (AssignOp -> AND_ASSIGN .)
    ADD             reduce using rule 188 (AssignOp -> AND_ASSIGN .)
    SUB             reduce using rule 188 (AssignOp -> AND_ASSIGN .)
    MUL             reduce using rule 188 (AssignOp -> AND_ASSIGN .)
    AND             reduce using rule 188 (AssignOp -> AND_ASSIGN .)
    LPAREN          reduce using rule 188 (AssignOp -> AND_ASSIGN .)
    IDENT           reduce using rule 188 (AssignOp -> AND_ASSIGN .)
    INT_LITERAL     reduce using rule 188 (AssignOp -> AND_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 188 (AssignOp -> AND_ASSIGN .)
    STRING_LITERAL  reduce using rule 188 (AssignOp -> AND_ASSIGN .)


state 282

    (189) AssignOp -> OR_ASSIGN .

    NOT             reduce using rule 189 (AssignOp -> OR_ASSIGN .)
    ADD             reduce using rule 189 (AssignOp -> OR_ASSIGN .)
    SUB             reduce using rule 189 (AssignOp -> OR_ASSIGN .)
    MUL             reduce using rule 189 (AssignOp -> OR_ASSIGN .)
    AND             reduce using rule 189 (AssignOp -> OR_ASSIGN .)
    LPAREN          reduce using rule 189 (AssignOp -> OR_ASSIGN .)
    IDENT           reduce using rule 189 (AssignOp -> OR_ASSIGN .)
    INT_LITERAL     reduce using rule 189 (AssignOp -> OR_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 189 (AssignOp -> OR_ASSIGN .)
    STRING_LITERAL  reduce using rule 189 (AssignOp -> OR_ASSIGN .)


state 283

    (190) AssignOp -> XOR_ASSIGN .

    NOT             reduce using rule 190 (AssignOp -> XOR_ASSIGN .)
    ADD             reduce using rule 190 (AssignOp -> XOR_ASSIGN .)
    SUB             reduce using rule 190 (AssignOp -> XOR_ASSIGN .)
    MUL             reduce using rule 190 (AssignOp -> XOR_ASSIGN .)
    AND             reduce using rule 190 (AssignOp -> XOR_ASSIGN .)
    LPAREN          reduce using rule 190 (AssignOp -> XOR_ASSIGN .)
    IDENT           reduce using rule 190 (AssignOp -> XOR_ASSIGN .)
    INT_LITERAL     reduce using rule 190 (AssignOp -> XOR_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 190 (AssignOp -> XOR_ASSIGN .)
    STRING_LITERAL  reduce using rule 190 (AssignOp -> XOR_ASSIGN .)


state 284

    (191) AssignOp -> SHL_ASSIGN .

    NOT             reduce using rule 191 (AssignOp -> SHL_ASSIGN .)
    ADD             reduce using rule 191 (AssignOp -> SHL_ASSIGN .)
    SUB             reduce using rule 191 (AssignOp -> SHL_ASSIGN .)
    MUL             reduce using rule 191 (AssignOp -> SHL_ASSIGN .)
    AND             reduce using rule 191 (AssignOp -> SHL_ASSIGN .)
    LPAREN          reduce using rule 191 (AssignOp -> SHL_ASSIGN .)
    IDENT           reduce using rule 191 (AssignOp -> SHL_ASSIGN .)
    INT_LITERAL     reduce using rule 191 (AssignOp -> SHL_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 191 (AssignOp -> SHL_ASSIGN .)
    STRING_LITERAL  reduce using rule 191 (AssignOp -> SHL_ASSIGN .)


state 285

    (192) AssignOp -> SHR_ASSIGN .

    NOT             reduce using rule 192 (AssignOp -> SHR_ASSIGN .)
    ADD             reduce using rule 192 (AssignOp -> SHR_ASSIGN .)
    SUB             reduce using rule 192 (AssignOp -> SHR_ASSIGN .)
    MUL             reduce using rule 192 (AssignOp -> SHR_ASSIGN .)
    AND             reduce using rule 192 (AssignOp -> SHR_ASSIGN .)
    LPAREN          reduce using rule 192 (AssignOp -> SHR_ASSIGN .)
    IDENT           reduce using rule 192 (AssignOp -> SHR_ASSIGN .)
    INT_LITERAL     reduce using rule 192 (AssignOp -> SHR_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 192 (AssignOp -> SHR_ASSIGN .)
    STRING_LITERAL  reduce using rule 192 (AssignOp -> SHR_ASSIGN .)


state 286

    (193) AssignOp -> ASSIGN .

    NOT             reduce using rule 193 (AssignOp -> ASSIGN .)
    ADD             reduce using rule 193 (AssignOp -> ASSIGN .)
    SUB             reduce using rule 193 (AssignOp -> ASSIGN .)
    MUL             reduce using rule 193 (AssignOp -> ASSIGN .)
    AND             reduce using rule 193 (AssignOp -> ASSIGN .)
    LPAREN          reduce using rule 193 (AssignOp -> ASSIGN .)
    IDENT           reduce using rule 193 (AssignOp -> ASSIGN .)
    INT_LITERAL     reduce using rule 193 (AssignOp -> ASSIGN .)
    FLOAT_LITERAL   reduce using rule 193 (AssignOp -> ASSIGN .)
    STRING_LITERAL  reduce using rule 193 (AssignOp -> ASSIGN .)


state 287

    (202) ExprSwitchStmt -> SWITCH ExpressionOpt . LBRACE ExprCaseClauseRep RBRACE

    LBRACE          shift and go to state 308


state 288

    (208) TypeSwitchStmt -> SWITCH SimpleStmtOpt . TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
    (209) TypeSwitchGuard -> . IdentifierOpt PrimaryExpr PERIOD LPAREN TYPE RPAREN
    (210) IdentifierOpt -> . IDENT DEFINE
    (211) IdentifierOpt -> . epsilon
    (257) epsilon -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 311
    LPAREN          reduce using rule 257 (epsilon -> .)
    INT_LITERAL     reduce using rule 257 (epsilon -> .)
    FLOAT_LITERAL   reduce using rule 257 (epsilon -> .)
    STRING_LITERAL  reduce using rule 257 (epsilon -> .)

  ! IDENT           [ reduce using rule 257 (epsilon -> .) ]

    TypeSwitchGuard                shift and go to state 309
    IdentifierOpt                  shift and go to state 310
    epsilon                        shift and go to state 312

state 289

    (134) ExpressionOpt -> Expression .
    (133) Expression -> Expression . BinaryOp Expression
    (178) ExpressionStmt -> Expression .
    (179) IncDecStmt -> Expression . INC
    (180) IncDecStmt -> Expression . DEC
    (64) ExpressionList -> Expression . ExpressionRep
    (139) BinaryOp -> . LOR
    (140) BinaryOp -> . LAND
    (141) BinaryOp -> . RelOp
    (142) BinaryOp -> . AddMulOp
    (65) ExpressionRep -> . ExpressionRep COMMA Expression
    (66) ExpressionRep -> . epsilon
    (143) RelOp -> . EQL
    (144) RelOp -> . NEQ
    (145) RelOp -> . LSS
    (146) RelOp -> . GTR
    (147) RelOp -> . LEQ
    (148) RelOp -> . GEQ
    (149) AddMulOp -> . UnaryOp
    (150) AddMulOp -> . OR
    (151) AddMulOp -> . XOR
    (152) AddMulOp -> . QUO
    (153) AddMulOp -> . REM
    (154) AddMulOp -> . SHL
    (155) AddMulOp -> . SHR
    (257) epsilon -> .
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND

    LBRACE          reduce using rule 134 (ExpressionOpt -> Expression .)
    SEMICOLON       reduce using rule 178 (ExpressionStmt -> Expression .)
    INC             shift and go to state 260
    DEC             shift and go to state 261
    LOR             shift and go to state 161
    LAND            shift and go to state 162
    EQL             shift and go to state 165
    NEQ             shift and go to state 166
    LSS             shift and go to state 167
    GTR             shift and go to state 168
    LEQ             shift and go to state 169
    GEQ             shift and go to state 170
    OR              shift and go to state 172
    XOR             shift and go to state 173
    QUO             shift and go to state 174
    REM             shift and go to state 175
    SHL             shift and go to state 176
    SHR             shift and go to state 177
    COMMA           reduce using rule 257 (epsilon -> .)
    ADD_ASSIGN      reduce using rule 257 (epsilon -> .)
    SUB_ASSIGN      reduce using rule 257 (epsilon -> .)
    MUL_ASSIGN      reduce using rule 257 (epsilon -> .)
    QUO_ASSIGN      reduce using rule 257 (epsilon -> .)
    REM_ASSIGN      reduce using rule 257 (epsilon -> .)
    AND_ASSIGN      reduce using rule 257 (epsilon -> .)
    OR_ASSIGN       reduce using rule 257 (epsilon -> .)
    XOR_ASSIGN      reduce using rule 257 (epsilon -> .)
    SHL_ASSIGN      reduce using rule 257 (epsilon -> .)
    SHR_ASSIGN      reduce using rule 257 (epsilon -> .)
    ASSIGN          reduce using rule 257 (epsilon -> .)
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 160
    ExpressionRep                  shift and go to state 195
    RelOp                          shift and go to state 163
    AddMulOp                       shift and go to state 164
    epsilon                        shift and go to state 196
    UnaryOp                        shift and go to state 171

state 290

    (135) ExpressionOpt -> epsilon .
    (196) SimpleStmtOpt -> epsilon .
    (171) SimpleStmt -> epsilon .

    LBRACE          reduce using rule 135 (ExpressionOpt -> epsilon .)
    IDENT           reduce using rule 196 (SimpleStmtOpt -> epsilon .)
    LPAREN          reduce using rule 196 (SimpleStmtOpt -> epsilon .)
    INT_LITERAL     reduce using rule 196 (SimpleStmtOpt -> epsilon .)
    FLOAT_LITERAL   reduce using rule 196 (SimpleStmtOpt -> epsilon .)
    STRING_LITERAL  reduce using rule 196 (SimpleStmtOpt -> epsilon .)
    SEMICOLON       reduce using rule 171 (SimpleStmt -> epsilon .)


state 291

    (195) SimpleStmtOpt -> SimpleStmt . SEMICOLON

    SEMICOLON       shift and go to state 313


state 292

    (43) ParameterDecl -> IdentifierList Type .

    COMMA           reduce using rule 43 (ParameterDecl -> IdentifierList Type .)
    RPAREN          reduce using rule 43 (ParameterDecl -> IdentifierList Type .)


state 293

    (126) TypeAssertion -> PERIOD LPAREN Type . RPAREN

    RPAREN          shift and go to state 314


state 294

    (123) Index -> LBRACK Expression RBRACK .

    PERIOD          reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    LBRACK          reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    LPAREN          reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    LOR             reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    LAND            reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    EQL             reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    NEQ             reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    LSS             reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    GTR             reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    LEQ             reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    GEQ             reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    OR              reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    XOR             reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    QUO             reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    REM             reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    SHL             reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    SHR             reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    ADD             reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    SUB             reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    MUL             reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    AND             reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    COMMA           reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    SEMICOLON       reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    INC             reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    DEC             reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    QUO_ASSIGN      reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    REM_ASSIGN      reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    AND_ASSIGN      reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    OR_ASSIGN       reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    ASSIGN          reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    COLON           reduce using rule 123 (Index -> LBRACK Expression RBRACK .)
    LBRACE          reduce using rule 123 (Index -> LBRACK Expression RBRACK .)


state 295

    (124) Slice -> LBRACK ExpressionOpt COLON . ExpressionOpt RBRACK
    (125) Slice -> LBRACK ExpressionOpt COLON . Expression COLON Expression RBRACK
    (134) ExpressionOpt -> . Expression
    (135) ExpressionOpt -> . epsilon
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (257) epsilon -> .
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    RBRACK          reduce using rule 257 (epsilon -> .)
    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    ExpressionOpt                  shift and go to state 315
    Expression                     shift and go to state 316
    epsilon                        shift and go to state 239
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 296

    (127) Arguments -> LPAREN ExpressionListTypeOpt RPAREN .

    PERIOD          reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LBRACK          reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LPAREN          reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LOR             reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LAND            reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    EQL             reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    NEQ             reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LSS             reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GTR             reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LEQ             reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GEQ             reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OR              reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    XOR             reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    QUO             reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    REM             reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SHL             reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SHR             reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    ADD             reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SUB             reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MUL             reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AND             reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RBRACK          reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COMMA           reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SEMICOLON       reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RPAREN          reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    INC             reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DEC             reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    ADD_ASSIGN      reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SUB_ASSIGN      reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MUL_ASSIGN      reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    QUO_ASSIGN      reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    REM_ASSIGN      reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AND_ASSIGN      reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OR_ASSIGN       reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    XOR_ASSIGN      reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SHL_ASSIGN      reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SHR_ASSIGN      reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    ASSIGN          reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COLON           reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LBRACE          reduce using rule 127 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)


state 297

    (22) FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON .

    RBRACE          reduce using rule 22 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON .)
    IDENT           reduce using rule 22 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON .)


state 298

    (24) FieldDecl -> IdentifierList Type . TagOpt
    (25) TagOpt -> . Tag
    (26) TagOpt -> . epsilon
    (27) Tag -> . STRING_LITERAL
    (257) epsilon -> .

    STRING_LITERAL  shift and go to state 320
    SEMICOLON       reduce using rule 257 (epsilon -> .)

    TagOpt                         shift and go to state 317
    Tag                            shift and go to state 318
    epsilon                        shift and go to state 319

state 299

    (65) ExpressionRep -> ExpressionRep COMMA Expression .
    (133) Expression -> Expression . BinaryOp Expression
    (139) BinaryOp -> . LOR
    (140) BinaryOp -> . LAND
    (141) BinaryOp -> . RelOp
    (142) BinaryOp -> . AddMulOp
    (143) RelOp -> . EQL
    (144) RelOp -> . NEQ
    (145) RelOp -> . LSS
    (146) RelOp -> . GTR
    (147) RelOp -> . LEQ
    (148) RelOp -> . GEQ
    (149) AddMulOp -> . UnaryOp
    (150) AddMulOp -> . OR
    (151) AddMulOp -> . XOR
    (152) AddMulOp -> . QUO
    (153) AddMulOp -> . REM
    (154) AddMulOp -> . SHL
    (155) AddMulOp -> . SHR
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND

    COMMA           reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SEMICOLON       reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RPAREN          reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LBRACE          reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    COLON           reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    ADD_ASSIGN      reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SUB_ASSIGN      reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MUL_ASSIGN      reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    QUO_ASSIGN      reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    REM_ASSIGN      reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    AND_ASSIGN      reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    OR_ASSIGN       reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    XOR_ASSIGN      reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SHL_ASSIGN      reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SHR_ASSIGN      reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    ASSIGN          reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LOR             shift and go to state 161
    LAND            shift and go to state 162
    EQL             shift and go to state 165
    NEQ             shift and go to state 166
    LSS             shift and go to state 167
    GTR             shift and go to state 168
    LEQ             shift and go to state 169
    GEQ             shift and go to state 170
    OR              shift and go to state 172
    XOR             shift and go to state 173
    QUO             shift and go to state 174
    REM             shift and go to state 175
    SHL             shift and go to state 176
    SHR             shift and go to state 177
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 160
    RelOp                          shift and go to state 163
    AddMulOp                       shift and go to state 164
    UnaryOp                        shift and go to state 171

state 300

    (176) LabeledStmt -> Label COLON Statement .

    SEMICOLON       reduce using rule 176 (LabeledStmt -> Label COLON Statement .)


state 301

    (194) IfStmt -> IF Expression Block . ElseOpt
    (197) ElseOpt -> . ELSE IfStmt
    (198) ElseOpt -> . ELSE Block
    (199) ElseOpt -> . epsilon
    (257) epsilon -> .

    ELSE            shift and go to state 322
    SEMICOLON       reduce using rule 257 (epsilon -> .)

    ElseOpt                        shift and go to state 321
    epsilon                        shift and go to state 323

state 302

    (220) ForStmt -> FOR ConditionBlockOpt Block .

    SEMICOLON       reduce using rule 220 (ForStmt -> FOR ConditionBlockOpt Block .)


state 303

    (226) ForClause -> SimpleStmt SEMICOLON . ConditionOpt SEMICOLON SimpleStmt
    (227) ConditionOpt -> . epsilon
    (228) ConditionOpt -> . Condition
    (257) epsilon -> .
    (225) Condition -> . Expression
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    SEMICOLON       reduce using rule 257 (epsilon -> .)
    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    ConditionOpt                   shift and go to state 324
    epsilon                        shift and go to state 325
    Condition                      shift and go to state 326
    Expression                     shift and go to state 327
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 304

    (229) RangeClause -> ExpressionIdentListOpt RANGE . Expression
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    Expression                     shift and go to state 328
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 305

    (232) ExpressionIdentifier -> ExpressionList ASSIGN .
    (193) AssignOp -> ASSIGN .

    RANGE           reduce using rule 232 (ExpressionIdentifier -> ExpressionList ASSIGN .)
    NOT             reduce using rule 193 (AssignOp -> ASSIGN .)
    ADD             reduce using rule 193 (AssignOp -> ASSIGN .)
    SUB             reduce using rule 193 (AssignOp -> ASSIGN .)
    MUL             reduce using rule 193 (AssignOp -> ASSIGN .)
    AND             reduce using rule 193 (AssignOp -> ASSIGN .)
    LPAREN          reduce using rule 193 (AssignOp -> ASSIGN .)
    IDENT           reduce using rule 193 (AssignOp -> ASSIGN .)
    INT_LITERAL     reduce using rule 193 (AssignOp -> ASSIGN .)
    FLOAT_LITERAL   reduce using rule 193 (AssignOp -> ASSIGN .)
    STRING_LITERAL  reduce using rule 193 (AssignOp -> ASSIGN .)


state 306

    (83) ShortVarDecl -> IDENT DEFINE Expression .
    (133) Expression -> Expression . BinaryOp Expression
    (139) BinaryOp -> . LOR
    (140) BinaryOp -> . LAND
    (141) BinaryOp -> . RelOp
    (142) BinaryOp -> . AddMulOp
    (143) RelOp -> . EQL
    (144) RelOp -> . NEQ
    (145) RelOp -> . LSS
    (146) RelOp -> . GTR
    (147) RelOp -> . LEQ
    (148) RelOp -> . GEQ
    (149) AddMulOp -> . UnaryOp
    (150) AddMulOp -> . OR
    (151) AddMulOp -> . XOR
    (152) AddMulOp -> . QUO
    (153) AddMulOp -> . REM
    (154) AddMulOp -> . SHL
    (155) AddMulOp -> . SHR
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND

    SEMICOLON       reduce using rule 83 (ShortVarDecl -> IDENT DEFINE Expression .)
    LBRACE          reduce using rule 83 (ShortVarDecl -> IDENT DEFINE Expression .)
    LOR             shift and go to state 161
    LAND            shift and go to state 162
    EQL             shift and go to state 165
    NEQ             shift and go to state 166
    LSS             shift and go to state 167
    GTR             shift and go to state 168
    LEQ             shift and go to state 169
    GEQ             shift and go to state 170
    OR              shift and go to state 172
    XOR             shift and go to state 173
    QUO             shift and go to state 174
    REM             shift and go to state 175
    SHL             shift and go to state 176
    SHR             shift and go to state 177
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 160
    RelOp                          shift and go to state 163
    AddMulOp                       shift and go to state 164
    UnaryOp                        shift and go to state 171

state 307

    (181) Assignment -> ExpressionList assign_op ExpressionList .

    SEMICOLON       reduce using rule 181 (Assignment -> ExpressionList assign_op ExpressionList .)
    LBRACE          reduce using rule 181 (Assignment -> ExpressionList assign_op ExpressionList .)


state 308

    (202) ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE . ExprCaseClauseRep RBRACE
    (203) ExprCaseClauseRep -> . ExprCaseClauseRep ExprCaseClause
    (204) ExprCaseClauseRep -> . epsilon
    (257) epsilon -> .

    RBRACE          reduce using rule 257 (epsilon -> .)
    CASE            reduce using rule 257 (epsilon -> .)
    DEFAULT         reduce using rule 257 (epsilon -> .)

    ExprCaseClauseRep              shift and go to state 329
    epsilon                        shift and go to state 330

state 309

    (208) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard . LBRACE TypeCaseClauseOpt RBRACE

    LBRACE          shift and go to state 331


state 310

    (209) TypeSwitchGuard -> IdentifierOpt . PrimaryExpr PERIOD LPAREN TYPE RPAREN
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    PrimaryExpr                    shift and go to state 332
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 311

    (210) IdentifierOpt -> IDENT . DEFINE

    DEFINE          shift and go to state 333


state 312

    (211) IdentifierOpt -> epsilon .

    LPAREN          reduce using rule 211 (IdentifierOpt -> epsilon .)
    IDENT           reduce using rule 211 (IdentifierOpt -> epsilon .)
    INT_LITERAL     reduce using rule 211 (IdentifierOpt -> epsilon .)
    FLOAT_LITERAL   reduce using rule 211 (IdentifierOpt -> epsilon .)
    STRING_LITERAL  reduce using rule 211 (IdentifierOpt -> epsilon .)


state 313

    (195) SimpleStmtOpt -> SimpleStmt SEMICOLON .

    IDENT           reduce using rule 195 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    LPAREN          reduce using rule 195 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    INT_LITERAL     reduce using rule 195 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 195 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    STRING_LITERAL  reduce using rule 195 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)


state 314

    (126) TypeAssertion -> PERIOD LPAREN Type RPAREN .

    PERIOD          reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    LBRACK          reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    LPAREN          reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    LOR             reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    LAND            reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    EQL             reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    NEQ             reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    LSS             reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    GTR             reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    LEQ             reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    GEQ             reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    OR              reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    XOR             reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    QUO             reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    REM             reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    SHL             reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    SHR             reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    ADD             reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    SUB             reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    MUL             reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    AND             reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    RBRACK          reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    COMMA           reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    RPAREN          reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    INC             reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    DEC             reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    ADD_ASSIGN      reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    SUB_ASSIGN      reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    MUL_ASSIGN      reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    QUO_ASSIGN      reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    REM_ASSIGN      reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    AND_ASSIGN      reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    OR_ASSIGN       reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    XOR_ASSIGN      reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    SHL_ASSIGN      reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    SHR_ASSIGN      reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    ASSIGN          reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    COLON           reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    LBRACE          reduce using rule 126 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)


state 315

    (124) Slice -> LBRACK ExpressionOpt COLON ExpressionOpt . RBRACK

    RBRACK          shift and go to state 334


state 316

    (125) Slice -> LBRACK ExpressionOpt COLON Expression . COLON Expression RBRACK
    (134) ExpressionOpt -> Expression .
    (133) Expression -> Expression . BinaryOp Expression
    (139) BinaryOp -> . LOR
    (140) BinaryOp -> . LAND
    (141) BinaryOp -> . RelOp
    (142) BinaryOp -> . AddMulOp
    (143) RelOp -> . EQL
    (144) RelOp -> . NEQ
    (145) RelOp -> . LSS
    (146) RelOp -> . GTR
    (147) RelOp -> . LEQ
    (148) RelOp -> . GEQ
    (149) AddMulOp -> . UnaryOp
    (150) AddMulOp -> . OR
    (151) AddMulOp -> . XOR
    (152) AddMulOp -> . QUO
    (153) AddMulOp -> . REM
    (154) AddMulOp -> . SHL
    (155) AddMulOp -> . SHR
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND

    COLON           shift and go to state 335
    RBRACK          reduce using rule 134 (ExpressionOpt -> Expression .)
    LOR             shift and go to state 161
    LAND            shift and go to state 162
    EQL             shift and go to state 165
    NEQ             shift and go to state 166
    LSS             shift and go to state 167
    GTR             shift and go to state 168
    LEQ             shift and go to state 169
    GEQ             shift and go to state 170
    OR              shift and go to state 172
    XOR             shift and go to state 173
    QUO             shift and go to state 174
    REM             shift and go to state 175
    SHL             shift and go to state 176
    SHR             shift and go to state 177
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 160
    RelOp                          shift and go to state 163
    AddMulOp                       shift and go to state 164
    UnaryOp                        shift and go to state 171

state 317

    (24) FieldDecl -> IdentifierList Type TagOpt .

    SEMICOLON       reduce using rule 24 (FieldDecl -> IdentifierList Type TagOpt .)


state 318

    (25) TagOpt -> Tag .

    SEMICOLON       reduce using rule 25 (TagOpt -> Tag .)


state 319

    (26) TagOpt -> epsilon .

    SEMICOLON       reduce using rule 26 (TagOpt -> epsilon .)


state 320

    (27) Tag -> STRING_LITERAL .

    SEMICOLON       reduce using rule 27 (Tag -> STRING_LITERAL .)


state 321

    (194) IfStmt -> IF Expression Block ElseOpt .

    SEMICOLON       reduce using rule 194 (IfStmt -> IF Expression Block ElseOpt .)


state 322

    (197) ElseOpt -> ELSE . IfStmt
    (198) ElseOpt -> ELSE . Block
    (194) IfStmt -> . IF Expression Block ElseOpt
    (45) Block -> . LBRACE StatementList RBRACE

    IF              shift and go to state 220
    LBRACE          shift and go to state 92

    IfStmt                         shift and go to state 336
    Block                          shift and go to state 337

state 323

    (199) ElseOpt -> epsilon .

    SEMICOLON       reduce using rule 199 (ElseOpt -> epsilon .)


state 324

    (226) ForClause -> SimpleStmt SEMICOLON ConditionOpt . SEMICOLON SimpleStmt

    SEMICOLON       shift and go to state 338


state 325

    (227) ConditionOpt -> epsilon .

    SEMICOLON       reduce using rule 227 (ConditionOpt -> epsilon .)


state 326

    (228) ConditionOpt -> Condition .

    SEMICOLON       reduce using rule 228 (ConditionOpt -> Condition .)


state 327

    (225) Condition -> Expression .
    (133) Expression -> Expression . BinaryOp Expression
    (139) BinaryOp -> . LOR
    (140) BinaryOp -> . LAND
    (141) BinaryOp -> . RelOp
    (142) BinaryOp -> . AddMulOp
    (143) RelOp -> . EQL
    (144) RelOp -> . NEQ
    (145) RelOp -> . LSS
    (146) RelOp -> . GTR
    (147) RelOp -> . LEQ
    (148) RelOp -> . GEQ
    (149) AddMulOp -> . UnaryOp
    (150) AddMulOp -> . OR
    (151) AddMulOp -> . XOR
    (152) AddMulOp -> . QUO
    (153) AddMulOp -> . REM
    (154) AddMulOp -> . SHL
    (155) AddMulOp -> . SHR
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND

    SEMICOLON       reduce using rule 225 (Condition -> Expression .)
    LOR             shift and go to state 161
    LAND            shift and go to state 162
    EQL             shift and go to state 165
    NEQ             shift and go to state 166
    LSS             shift and go to state 167
    GTR             shift and go to state 168
    LEQ             shift and go to state 169
    GEQ             shift and go to state 170
    OR              shift and go to state 172
    XOR             shift and go to state 173
    QUO             shift and go to state 174
    REM             shift and go to state 175
    SHL             shift and go to state 176
    SHR             shift and go to state 177
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 160
    RelOp                          shift and go to state 163
    AddMulOp                       shift and go to state 164
    UnaryOp                        shift and go to state 171

state 328

    (229) RangeClause -> ExpressionIdentListOpt RANGE Expression .
    (133) Expression -> Expression . BinaryOp Expression
    (139) BinaryOp -> . LOR
    (140) BinaryOp -> . LAND
    (141) BinaryOp -> . RelOp
    (142) BinaryOp -> . AddMulOp
    (143) RelOp -> . EQL
    (144) RelOp -> . NEQ
    (145) RelOp -> . LSS
    (146) RelOp -> . GTR
    (147) RelOp -> . LEQ
    (148) RelOp -> . GEQ
    (149) AddMulOp -> . UnaryOp
    (150) AddMulOp -> . OR
    (151) AddMulOp -> . XOR
    (152) AddMulOp -> . QUO
    (153) AddMulOp -> . REM
    (154) AddMulOp -> . SHL
    (155) AddMulOp -> . SHR
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND

    LBRACE          reduce using rule 229 (RangeClause -> ExpressionIdentListOpt RANGE Expression .)
    LOR             shift and go to state 161
    LAND            shift and go to state 162
    EQL             shift and go to state 165
    NEQ             shift and go to state 166
    LSS             shift and go to state 167
    GTR             shift and go to state 168
    LEQ             shift and go to state 169
    GEQ             shift and go to state 170
    OR              shift and go to state 172
    XOR             shift and go to state 173
    QUO             shift and go to state 174
    REM             shift and go to state 175
    SHL             shift and go to state 176
    SHR             shift and go to state 177
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 160
    RelOp                          shift and go to state 163
    AddMulOp                       shift and go to state 164
    UnaryOp                        shift and go to state 171

state 329

    (202) ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep . RBRACE
    (203) ExprCaseClauseRep -> ExprCaseClauseRep . ExprCaseClause
    (205) ExprCaseClause -> . ExprSwitchCase COLON StatementList
    (206) ExprSwitchCase -> . CASE ExpressionList
    (207) ExprSwitchCase -> . DEFAULT

    RBRACE          shift and go to state 339
    CASE            shift and go to state 342
    DEFAULT         shift and go to state 343

    ExprCaseClause                 shift and go to state 340
    ExprSwitchCase                 shift and go to state 341

state 330

    (204) ExprCaseClauseRep -> epsilon .

    RBRACE          reduce using rule 204 (ExprCaseClauseRep -> epsilon .)
    CASE            reduce using rule 204 (ExprCaseClauseRep -> epsilon .)
    DEFAULT         reduce using rule 204 (ExprCaseClauseRep -> epsilon .)


state 331

    (208) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE . TypeCaseClauseOpt RBRACE
    (212) TypeCaseClauseOpt -> . TypeCaseClauseOpt TypeCaseClause
    (213) TypeCaseClauseOpt -> . epsilon
    (257) epsilon -> .

    RBRACE          reduce using rule 257 (epsilon -> .)
    CASE            reduce using rule 257 (epsilon -> .)
    DEFAULT         reduce using rule 257 (epsilon -> .)

    TypeCaseClauseOpt              shift and go to state 344
    epsilon                        shift and go to state 345

state 332

    (209) TypeSwitchGuard -> IdentifierOpt PrimaryExpr . PERIOD LPAREN TYPE RPAREN
    (117) PrimaryExpr -> PrimaryExpr . Selector
    (118) PrimaryExpr -> PrimaryExpr . Index
    (119) PrimaryExpr -> PrimaryExpr . Slice
    (120) PrimaryExpr -> PrimaryExpr . TypeAssertion
    (121) PrimaryExpr -> PrimaryExpr . Arguments
    (122) Selector -> . PERIOD IDENT
    (123) Index -> . LBRACK Expression RBRACK
    (124) Slice -> . LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
    (125) Slice -> . LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK
    (126) TypeAssertion -> . PERIOD LPAREN Type RPAREN
    (127) Arguments -> . LPAREN ExpressionListTypeOpt RPAREN

    PERIOD          shift and go to state 346
    LBRACK          shift and go to state 184
    LPAREN          shift and go to state 185

    Selector                       shift and go to state 178
    Index                          shift and go to state 179
    Slice                          shift and go to state 180
    TypeAssertion                  shift and go to state 181
    Arguments                      shift and go to state 182

state 333

    (210) IdentifierOpt -> IDENT DEFINE .

    LPAREN          reduce using rule 210 (IdentifierOpt -> IDENT DEFINE .)
    IDENT           reduce using rule 210 (IdentifierOpt -> IDENT DEFINE .)
    INT_LITERAL     reduce using rule 210 (IdentifierOpt -> IDENT DEFINE .)
    FLOAT_LITERAL   reduce using rule 210 (IdentifierOpt -> IDENT DEFINE .)
    STRING_LITERAL  reduce using rule 210 (IdentifierOpt -> IDENT DEFINE .)


state 334

    (124) Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .

    PERIOD          reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LBRACK          reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LPAREN          reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LOR             reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LAND            reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    EQL             reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    NEQ             reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LSS             reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GTR             reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LEQ             reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GEQ             reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OR              reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    XOR             reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    QUO             reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    REM             reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    SHL             reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    SHR             reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    ADD             reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    SUB             reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MUL             reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AND             reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    RBRACK          reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    COMMA           reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    SEMICOLON       reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    RPAREN          reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    INC             reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    DEC             reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    ADD_ASSIGN      reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    SUB_ASSIGN      reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MUL_ASSIGN      reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    QUO_ASSIGN      reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    REM_ASSIGN      reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AND_ASSIGN      reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OR_ASSIGN       reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    XOR_ASSIGN      reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    SHL_ASSIGN      reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    SHR_ASSIGN      reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    ASSIGN          reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    COLON           reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LBRACE          reduce using rule 124 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)


state 335

    (125) Slice -> LBRACK ExpressionOpt COLON Expression COLON . Expression RBRACK
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    Expression                     shift and go to state 347
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 336

    (197) ElseOpt -> ELSE IfStmt .

    SEMICOLON       reduce using rule 197 (ElseOpt -> ELSE IfStmt .)


state 337

    (198) ElseOpt -> ELSE Block .

    SEMICOLON       reduce using rule 198 (ElseOpt -> ELSE Block .)


state 338

    (226) ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON . SimpleStmt
    (171) SimpleStmt -> . epsilon
    (172) SimpleStmt -> . ExpressionStmt
    (173) SimpleStmt -> . IncDecStmt
    (174) SimpleStmt -> . Assignment
    (175) SimpleStmt -> . ShortVarDecl
    (257) epsilon -> .
    (178) ExpressionStmt -> . Expression
    (179) IncDecStmt -> . Expression INC
    (180) IncDecStmt -> . Expression DEC
    (181) Assignment -> . ExpressionList assign_op ExpressionList
    (83) ShortVarDecl -> . IDENT DEFINE Expression
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (64) ExpressionList -> . Expression ExpressionRep
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    LBRACE          reduce using rule 257 (epsilon -> .)
    IDENT           shift and go to state 272
    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    SimpleStmt                     shift and go to state 348
    epsilon                        shift and go to state 211
    ExpressionStmt                 shift and go to state 212
    IncDecStmt                     shift and go to state 213
    Assignment                     shift and go to state 214
    ShortVarDecl                   shift and go to state 215
    Expression                     shift and go to state 221
    ExpressionList                 shift and go to state 226
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 339

    (202) ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE .

    SEMICOLON       reduce using rule 202 (ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE .)


state 340

    (203) ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .

    RBRACE          reduce using rule 203 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)
    CASE            reduce using rule 203 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)
    DEFAULT         reduce using rule 203 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)


state 341

    (205) ExprCaseClause -> ExprSwitchCase . COLON StatementList

    COLON           shift and go to state 349


state 342

    (206) ExprSwitchCase -> CASE . ExpressionList
    (64) ExpressionList -> . Expression ExpressionRep
    (132) Expression -> . UnaryExpr
    (133) Expression -> . Expression BinaryOp Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (116) PrimaryExpr -> . Operand
    (117) PrimaryExpr -> . PrimaryExpr Selector
    (118) PrimaryExpr -> . PrimaryExpr Index
    (119) PrimaryExpr -> . PrimaryExpr Slice
    (120) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (121) PrimaryExpr -> . PrimaryExpr Arguments
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (96) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131

    ExpressionList                 shift and go to state 350
    Expression                     shift and go to state 145
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 343

    (207) ExprSwitchCase -> DEFAULT .

    COLON           reduce using rule 207 (ExprSwitchCase -> DEFAULT .)


state 344

    (208) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt . RBRACE
    (212) TypeCaseClauseOpt -> TypeCaseClauseOpt . TypeCaseClause
    (214) TypeCaseClause -> . TypeSwitchCase COLON StatementList
    (215) TypeSwitchCase -> . CASE TypeList
    (216) TypeSwitchCase -> . DEFAULT

    RBRACE          shift and go to state 351
    CASE            shift and go to state 354
    DEFAULT         shift and go to state 355

    TypeCaseClause                 shift and go to state 352
    TypeSwitchCase                 shift and go to state 353

state 345

    (213) TypeCaseClauseOpt -> epsilon .

    RBRACE          reduce using rule 213 (TypeCaseClauseOpt -> epsilon .)
    CASE            reduce using rule 213 (TypeCaseClauseOpt -> epsilon .)
    DEFAULT         reduce using rule 213 (TypeCaseClauseOpt -> epsilon .)


state 346

    (209) TypeSwitchGuard -> IdentifierOpt PrimaryExpr PERIOD . LPAREN TYPE RPAREN
    (122) Selector -> PERIOD . IDENT
    (126) TypeAssertion -> PERIOD . LPAREN Type RPAREN

    LPAREN          shift and go to state 356
    IDENT           shift and go to state 235


state 347

    (125) Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression . RBRACK
    (133) Expression -> Expression . BinaryOp Expression
    (139) BinaryOp -> . LOR
    (140) BinaryOp -> . LAND
    (141) BinaryOp -> . RelOp
    (142) BinaryOp -> . AddMulOp
    (143) RelOp -> . EQL
    (144) RelOp -> . NEQ
    (145) RelOp -> . LSS
    (146) RelOp -> . GTR
    (147) RelOp -> . LEQ
    (148) RelOp -> . GEQ
    (149) AddMulOp -> . UnaryOp
    (150) AddMulOp -> . OR
    (151) AddMulOp -> . XOR
    (152) AddMulOp -> . QUO
    (153) AddMulOp -> . REM
    (154) AddMulOp -> . SHL
    (155) AddMulOp -> . SHR
    (156) UnaryOp -> . ADD
    (157) UnaryOp -> . SUB
    (158) UnaryOp -> . MUL
    (159) UnaryOp -> . AND

    RBRACK          shift and go to state 357
    LOR             shift and go to state 161
    LAND            shift and go to state 162
    EQL             shift and go to state 165
    NEQ             shift and go to state 166
    LSS             shift and go to state 167
    GTR             shift and go to state 168
    LEQ             shift and go to state 169
    GEQ             shift and go to state 170
    OR              shift and go to state 172
    XOR             shift and go to state 173
    QUO             shift and go to state 174
    REM             shift and go to state 175
    SHL             shift and go to state 176
    SHR             shift and go to state 177
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 160
    RelOp                          shift and go to state 163
    AddMulOp                       shift and go to state 164
    UnaryOp                        shift and go to state 171

state 348

    (226) ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt .

    LBRACE          reduce using rule 226 (ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt .)


state 349

    (205) ExprCaseClause -> ExprSwitchCase COLON . StatementList
    (46) StatementList -> . StatementRep
    (47) StatementRep -> . StatementRep Statement SEMICOLON
    (48) StatementRep -> . epsilon
    (257) epsilon -> .

    RETURN          reduce using rule 257 (epsilon -> .)
    BREAK           reduce using rule 257 (epsilon -> .)
    CONTINUE        reduce using rule 257 (epsilon -> .)
    GOTO            reduce using rule 257 (epsilon -> .)
    LBRACE          reduce using rule 257 (epsilon -> .)
    IF              reduce using rule 257 (epsilon -> .)
    FOR             reduce using rule 257 (epsilon -> .)
    CONST           reduce using rule 257 (epsilon -> .)
    TYPE            reduce using rule 257 (epsilon -> .)
    VAR             reduce using rule 257 (epsilon -> .)
    IDENT           reduce using rule 257 (epsilon -> .)
    SWITCH          reduce using rule 257 (epsilon -> .)
    NOT             reduce using rule 257 (epsilon -> .)
    ADD             reduce using rule 257 (epsilon -> .)
    SUB             reduce using rule 257 (epsilon -> .)
    MUL             reduce using rule 257 (epsilon -> .)
    AND             reduce using rule 257 (epsilon -> .)
    LPAREN          reduce using rule 257 (epsilon -> .)
    INT_LITERAL     reduce using rule 257 (epsilon -> .)
    FLOAT_LITERAL   reduce using rule 257 (epsilon -> .)
    STRING_LITERAL  reduce using rule 257 (epsilon -> .)
    SEMICOLON       reduce using rule 257 (epsilon -> .)
    RBRACE          reduce using rule 257 (epsilon -> .)
    CASE            reduce using rule 257 (epsilon -> .)
    DEFAULT         reduce using rule 257 (epsilon -> .)

    StatementList                  shift and go to state 358
    StatementRep                   shift and go to state 148
    epsilon                        shift and go to state 149

state 350

    (206) ExprSwitchCase -> CASE ExpressionList .

    COLON           reduce using rule 206 (ExprSwitchCase -> CASE ExpressionList .)


state 351

    (208) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE .

    SEMICOLON       reduce using rule 208 (TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE .)


state 352

    (212) TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .

    RBRACE          reduce using rule 212 (TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .)
    CASE            reduce using rule 212 (TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .)
    DEFAULT         reduce using rule 212 (TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .)


state 353

    (214) TypeCaseClause -> TypeSwitchCase . COLON StatementList

    COLON           shift and go to state 359


state 354

    (215) TypeSwitchCase -> CASE . TypeList
    (217) TypeList -> . Type TypeRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . IMAG
    (10) TypeToken -> . STRING
    (11) TypeToken -> . BOOL
    (12) TypeToken -> . TYPE IDENT
    (97) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    IMAG            shift and go to state 70
    STRING          shift and go to state 71
    BOOL            shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    TypeList                       shift and go to state 360
    Type                           shift and go to state 361
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 355

    (216) TypeSwitchCase -> DEFAULT .

    COLON           reduce using rule 216 (TypeSwitchCase -> DEFAULT .)


state 356

    (209) TypeSwitchGuard -> IdentifierOpt PrimaryExpr PERIOD LPAREN . TYPE RPAREN
    (126) TypeAssertion -> PERIOD LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . IMAG
    (10) TypeToken -> . STRING
    (11) TypeToken -> . BOOL
    (12) TypeToken -> . TYPE IDENT
    (97) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    TYPE            shift and go to state 362
    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    IMAG            shift and go to state 70
    STRING          shift and go to state 71
    BOOL            shift and go to state 72
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Type                           shift and go to state 293
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 357

    (125) Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .

    PERIOD          reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LBRACK          reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LPAREN          reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LOR             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LAND            reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    EQL             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    NEQ             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LSS             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    GTR             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LEQ             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    GEQ             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    OR              reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    XOR             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    QUO             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    REM             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    SHL             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    SHR             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    ADD             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    SUB             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    MUL             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    AND             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    RBRACK          reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    COMMA           reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    SEMICOLON       reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    RPAREN          reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    INC             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    DEC             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    QUO_ASSIGN      reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    REM_ASSIGN      reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    AND_ASSIGN      reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    OR_ASSIGN       reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    ASSIGN          reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    COLON           reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LBRACE          reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)


state 358

    (205) ExprCaseClause -> ExprSwitchCase COLON StatementList .

    RBRACE          reduce using rule 205 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    CASE            reduce using rule 205 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 205 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)


state 359

    (214) TypeCaseClause -> TypeSwitchCase COLON . StatementList
    (46) StatementList -> . StatementRep
    (47) StatementRep -> . StatementRep Statement SEMICOLON
    (48) StatementRep -> . epsilon
    (257) epsilon -> .

    RETURN          reduce using rule 257 (epsilon -> .)
    BREAK           reduce using rule 257 (epsilon -> .)
    CONTINUE        reduce using rule 257 (epsilon -> .)
    GOTO            reduce using rule 257 (epsilon -> .)
    LBRACE          reduce using rule 257 (epsilon -> .)
    IF              reduce using rule 257 (epsilon -> .)
    FOR             reduce using rule 257 (epsilon -> .)
    CONST           reduce using rule 257 (epsilon -> .)
    TYPE            reduce using rule 257 (epsilon -> .)
    VAR             reduce using rule 257 (epsilon -> .)
    IDENT           reduce using rule 257 (epsilon -> .)
    SWITCH          reduce using rule 257 (epsilon -> .)
    NOT             reduce using rule 257 (epsilon -> .)
    ADD             reduce using rule 257 (epsilon -> .)
    SUB             reduce using rule 257 (epsilon -> .)
    MUL             reduce using rule 257 (epsilon -> .)
    AND             reduce using rule 257 (epsilon -> .)
    LPAREN          reduce using rule 257 (epsilon -> .)
    INT_LITERAL     reduce using rule 257 (epsilon -> .)
    FLOAT_LITERAL   reduce using rule 257 (epsilon -> .)
    STRING_LITERAL  reduce using rule 257 (epsilon -> .)
    SEMICOLON       reduce using rule 257 (epsilon -> .)
    RBRACE          reduce using rule 257 (epsilon -> .)
    CASE            reduce using rule 257 (epsilon -> .)
    DEFAULT         reduce using rule 257 (epsilon -> .)

    StatementList                  shift and go to state 363
    StatementRep                   shift and go to state 148
    epsilon                        shift and go to state 149

state 360

    (215) TypeSwitchCase -> CASE TypeList .

    COLON           reduce using rule 215 (TypeSwitchCase -> CASE TypeList .)


state 361

    (217) TypeList -> Type . TypeRep
    (218) TypeRep -> . TypeRep COMMA Type
    (219) TypeRep -> . epsilon
    (257) epsilon -> .

    COMMA           reduce using rule 257 (epsilon -> .)
    COLON           reduce using rule 257 (epsilon -> .)

    TypeRep                        shift and go to state 364
    epsilon                        shift and go to state 365

state 362

    (209) TypeSwitchGuard -> IdentifierOpt PrimaryExpr PERIOD LPAREN TYPE . RPAREN
    (12) TypeToken -> TYPE . IDENT

    RPAREN          shift and go to state 366
    IDENT           shift and go to state 111


state 363

    (214) TypeCaseClause -> TypeSwitchCase COLON StatementList .

    RBRACE          reduce using rule 214 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    CASE            reduce using rule 214 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 214 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)


state 364

    (217) TypeList -> Type TypeRep .
    (218) TypeRep -> TypeRep . COMMA Type

    COLON           reduce using rule 217 (TypeList -> Type TypeRep .)
    COMMA           shift and go to state 367


state 365

    (219) TypeRep -> epsilon .

    COMMA           reduce using rule 219 (TypeRep -> epsilon .)
    COLON           reduce using rule 219 (TypeRep -> epsilon .)


state 366

    (209) TypeSwitchGuard -> IdentifierOpt PrimaryExpr PERIOD LPAREN TYPE RPAREN .

    LBRACE          reduce using rule 209 (TypeSwitchGuard -> IdentifierOpt PrimaryExpr PERIOD LPAREN TYPE RPAREN .)


state 367

    (218) TypeRep -> TypeRep COMMA . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . IMAG
    (10) TypeToken -> . STRING
    (11) TypeToken -> . BOOL
    (12) TypeToken -> . TYPE IDENT
    (97) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    IMAG            shift and go to state 70
    STRING          shift and go to state 71
    BOOL            shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Type                           shift and go to state 368
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 368

    (218) TypeRep -> TypeRep COMMA Type .

    COMMA           reduce using rule 218 (TypeRep -> TypeRep COMMA Type .)
    COLON           reduce using rule 218 (TypeRep -> TypeRep COMMA Type .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 150 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 227 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 227 resolved as shift
WARNING: shift/reduce conflict for INT_LITERAL in state 227 resolved as shift
WARNING: shift/reduce conflict for FLOAT_LITERAL in state 227 resolved as shift
WARNING: shift/reduce conflict for STRING_LITERAL in state 227 resolved as shift
WARNING: shift/reduce conflict for LOR in state 234 resolved as shift
WARNING: shift/reduce conflict for LAND in state 234 resolved as shift
WARNING: shift/reduce conflict for EQL in state 234 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 234 resolved as shift
WARNING: shift/reduce conflict for LSS in state 234 resolved as shift
WARNING: shift/reduce conflict for GTR in state 234 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 234 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 234 resolved as shift
WARNING: shift/reduce conflict for OR in state 234 resolved as shift
WARNING: shift/reduce conflict for XOR in state 234 resolved as shift
WARNING: shift/reduce conflict for QUO in state 234 resolved as shift
WARNING: shift/reduce conflict for REM in state 234 resolved as shift
WARNING: shift/reduce conflict for SHL in state 234 resolved as shift
WARNING: shift/reduce conflict for SHR in state 234 resolved as shift
WARNING: shift/reduce conflict for ADD in state 234 resolved as shift
WARNING: shift/reduce conflict for SUB in state 234 resolved as shift
WARNING: shift/reduce conflict for MUL in state 234 resolved as shift
WARNING: shift/reduce conflict for AND in state 234 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 288 resolved as shift

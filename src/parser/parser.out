Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    IMAG
    CHAR
    ADD_ASSIGN
    SUB_ASSIGN
    MUL_ASSIGN
    QUO_ASSIGN
    REM_ASSIGN
    AND_ASSIGN
    OR_ASSIGN
    XOR_ASSIGN
    SHL_ASSIGN
    SHR_ASSIGN
    AND_NOT_ASSIGN
    ARROW
    INC
    DEC
    NOT
    BREAK
    SELECT
    INTERFACE
    DEFER
    GO
    GOTO
    MAP
    FALLTHROUGH
    RANGE
    CONTINUE

Grammar

Rule 0     S' -> start
Rule 1     start -> SourceFile
Rule 2     SourceFile -> PackageClause SEMICOLON ImportDeclList TopLevelDeclList
Rule 3     ImportDeclList -> empty
Rule 4     ImportDeclList -> ImportDeclList ImportDecl SEMICOLON
Rule 5     TopLevelDeclList -> empty
Rule 6     TopLevelDeclList -> TopLevelDeclList TopLevelDecl SEMICOLON
Rule 7     PackageClause -> PACKAGE IDENT
Rule 8     TopLevelDecl -> Declaration
Rule 9     TopLevelDecl -> FunctionDecl
Rule 10    TopLevelDecl -> MethodDecl
Rule 11    ImportDecl -> IMPORT ImportSpecTopList
Rule 12    ImportSpecTopList -> ImportSpec
Rule 13    ImportSpecTopList -> LPAREN ImportSpecList RPAREN
Rule 14    ImportSpecList -> empty
Rule 15    ImportSpecList -> ImportSpecList ImportSpec SEMICOLON
Rule 16    ImportSpec -> ImportSpecInit ImportPath
Rule 17    ImportSpecInit -> empty
Rule 18    ImportSpecInit -> PERIOD
Rule 19    ImportSpecInit -> IDENT
Rule 20    ImportPath -> STRING
Rule 21    Block -> LBRACE StatementList RBRACE
Rule 22    StatementList -> empty
Rule 23    StatementList -> StatementList Statement SEMICOLON
Rule 24    Statement -> Declaration
Rule 25    Statement -> SimpleStmt
Rule 26    Statement -> ReturnStmt
Rule 27    Statement -> Block
Rule 28    Statement -> IfStmt
Rule 29    Statement -> SwitchStmt
Rule 30    Statement -> ForStmt
Rule 31    Declaration -> ConstDecl
Rule 32    Declaration -> TypeDecl
Rule 33    Declaration -> VarDecl
Rule 34    ConstDecl -> CONST ConstSpecTopList
Rule 35    ConstSpecTopList -> ConstSpec
Rule 36    ConstSpecTopList -> LPAREN ConstSpecList RPAREN
Rule 37    ConstSpecList -> empty
Rule 38    ConstSpecList -> ConstSpecList ConstSpec SEMICOLON
Rule 39    ConstSpec -> IdentifierList ConstSpecTail
Rule 40    ConstSpecTail -> empty
Rule 41    ConstSpecTail -> TypeTop ASSIGN ExpressionList
Rule 42    TypeTop -> empty
Rule 43    TypeTop -> Type
Rule 44    IdentifierList -> IDENT IdentifierBotList
Rule 45    IdentifierBotList -> empty
Rule 46    IdentifierBotList -> IdentifierBotList COMMA IDENT
Rule 47    ExpressionList -> Expression ExpressionBotList
Rule 48    ExpressionBotList -> empty
Rule 49    ExpressionBotList -> ExpressionBotList COMMA Expression
Rule 50    TypeDecl -> TYPE TypeSpecTopList
Rule 51    TypeSpecTopList -> TypeSpec
Rule 52    TypeSpecTopList -> LPAREN TypeSpecList RPAREN
Rule 53    TypeSpecList -> empty
Rule 54    TypeSpecList -> TypeSpecList TypeSpec SEMICOLON
Rule 55    TypeSpec -> AliasDecl
Rule 56    TypeSpec -> TypeDef
Rule 57    AliasDecl -> IDENT ASSIGN Type
Rule 58    TypeDef -> IDENT Type
Rule 59    Type -> TypeName
Rule 60    Type -> TypeLit
Rule 61    Type -> LPAREN Type RPAREN
Rule 62    TypeName -> IDENT
Rule 63    TypeName -> QualifiedIdent
Rule 64    QualifiedIdent -> IDENT PERIOD IDENT
Rule 65    TypeLit -> ArrayType
Rule 66    TypeLit -> StructType
Rule 67    TypeLit -> FunctionType
Rule 68    ArrayType -> LBRACK ArrayLength RBRACK ElementType
Rule 69    ArrayLength -> Expression
Rule 70    ElementType -> Type
Rule 71    StructType -> STRUCT LBRACE FieldDeclList RBRACE
Rule 72    FieldDeclList -> empty
Rule 73    FieldDeclList -> FieldDeclList FieldDecl SEMICOLON
Rule 74    FieldDecl -> FieldDeclHead TagTop
Rule 75    TagTop -> empty
Rule 76    TagTop -> Tag
Rule 77    FieldDeclHead -> IdentifierList Type
Rule 78    FieldDeclHead -> EmbeddedField
Rule 79    EmbeddedField -> starTop TypeName
Rule 80    starTop -> empty
Rule 81    starTop -> MUL
Rule 82    Tag -> string_lit
Rule 83    FunctionType -> FUNC Signature
Rule 84    Signature -> Parameters ResultTop
Rule 85    ResultTop -> empty
Rule 86    ResultTop -> Result
Rule 87    Result -> Parameters
Rule 88    Result -> Type
Rule 89    Parameters -> LPAREN ParameterListTop RPAREN
Rule 90    ParameterListTop -> empty
Rule 91    ParameterListTop -> ParameterList commaTop
Rule 92    commaTop -> empty
Rule 93    commaTop -> COMMA
Rule 94    ParameterList -> ParameterDecl ParameterDeclList
Rule 95    ParameterDeclList -> empty
Rule 96    ParameterDeclList -> ParameterDeclList COMMA ParameterDecl
Rule 97    ParameterDecl -> ParameterDeclHead tripledotTop Type
Rule 98    tripledotTop -> empty
Rule 99    tripledotTop -> ELLIPSIS
Rule 100   ParameterDeclHead -> empty
Rule 101   ParameterDeclHead -> IdentifierList
Rule 102   VarDecl -> VAR VarSpecTopList
Rule 103   VarSpecTopList -> VarSpec
Rule 104   VarSpecTopList -> LPAREN VarSpecList RPAREN
Rule 105   VarSpecList -> empty
Rule 106   VarSpecList -> VarSpecList VarSpec SEMICOLON
Rule 107   VarSpec -> IdentifierList VarSpecTail
Rule 108   VarSpecTail -> Type VarSpecMid
Rule 109   VarSpecTail -> ASSIGN ExpressionList
Rule 110   VarSpecMid -> empty
Rule 111   VarSpecMid -> ASSIGN ExpressionList
Rule 112   FunctionDecl -> FUNC FunctionName FunctionDeclTail
Rule 113   FunctionDeclTail -> Function
Rule 114   FunctionDeclTail -> Signature
Rule 115   FunctionName -> IDENT
Rule 116   Function -> Signature FunctionBody
Rule 117   FunctionBody -> Block
Rule 118   MethodDecl -> FUNC Receiver MethodName FunctionDeclTail
Rule 119   Receiver -> Parameters
Rule 120   SimpleStmt -> ExpressionStmt
Rule 121   SimpleStmt -> Assignment
Rule 122   SimpleStmt -> ShortVarDecl
Rule 123   ExpressionStmt -> Expression
Rule 124   ShortVarDecl -> IdentifierList DEFINE ExpressionList
Rule 125   Assignment -> ExpressionList assign_op ExpressionList
Rule 126   assign_op -> addmul_op ASSIGN
Rule 127   addmul_op -> empty
Rule 128   addmul_op -> add_op
Rule 129   addmul_op -> mul_op
Rule 130   IfStmt -> IF SimpleStmtBot Expression Block elseBot
Rule 131   SimpleStmtBot -> empty
Rule 132   SimpleStmtBot -> SimpleStmt SEMICOLON
Rule 133   elseBot -> empty
Rule 134   elseBot -> ELSE elseTail
Rule 135   elseTail -> IfStmt
Rule 136   elseTail -> Block
Rule 137   SwitchStmt -> ExprSwitchStmt
Rule 138   ExprSwitchStmt -> SWITCH SimpleStmtBot ExpressionBot LBRACE ExprCaseClauseList RBRACE
Rule 139   ExprCaseClauseList -> empty
Rule 140   ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause
Rule 141   ExprCaseClause -> ExprSwitchCase COLON StatementList
Rule 142   ExprSwitchCase -> CASE ExpressionList
Rule 143   ExprSwitchCase -> DEFAULT
Rule 144   ForStmt -> FOR ExpressionBot Block
Rule 145   ExpressionBot -> empty
Rule 146   ExpressionBot -> Expression
Rule 147   ReturnStmt -> RETURN ExpressionListBot
Rule 148   ExpressionListBot -> empty
Rule 149   ExpressionListBot -> ExpressionList
Rule 150   Expression -> UnaryExpr
Rule 151   Expression -> Expression binary_op Expression
Rule 152   UnaryExpr -> PrimaryExpr
Rule 153   UnaryExpr -> unary_op UnaryExpr
Rule 154   binary_op -> LOR
Rule 155   binary_op -> LAND
Rule 156   binary_op -> rel_op
Rule 157   binary_op -> add_op
Rule 158   binary_op -> mul_op
Rule 159   rel_op -> EQL
Rule 160   rel_op -> NEQ
Rule 161   rel_op -> LSS
Rule 162   rel_op -> LEQ
Rule 163   rel_op -> GTR
Rule 164   rel_op -> GEQ
Rule 165   add_op -> ADD
Rule 166   add_op -> SUB
Rule 167   add_op -> OR
Rule 168   add_op -> XOR
Rule 169   mul_op -> MUL
Rule 170   mul_op -> QUO
Rule 171   mul_op -> REM
Rule 172   mul_op -> SHL
Rule 173   mul_op -> SHR
Rule 174   mul_op -> AND
Rule 175   mul_op -> AND_NOT
Rule 176   unary_op -> +
Rule 177   unary_op -> -
Rule 178   unary_op -> !
Rule 179   unary_op -> ^
Rule 180   unary_op -> *
Rule 181   unary_op -> &
Rule 182   unary_op -> CHAN
Rule 183   PrimaryExpr -> Operand
Rule 184   PrimaryExpr -> PrimaryExpr Selector
Rule 185   PrimaryExpr -> PrimaryExpr Index
Rule 186   PrimaryExpr -> PrimaryExpr Arguments
Rule 187   Operand -> Literal
Rule 188   Operand -> OperandName
Rule 189   Operand -> MethodExpr
Rule 190   Operand -> LPAREN Expression RPAREN
Rule 191   Literal -> BasicLit
Rule 192   Literal -> FunctionLit
Rule 193   BasicLit -> int_lit
Rule 194   BasicLit -> float_lit
Rule 195   BasicLit -> string_lit
Rule 196   int_lit -> INT
Rule 197   float_lit -> FLOAT
Rule 198   string_lit -> STRING
Rule 199   OperandName -> IDENT
Rule 200   FunctionLit -> FUNC Function
Rule 201   MethodExpr -> ReceiverType PERIOD MethodName
Rule 202   MethodName -> IDENT
Rule 203   ReceiverType -> TypeName
Rule 204   ReceiverType -> LPAREN MUL TypeName RPAREN
Rule 205   ReceiverType -> LPAREN ReceiverType RPAREN
Rule 206   Selector -> PERIOD IDENT
Rule 207   Index -> LBRACK Expression RBRACK
Rule 208   Arguments -> LPAREN ArgumentsHead RPAREN
Rule 209   ArgumentsHead -> empty
Rule 210   ArgumentsHead -> ArgumentsHeadMid tripledotTop commaTop
Rule 211   ArgumentsHeadMid -> ExpressionList
Rule 212   ArgumentsHeadMid -> Type COMMA ExpressionList
Rule 213   ArgumentsHeadMid -> Type
Rule 214   empty -> <empty>

Terminals, with rules where they appear

!                    : 178
&                    : 181
*                    : 180
+                    : 176
-                    : 177
ADD                  : 165
ADD_ASSIGN           : 
AND                  : 174
AND_ASSIGN           : 
AND_NOT              : 175
AND_NOT_ASSIGN       : 
ARROW                : 
ASSIGN               : 41 57 109 111 126
BREAK                : 
CASE                 : 142
CHAN                 : 182
CHAR                 : 
COLON                : 141
COMMA                : 46 49 93 96 212
CONST                : 34
CONTINUE             : 
DEC                  : 
DEFAULT              : 143
DEFER                : 
DEFINE               : 124
ELLIPSIS             : 99
ELSE                 : 134
EQL                  : 159
FALLTHROUGH          : 
FLOAT                : 197
FOR                  : 144
FUNC                 : 83 112 118 200
GEQ                  : 164
GO                   : 
GOTO                 : 
GTR                  : 163
IDENT                : 7 19 44 46 57 58 62 64 64 115 199 202 206
IF                   : 130
IMAG                 : 
IMPORT               : 11
INC                  : 
INT                  : 196
INTERFACE            : 
LAND                 : 155
LBRACE               : 21 71 138
LBRACK               : 68 207
LEQ                  : 162
LOR                  : 154
LPAREN               : 13 36 52 61 89 104 190 204 205 208
LSS                  : 161
MAP                  : 
MUL                  : 81 169 204
MUL_ASSIGN           : 
NEQ                  : 160
NOT                  : 
OR                   : 167
OR_ASSIGN            : 
PACKAGE              : 7
PERIOD               : 18 64 201 206
QUO                  : 170
QUO_ASSIGN           : 
RANGE                : 
RBRACE               : 21 71 138
RBRACK               : 68 207
REM                  : 171
REM_ASSIGN           : 
RETURN               : 147
RPAREN               : 13 36 52 61 89 104 190 204 205 208
SELECT               : 
SEMICOLON            : 2 4 6 15 23 38 54 73 106 132
SHL                  : 172
SHL_ASSIGN           : 
SHR                  : 173
SHR_ASSIGN           : 
STRING               : 20 198
STRUCT               : 71
SUB                  : 166
SUB_ASSIGN           : 
SWITCH               : 138
TYPE                 : 50
VAR                  : 102
XOR                  : 168
XOR_ASSIGN           : 
^                    : 179
error                : 

Nonterminals, with rules where they appear

AliasDecl            : 55
Arguments            : 186
ArgumentsHead        : 208
ArgumentsHeadMid     : 210
ArrayLength          : 68
ArrayType            : 65
Assignment           : 121
BasicLit             : 191
Block                : 27 117 130 136 144
ConstDecl            : 31
ConstSpec            : 35 38
ConstSpecList        : 36 38
ConstSpecTail        : 39
ConstSpecTopList     : 34
Declaration          : 8 24
ElementType          : 68
EmbeddedField        : 78
ExprCaseClause       : 140
ExprCaseClauseList   : 138 140
ExprSwitchCase       : 141
ExprSwitchStmt       : 137
Expression           : 47 49 69 123 130 146 151 151 190 207
ExpressionBot        : 138 144
ExpressionBotList    : 47 49
ExpressionList       : 41 109 111 124 125 125 142 149 211 212
ExpressionListBot    : 147
ExpressionStmt       : 120
FieldDecl            : 73
FieldDeclHead        : 74
FieldDeclList        : 71 73
ForStmt              : 30
Function             : 113 200
FunctionBody         : 116
FunctionDecl         : 9
FunctionDeclTail     : 112 118
FunctionLit          : 192
FunctionName         : 112
FunctionType         : 67
IdentifierBotList    : 44 46
IdentifierList       : 39 77 101 107 124
IfStmt               : 28 135
ImportDecl           : 4
ImportDeclList       : 2 4
ImportPath           : 16
ImportSpec           : 12 15
ImportSpecInit       : 16
ImportSpecList       : 13 15
ImportSpecTopList    : 11
Index                : 185
Literal              : 187
MethodDecl           : 10
MethodExpr           : 189
MethodName           : 118 201
Operand              : 183
OperandName          : 188
PackageClause        : 2
ParameterDecl        : 94 96
ParameterDeclHead    : 97
ParameterDeclList    : 94 96
ParameterList        : 91
ParameterListTop     : 89
Parameters           : 84 87 119
PrimaryExpr          : 152 184 185 186
QualifiedIdent       : 63
Receiver             : 118
ReceiverType         : 201 205
Result               : 86
ResultTop            : 84
ReturnStmt           : 26
Selector             : 184
ShortVarDecl         : 122
Signature            : 83 114 116
SimpleStmt           : 25 132
SimpleStmtBot        : 130 138
SourceFile           : 1
Statement            : 23
StatementList        : 21 23 141
StructType           : 66
SwitchStmt           : 29
Tag                  : 76
TagTop               : 74
TopLevelDecl         : 6
TopLevelDeclList     : 2 6
Type                 : 43 57 58 61 70 77 88 97 108 212 213
TypeDecl             : 32
TypeDef              : 56
TypeLit              : 60
TypeName             : 59 79 203 204
TypeSpec             : 51 54
TypeSpecList         : 52 54
TypeSpecTopList      : 50
TypeTop              : 41
UnaryExpr            : 150 153
VarDecl              : 33
VarSpec              : 103 106
VarSpecList          : 104 106
VarSpecMid           : 108
VarSpecTail          : 107
VarSpecTopList       : 102
add_op               : 128 157
addmul_op            : 126
assign_op            : 125
binary_op            : 151
commaTop             : 91 210
elseBot              : 130
elseTail             : 134
empty                : 3 5 14 17 22 37 40 42 45 48 53 72 75 80 85 90 92 95 98 100 105 110 127 131 133 139 145 148 209
float_lit            : 194
int_lit              : 193
mul_op               : 129 158
rel_op               : 156
starTop              : 79
start                : 0
string_lit           : 82 195
tripledotTop         : 97 210
unary_op             : 153

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . SourceFile
    (2) SourceFile -> . PackageClause SEMICOLON ImportDeclList TopLevelDeclList
    (7) PackageClause -> . PACKAGE IDENT

    PACKAGE         shift and go to state 4

    start                          shift and go to state 1
    SourceFile                     shift and go to state 2
    PackageClause                  shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> SourceFile .

    $end            reduce using rule 1 (start -> SourceFile .)


state 3

    (2) SourceFile -> PackageClause . SEMICOLON ImportDeclList TopLevelDeclList

    SEMICOLON       shift and go to state 5


state 4

    (7) PackageClause -> PACKAGE . IDENT

    IDENT           shift and go to state 6


state 5

    (2) SourceFile -> PackageClause SEMICOLON . ImportDeclList TopLevelDeclList
    (3) ImportDeclList -> . empty
    (4) ImportDeclList -> . ImportDeclList ImportDecl SEMICOLON
    (214) empty -> .

    IMPORT          reduce using rule 214 (empty -> .)
    FUNC            reduce using rule 214 (empty -> .)
    CONST           reduce using rule 214 (empty -> .)
    TYPE            reduce using rule 214 (empty -> .)
    VAR             reduce using rule 214 (empty -> .)
    $end            reduce using rule 214 (empty -> .)

    ImportDeclList                 shift and go to state 7
    empty                          shift and go to state 8

state 6

    (7) PackageClause -> PACKAGE IDENT .

    SEMICOLON       reduce using rule 7 (PackageClause -> PACKAGE IDENT .)


state 7

    (2) SourceFile -> PackageClause SEMICOLON ImportDeclList . TopLevelDeclList
    (4) ImportDeclList -> ImportDeclList . ImportDecl SEMICOLON
    (5) TopLevelDeclList -> . empty
    (6) TopLevelDeclList -> . TopLevelDeclList TopLevelDecl SEMICOLON
    (11) ImportDecl -> . IMPORT ImportSpecTopList
    (214) empty -> .

    IMPORT          shift and go to state 12
    FUNC            reduce using rule 214 (empty -> .)
    CONST           reduce using rule 214 (empty -> .)
    TYPE            reduce using rule 214 (empty -> .)
    VAR             reduce using rule 214 (empty -> .)
    $end            reduce using rule 214 (empty -> .)

    TopLevelDeclList               shift and go to state 9
    ImportDecl                     shift and go to state 10
    empty                          shift and go to state 11

state 8

    (3) ImportDeclList -> empty .

    IMPORT          reduce using rule 3 (ImportDeclList -> empty .)
    FUNC            reduce using rule 3 (ImportDeclList -> empty .)
    CONST           reduce using rule 3 (ImportDeclList -> empty .)
    TYPE            reduce using rule 3 (ImportDeclList -> empty .)
    VAR             reduce using rule 3 (ImportDeclList -> empty .)
    $end            reduce using rule 3 (ImportDeclList -> empty .)


state 9

    (2) SourceFile -> PackageClause SEMICOLON ImportDeclList TopLevelDeclList .
    (6) TopLevelDeclList -> TopLevelDeclList . TopLevelDecl SEMICOLON
    (8) TopLevelDecl -> . Declaration
    (9) TopLevelDecl -> . FunctionDecl
    (10) TopLevelDecl -> . MethodDecl
    (31) Declaration -> . ConstDecl
    (32) Declaration -> . TypeDecl
    (33) Declaration -> . VarDecl
    (112) FunctionDecl -> . FUNC FunctionName FunctionDeclTail
    (118) MethodDecl -> . FUNC Receiver MethodName FunctionDeclTail
    (34) ConstDecl -> . CONST ConstSpecTopList
    (50) TypeDecl -> . TYPE TypeSpecTopList
    (102) VarDecl -> . VAR VarSpecTopList

    $end            reduce using rule 2 (SourceFile -> PackageClause SEMICOLON ImportDeclList TopLevelDeclList .)
    FUNC            shift and go to state 20
    CONST           shift and go to state 21
    TYPE            shift and go to state 22
    VAR             shift and go to state 23

    TopLevelDecl                   shift and go to state 13
    Declaration                    shift and go to state 14
    FunctionDecl                   shift and go to state 15
    MethodDecl                     shift and go to state 16
    ConstDecl                      shift and go to state 17
    TypeDecl                       shift and go to state 18
    VarDecl                        shift and go to state 19

state 10

    (4) ImportDeclList -> ImportDeclList ImportDecl . SEMICOLON

    SEMICOLON       shift and go to state 24


state 11

    (5) TopLevelDeclList -> empty .

    FUNC            reduce using rule 5 (TopLevelDeclList -> empty .)
    CONST           reduce using rule 5 (TopLevelDeclList -> empty .)
    TYPE            reduce using rule 5 (TopLevelDeclList -> empty .)
    VAR             reduce using rule 5 (TopLevelDeclList -> empty .)
    $end            reduce using rule 5 (TopLevelDeclList -> empty .)


state 12

    (11) ImportDecl -> IMPORT . ImportSpecTopList
    (12) ImportSpecTopList -> . ImportSpec
    (13) ImportSpecTopList -> . LPAREN ImportSpecList RPAREN
    (16) ImportSpec -> . ImportSpecInit ImportPath
    (17) ImportSpecInit -> . empty
    (18) ImportSpecInit -> . PERIOD
    (19) ImportSpecInit -> . IDENT
    (214) empty -> .

    LPAREN          shift and go to state 27
    PERIOD          shift and go to state 30
    IDENT           shift and go to state 31
    STRING          reduce using rule 214 (empty -> .)

    ImportSpecTopList              shift and go to state 25
    ImportSpec                     shift and go to state 26
    ImportSpecInit                 shift and go to state 28
    empty                          shift and go to state 29

state 13

    (6) TopLevelDeclList -> TopLevelDeclList TopLevelDecl . SEMICOLON

    SEMICOLON       shift and go to state 32


state 14

    (8) TopLevelDecl -> Declaration .

    SEMICOLON       reduce using rule 8 (TopLevelDecl -> Declaration .)


state 15

    (9) TopLevelDecl -> FunctionDecl .

    SEMICOLON       reduce using rule 9 (TopLevelDecl -> FunctionDecl .)


state 16

    (10) TopLevelDecl -> MethodDecl .

    SEMICOLON       reduce using rule 10 (TopLevelDecl -> MethodDecl .)


state 17

    (31) Declaration -> ConstDecl .

    SEMICOLON       reduce using rule 31 (Declaration -> ConstDecl .)


state 18

    (32) Declaration -> TypeDecl .

    SEMICOLON       reduce using rule 32 (Declaration -> TypeDecl .)


state 19

    (33) Declaration -> VarDecl .

    SEMICOLON       reduce using rule 33 (Declaration -> VarDecl .)


state 20

    (112) FunctionDecl -> FUNC . FunctionName FunctionDeclTail
    (118) MethodDecl -> FUNC . Receiver MethodName FunctionDeclTail
    (115) FunctionName -> . IDENT
    (119) Receiver -> . Parameters
    (89) Parameters -> . LPAREN ParameterListTop RPAREN

    IDENT           shift and go to state 35
    LPAREN          shift and go to state 37

    FunctionName                   shift and go to state 33
    Receiver                       shift and go to state 34
    Parameters                     shift and go to state 36

state 21

    (34) ConstDecl -> CONST . ConstSpecTopList
    (35) ConstSpecTopList -> . ConstSpec
    (36) ConstSpecTopList -> . LPAREN ConstSpecList RPAREN
    (39) ConstSpec -> . IdentifierList ConstSpecTail
    (44) IdentifierList -> . IDENT IdentifierBotList

    LPAREN          shift and go to state 40
    IDENT           shift and go to state 42

    ConstSpecTopList               shift and go to state 38
    ConstSpec                      shift and go to state 39
    IdentifierList                 shift and go to state 41

state 22

    (50) TypeDecl -> TYPE . TypeSpecTopList
    (51) TypeSpecTopList -> . TypeSpec
    (52) TypeSpecTopList -> . LPAREN TypeSpecList RPAREN
    (55) TypeSpec -> . AliasDecl
    (56) TypeSpec -> . TypeDef
    (57) AliasDecl -> . IDENT ASSIGN Type
    (58) TypeDef -> . IDENT Type

    LPAREN          shift and go to state 45
    IDENT           shift and go to state 48

    TypeSpecTopList                shift and go to state 43
    TypeSpec                       shift and go to state 44
    AliasDecl                      shift and go to state 46
    TypeDef                        shift and go to state 47

state 23

    (102) VarDecl -> VAR . VarSpecTopList
    (103) VarSpecTopList -> . VarSpec
    (104) VarSpecTopList -> . LPAREN VarSpecList RPAREN
    (107) VarSpec -> . IdentifierList VarSpecTail
    (44) IdentifierList -> . IDENT IdentifierBotList

    LPAREN          shift and go to state 51
    IDENT           shift and go to state 42

    VarSpecTopList                 shift and go to state 49
    VarSpec                        shift and go to state 50
    IdentifierList                 shift and go to state 52

state 24

    (4) ImportDeclList -> ImportDeclList ImportDecl SEMICOLON .

    IMPORT          reduce using rule 4 (ImportDeclList -> ImportDeclList ImportDecl SEMICOLON .)
    FUNC            reduce using rule 4 (ImportDeclList -> ImportDeclList ImportDecl SEMICOLON .)
    CONST           reduce using rule 4 (ImportDeclList -> ImportDeclList ImportDecl SEMICOLON .)
    TYPE            reduce using rule 4 (ImportDeclList -> ImportDeclList ImportDecl SEMICOLON .)
    VAR             reduce using rule 4 (ImportDeclList -> ImportDeclList ImportDecl SEMICOLON .)
    $end            reduce using rule 4 (ImportDeclList -> ImportDeclList ImportDecl SEMICOLON .)


state 25

    (11) ImportDecl -> IMPORT ImportSpecTopList .

    SEMICOLON       reduce using rule 11 (ImportDecl -> IMPORT ImportSpecTopList .)


state 26

    (12) ImportSpecTopList -> ImportSpec .

    SEMICOLON       reduce using rule 12 (ImportSpecTopList -> ImportSpec .)


state 27

    (13) ImportSpecTopList -> LPAREN . ImportSpecList RPAREN
    (14) ImportSpecList -> . empty
    (15) ImportSpecList -> . ImportSpecList ImportSpec SEMICOLON
    (214) empty -> .

    RPAREN          reduce using rule 214 (empty -> .)
    PERIOD          reduce using rule 214 (empty -> .)
    IDENT           reduce using rule 214 (empty -> .)
    STRING          reduce using rule 214 (empty -> .)

    ImportSpecList                 shift and go to state 53
    empty                          shift and go to state 54

state 28

    (16) ImportSpec -> ImportSpecInit . ImportPath
    (20) ImportPath -> . STRING

    STRING          shift and go to state 56

    ImportPath                     shift and go to state 55

state 29

    (17) ImportSpecInit -> empty .

    STRING          reduce using rule 17 (ImportSpecInit -> empty .)


state 30

    (18) ImportSpecInit -> PERIOD .

    STRING          reduce using rule 18 (ImportSpecInit -> PERIOD .)


state 31

    (19) ImportSpecInit -> IDENT .

    STRING          reduce using rule 19 (ImportSpecInit -> IDENT .)


state 32

    (6) TopLevelDeclList -> TopLevelDeclList TopLevelDecl SEMICOLON .

    FUNC            reduce using rule 6 (TopLevelDeclList -> TopLevelDeclList TopLevelDecl SEMICOLON .)
    CONST           reduce using rule 6 (TopLevelDeclList -> TopLevelDeclList TopLevelDecl SEMICOLON .)
    TYPE            reduce using rule 6 (TopLevelDeclList -> TopLevelDeclList TopLevelDecl SEMICOLON .)
    VAR             reduce using rule 6 (TopLevelDeclList -> TopLevelDeclList TopLevelDecl SEMICOLON .)
    $end            reduce using rule 6 (TopLevelDeclList -> TopLevelDeclList TopLevelDecl SEMICOLON .)


state 33

    (112) FunctionDecl -> FUNC FunctionName . FunctionDeclTail
    (113) FunctionDeclTail -> . Function
    (114) FunctionDeclTail -> . Signature
    (116) Function -> . Signature FunctionBody
    (84) Signature -> . Parameters ResultTop
    (89) Parameters -> . LPAREN ParameterListTop RPAREN

    LPAREN          shift and go to state 37

    FunctionDeclTail               shift and go to state 57
    Function                       shift and go to state 58
    Signature                      shift and go to state 59
    Parameters                     shift and go to state 60

state 34

    (118) MethodDecl -> FUNC Receiver . MethodName FunctionDeclTail
    (202) MethodName -> . IDENT

    IDENT           shift and go to state 62

    MethodName                     shift and go to state 61

state 35

    (115) FunctionName -> IDENT .

    LPAREN          reduce using rule 115 (FunctionName -> IDENT .)


state 36

    (119) Receiver -> Parameters .

    IDENT           reduce using rule 119 (Receiver -> Parameters .)


state 37

    (89) Parameters -> LPAREN . ParameterListTop RPAREN
    (90) ParameterListTop -> . empty
    (91) ParameterListTop -> . ParameterList commaTop
    (214) empty -> .
    (94) ParameterList -> . ParameterDecl ParameterDeclList
    (97) ParameterDecl -> . ParameterDeclHead tripledotTop Type
    (100) ParameterDeclHead -> . empty
    (101) ParameterDeclHead -> . IdentifierList
    (44) IdentifierList -> . IDENT IdentifierBotList

  ! shift/reduce conflict for IDENT resolved as shift
    RPAREN          reduce using rule 214 (empty -> .)
    ELLIPSIS        reduce using rule 214 (empty -> .)
    LPAREN          reduce using rule 214 (empty -> .)
    LBRACK          reduce using rule 214 (empty -> .)
    STRUCT          reduce using rule 214 (empty -> .)
    FUNC            reduce using rule 214 (empty -> .)
    IDENT           shift and go to state 42

  ! IDENT           [ reduce using rule 214 (empty -> .) ]

    ParameterListTop               shift and go to state 63
    empty                          shift and go to state 64
    ParameterList                  shift and go to state 65
    ParameterDecl                  shift and go to state 66
    ParameterDeclHead              shift and go to state 67
    IdentifierList                 shift and go to state 68

state 38

    (34) ConstDecl -> CONST ConstSpecTopList .

    SEMICOLON       reduce using rule 34 (ConstDecl -> CONST ConstSpecTopList .)


state 39

    (35) ConstSpecTopList -> ConstSpec .

    SEMICOLON       reduce using rule 35 (ConstSpecTopList -> ConstSpec .)


state 40

    (36) ConstSpecTopList -> LPAREN . ConstSpecList RPAREN
    (37) ConstSpecList -> . empty
    (38) ConstSpecList -> . ConstSpecList ConstSpec SEMICOLON
    (214) empty -> .

    RPAREN          reduce using rule 214 (empty -> .)
    IDENT           reduce using rule 214 (empty -> .)

    ConstSpecList                  shift and go to state 69
    empty                          shift and go to state 70

state 41

    (39) ConstSpec -> IdentifierList . ConstSpecTail
    (40) ConstSpecTail -> . empty
    (41) ConstSpecTail -> . TypeTop ASSIGN ExpressionList
    (214) empty -> .
    (42) TypeTop -> . empty
    (43) TypeTop -> . Type
    (59) Type -> . TypeName
    (60) Type -> . TypeLit
    (61) Type -> . LPAREN Type RPAREN
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (65) TypeLit -> . ArrayType
    (66) TypeLit -> . StructType
    (67) TypeLit -> . FunctionType
    (64) QualifiedIdent -> . IDENT PERIOD IDENT
    (68) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (71) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (83) FunctionType -> . FUNC Signature

    SEMICOLON       reduce using rule 214 (empty -> .)
    ASSIGN          reduce using rule 214 (empty -> .)
    LPAREN          shift and go to state 77
    IDENT           shift and go to state 78
    LBRACK          shift and go to state 83
    STRUCT          shift and go to state 84
    FUNC            shift and go to state 85

    ConstSpecTail                  shift and go to state 71
    empty                          shift and go to state 72
    TypeTop                        shift and go to state 73
    Type                           shift and go to state 74
    TypeName                       shift and go to state 75
    TypeLit                        shift and go to state 76
    QualifiedIdent                 shift and go to state 79
    ArrayType                      shift and go to state 80
    StructType                     shift and go to state 81
    FunctionType                   shift and go to state 82

state 42

    (44) IdentifierList -> IDENT . IdentifierBotList
    (45) IdentifierBotList -> . empty
    (46) IdentifierBotList -> . IdentifierBotList COMMA IDENT
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    LPAREN          reduce using rule 214 (empty -> .)
    IDENT           reduce using rule 214 (empty -> .)
    LBRACK          reduce using rule 214 (empty -> .)
    STRUCT          reduce using rule 214 (empty -> .)
    FUNC            reduce using rule 214 (empty -> .)
    ASSIGN          reduce using rule 214 (empty -> .)
    SEMICOLON       reduce using rule 214 (empty -> .)
    ELLIPSIS        reduce using rule 214 (empty -> .)

    IdentifierBotList              shift and go to state 86
    empty                          shift and go to state 87

state 43

    (50) TypeDecl -> TYPE TypeSpecTopList .

    SEMICOLON       reduce using rule 50 (TypeDecl -> TYPE TypeSpecTopList .)


state 44

    (51) TypeSpecTopList -> TypeSpec .

    SEMICOLON       reduce using rule 51 (TypeSpecTopList -> TypeSpec .)


state 45

    (52) TypeSpecTopList -> LPAREN . TypeSpecList RPAREN
    (53) TypeSpecList -> . empty
    (54) TypeSpecList -> . TypeSpecList TypeSpec SEMICOLON
    (214) empty -> .

    RPAREN          reduce using rule 214 (empty -> .)
    IDENT           reduce using rule 214 (empty -> .)

    TypeSpecList                   shift and go to state 88
    empty                          shift and go to state 89

state 46

    (55) TypeSpec -> AliasDecl .

    SEMICOLON       reduce using rule 55 (TypeSpec -> AliasDecl .)


state 47

    (56) TypeSpec -> TypeDef .

    SEMICOLON       reduce using rule 56 (TypeSpec -> TypeDef .)


state 48

    (57) AliasDecl -> IDENT . ASSIGN Type
    (58) TypeDef -> IDENT . Type
    (59) Type -> . TypeName
    (60) Type -> . TypeLit
    (61) Type -> . LPAREN Type RPAREN
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (65) TypeLit -> . ArrayType
    (66) TypeLit -> . StructType
    (67) TypeLit -> . FunctionType
    (64) QualifiedIdent -> . IDENT PERIOD IDENT
    (68) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (71) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (83) FunctionType -> . FUNC Signature

    ASSIGN          shift and go to state 90
    LPAREN          shift and go to state 77
    IDENT           shift and go to state 78
    LBRACK          shift and go to state 83
    STRUCT          shift and go to state 84
    FUNC            shift and go to state 85

    Type                           shift and go to state 91
    TypeName                       shift and go to state 75
    TypeLit                        shift and go to state 76
    QualifiedIdent                 shift and go to state 79
    ArrayType                      shift and go to state 80
    StructType                     shift and go to state 81
    FunctionType                   shift and go to state 82

state 49

    (102) VarDecl -> VAR VarSpecTopList .

    SEMICOLON       reduce using rule 102 (VarDecl -> VAR VarSpecTopList .)


state 50

    (103) VarSpecTopList -> VarSpec .

    SEMICOLON       reduce using rule 103 (VarSpecTopList -> VarSpec .)


state 51

    (104) VarSpecTopList -> LPAREN . VarSpecList RPAREN
    (105) VarSpecList -> . empty
    (106) VarSpecList -> . VarSpecList VarSpec SEMICOLON
    (214) empty -> .

    RPAREN          reduce using rule 214 (empty -> .)
    IDENT           reduce using rule 214 (empty -> .)

    VarSpecList                    shift and go to state 92
    empty                          shift and go to state 93

state 52

    (107) VarSpec -> IdentifierList . VarSpecTail
    (108) VarSpecTail -> . Type VarSpecMid
    (109) VarSpecTail -> . ASSIGN ExpressionList
    (59) Type -> . TypeName
    (60) Type -> . TypeLit
    (61) Type -> . LPAREN Type RPAREN
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (65) TypeLit -> . ArrayType
    (66) TypeLit -> . StructType
    (67) TypeLit -> . FunctionType
    (64) QualifiedIdent -> . IDENT PERIOD IDENT
    (68) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (71) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (83) FunctionType -> . FUNC Signature

    ASSIGN          shift and go to state 96
    LPAREN          shift and go to state 77
    IDENT           shift and go to state 78
    LBRACK          shift and go to state 83
    STRUCT          shift and go to state 84
    FUNC            shift and go to state 85

    VarSpecTail                    shift and go to state 94
    Type                           shift and go to state 95
    TypeName                       shift and go to state 75
    TypeLit                        shift and go to state 76
    QualifiedIdent                 shift and go to state 79
    ArrayType                      shift and go to state 80
    StructType                     shift and go to state 81
    FunctionType                   shift and go to state 82

state 53

    (13) ImportSpecTopList -> LPAREN ImportSpecList . RPAREN
    (15) ImportSpecList -> ImportSpecList . ImportSpec SEMICOLON
    (16) ImportSpec -> . ImportSpecInit ImportPath
    (17) ImportSpecInit -> . empty
    (18) ImportSpecInit -> . PERIOD
    (19) ImportSpecInit -> . IDENT
    (214) empty -> .

    RPAREN          shift and go to state 97
    PERIOD          shift and go to state 30
    IDENT           shift and go to state 31
    STRING          reduce using rule 214 (empty -> .)

    ImportSpec                     shift and go to state 98
    ImportSpecInit                 shift and go to state 28
    empty                          shift and go to state 29

state 54

    (14) ImportSpecList -> empty .

    RPAREN          reduce using rule 14 (ImportSpecList -> empty .)
    PERIOD          reduce using rule 14 (ImportSpecList -> empty .)
    IDENT           reduce using rule 14 (ImportSpecList -> empty .)
    STRING          reduce using rule 14 (ImportSpecList -> empty .)


state 55

    (16) ImportSpec -> ImportSpecInit ImportPath .

    SEMICOLON       reduce using rule 16 (ImportSpec -> ImportSpecInit ImportPath .)


state 56

    (20) ImportPath -> STRING .

    SEMICOLON       reduce using rule 20 (ImportPath -> STRING .)


state 57

    (112) FunctionDecl -> FUNC FunctionName FunctionDeclTail .

    SEMICOLON       reduce using rule 112 (FunctionDecl -> FUNC FunctionName FunctionDeclTail .)


state 58

    (113) FunctionDeclTail -> Function .

    SEMICOLON       reduce using rule 113 (FunctionDeclTail -> Function .)


state 59

    (114) FunctionDeclTail -> Signature .
    (116) Function -> Signature . FunctionBody
    (117) FunctionBody -> . Block
    (21) Block -> . LBRACE StatementList RBRACE

    SEMICOLON       reduce using rule 114 (FunctionDeclTail -> Signature .)
    LBRACE          shift and go to state 101

    FunctionBody                   shift and go to state 99
    Block                          shift and go to state 100

state 60

    (84) Signature -> Parameters . ResultTop
    (85) ResultTop -> . empty
    (86) ResultTop -> . Result
    (214) empty -> .
    (87) Result -> . Parameters
    (88) Result -> . Type
    (89) Parameters -> . LPAREN ParameterListTop RPAREN
    (59) Type -> . TypeName
    (60) Type -> . TypeLit
    (61) Type -> . LPAREN Type RPAREN
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (65) TypeLit -> . ArrayType
    (66) TypeLit -> . StructType
    (67) TypeLit -> . FunctionType
    (64) QualifiedIdent -> . IDENT PERIOD IDENT
    (68) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (71) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (83) FunctionType -> . FUNC Signature

    LBRACE          reduce using rule 214 (empty -> .)
    SEMICOLON       reduce using rule 214 (empty -> .)
    ASSIGN          reduce using rule 214 (empty -> .)
    RPAREN          reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    ELLIPSIS        reduce using rule 214 (empty -> .)
    STRING          reduce using rule 214 (empty -> .)
    LPAREN          shift and go to state 107
    IDENT           shift and go to state 78
    LBRACK          shift and go to state 83
    STRUCT          shift and go to state 84
    FUNC            shift and go to state 85

    Parameters                     shift and go to state 102
    ResultTop                      shift and go to state 103
    empty                          shift and go to state 104
    Result                         shift and go to state 105
    Type                           shift and go to state 106
    TypeName                       shift and go to state 75
    TypeLit                        shift and go to state 76
    QualifiedIdent                 shift and go to state 79
    ArrayType                      shift and go to state 80
    StructType                     shift and go to state 81
    FunctionType                   shift and go to state 82

state 61

    (118) MethodDecl -> FUNC Receiver MethodName . FunctionDeclTail
    (113) FunctionDeclTail -> . Function
    (114) FunctionDeclTail -> . Signature
    (116) Function -> . Signature FunctionBody
    (84) Signature -> . Parameters ResultTop
    (89) Parameters -> . LPAREN ParameterListTop RPAREN

    LPAREN          shift and go to state 37

    FunctionDeclTail               shift and go to state 108
    Function                       shift and go to state 58
    Signature                      shift and go to state 59
    Parameters                     shift and go to state 60

state 62

    (202) MethodName -> IDENT .

    LPAREN          reduce using rule 202 (MethodName -> IDENT .)
    PERIOD          reduce using rule 202 (MethodName -> IDENT .)
    LBRACK          reduce using rule 202 (MethodName -> IDENT .)
    LOR             reduce using rule 202 (MethodName -> IDENT .)
    LAND            reduce using rule 202 (MethodName -> IDENT .)
    EQL             reduce using rule 202 (MethodName -> IDENT .)
    NEQ             reduce using rule 202 (MethodName -> IDENT .)
    LSS             reduce using rule 202 (MethodName -> IDENT .)
    LEQ             reduce using rule 202 (MethodName -> IDENT .)
    GTR             reduce using rule 202 (MethodName -> IDENT .)
    GEQ             reduce using rule 202 (MethodName -> IDENT .)
    ADD             reduce using rule 202 (MethodName -> IDENT .)
    SUB             reduce using rule 202 (MethodName -> IDENT .)
    OR              reduce using rule 202 (MethodName -> IDENT .)
    XOR             reduce using rule 202 (MethodName -> IDENT .)
    MUL             reduce using rule 202 (MethodName -> IDENT .)
    QUO             reduce using rule 202 (MethodName -> IDENT .)
    REM             reduce using rule 202 (MethodName -> IDENT .)
    SHL             reduce using rule 202 (MethodName -> IDENT .)
    SHR             reduce using rule 202 (MethodName -> IDENT .)
    AND             reduce using rule 202 (MethodName -> IDENT .)
    AND_NOT         reduce using rule 202 (MethodName -> IDENT .)
    RBRACK          reduce using rule 202 (MethodName -> IDENT .)
    COMMA           reduce using rule 202 (MethodName -> IDENT .)
    SEMICOLON       reduce using rule 202 (MethodName -> IDENT .)
    RPAREN          reduce using rule 202 (MethodName -> IDENT .)
    ASSIGN          reduce using rule 202 (MethodName -> IDENT .)
    ELLIPSIS        reduce using rule 202 (MethodName -> IDENT .)
    LBRACE          reduce using rule 202 (MethodName -> IDENT .)
    COLON           reduce using rule 202 (MethodName -> IDENT .)


state 63

    (89) Parameters -> LPAREN ParameterListTop . RPAREN

    RPAREN          shift and go to state 109


state 64

    (90) ParameterListTop -> empty .
    (100) ParameterDeclHead -> empty .

    RPAREN          reduce using rule 90 (ParameterListTop -> empty .)
    ELLIPSIS        reduce using rule 100 (ParameterDeclHead -> empty .)
    LPAREN          reduce using rule 100 (ParameterDeclHead -> empty .)
    IDENT           reduce using rule 100 (ParameterDeclHead -> empty .)
    LBRACK          reduce using rule 100 (ParameterDeclHead -> empty .)
    STRUCT          reduce using rule 100 (ParameterDeclHead -> empty .)
    FUNC            reduce using rule 100 (ParameterDeclHead -> empty .)


state 65

    (91) ParameterListTop -> ParameterList . commaTop
    (92) commaTop -> . empty
    (93) commaTop -> . COMMA
    (214) empty -> .

    COMMA           shift and go to state 112
    RPAREN          reduce using rule 214 (empty -> .)

    commaTop                       shift and go to state 110
    empty                          shift and go to state 111

state 66

    (94) ParameterList -> ParameterDecl . ParameterDeclList
    (95) ParameterDeclList -> . empty
    (96) ParameterDeclList -> . ParameterDeclList COMMA ParameterDecl
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    RPAREN          reduce using rule 214 (empty -> .)

    ParameterDeclList              shift and go to state 113
    empty                          shift and go to state 114

state 67

    (97) ParameterDecl -> ParameterDeclHead . tripledotTop Type
    (98) tripledotTop -> . empty
    (99) tripledotTop -> . ELLIPSIS
    (214) empty -> .

    ELLIPSIS        shift and go to state 117
    LPAREN          reduce using rule 214 (empty -> .)
    IDENT           reduce using rule 214 (empty -> .)
    LBRACK          reduce using rule 214 (empty -> .)
    STRUCT          reduce using rule 214 (empty -> .)
    FUNC            reduce using rule 214 (empty -> .)

    tripledotTop                   shift and go to state 115
    empty                          shift and go to state 116

state 68

    (101) ParameterDeclHead -> IdentifierList .

    ELLIPSIS        reduce using rule 101 (ParameterDeclHead -> IdentifierList .)
    LPAREN          reduce using rule 101 (ParameterDeclHead -> IdentifierList .)
    IDENT           reduce using rule 101 (ParameterDeclHead -> IdentifierList .)
    LBRACK          reduce using rule 101 (ParameterDeclHead -> IdentifierList .)
    STRUCT          reduce using rule 101 (ParameterDeclHead -> IdentifierList .)
    FUNC            reduce using rule 101 (ParameterDeclHead -> IdentifierList .)


state 69

    (36) ConstSpecTopList -> LPAREN ConstSpecList . RPAREN
    (38) ConstSpecList -> ConstSpecList . ConstSpec SEMICOLON
    (39) ConstSpec -> . IdentifierList ConstSpecTail
    (44) IdentifierList -> . IDENT IdentifierBotList

    RPAREN          shift and go to state 118
    IDENT           shift and go to state 42

    ConstSpec                      shift and go to state 119
    IdentifierList                 shift and go to state 41

state 70

    (37) ConstSpecList -> empty .

    RPAREN          reduce using rule 37 (ConstSpecList -> empty .)
    IDENT           reduce using rule 37 (ConstSpecList -> empty .)


state 71

    (39) ConstSpec -> IdentifierList ConstSpecTail .

    SEMICOLON       reduce using rule 39 (ConstSpec -> IdentifierList ConstSpecTail .)


state 72

    (40) ConstSpecTail -> empty .
    (42) TypeTop -> empty .

    SEMICOLON       reduce using rule 40 (ConstSpecTail -> empty .)
    ASSIGN          reduce using rule 42 (TypeTop -> empty .)


state 73

    (41) ConstSpecTail -> TypeTop . ASSIGN ExpressionList

    ASSIGN          shift and go to state 120


state 74

    (43) TypeTop -> Type .

    ASSIGN          reduce using rule 43 (TypeTop -> Type .)


state 75

    (59) Type -> TypeName .

    ASSIGN          reduce using rule 59 (Type -> TypeName .)
    SEMICOLON       reduce using rule 59 (Type -> TypeName .)
    LBRACE          reduce using rule 59 (Type -> TypeName .)
    RPAREN          reduce using rule 59 (Type -> TypeName .)
    COMMA           reduce using rule 59 (Type -> TypeName .)
    ELLIPSIS        reduce using rule 59 (Type -> TypeName .)
    STRING          reduce using rule 59 (Type -> TypeName .)


state 76

    (60) Type -> TypeLit .

    ASSIGN          reduce using rule 60 (Type -> TypeLit .)
    SEMICOLON       reduce using rule 60 (Type -> TypeLit .)
    LBRACE          reduce using rule 60 (Type -> TypeLit .)
    RPAREN          reduce using rule 60 (Type -> TypeLit .)
    COMMA           reduce using rule 60 (Type -> TypeLit .)
    ELLIPSIS        reduce using rule 60 (Type -> TypeLit .)
    STRING          reduce using rule 60 (Type -> TypeLit .)


state 77

    (61) Type -> LPAREN . Type RPAREN
    (59) Type -> . TypeName
    (60) Type -> . TypeLit
    (61) Type -> . LPAREN Type RPAREN
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (65) TypeLit -> . ArrayType
    (66) TypeLit -> . StructType
    (67) TypeLit -> . FunctionType
    (64) QualifiedIdent -> . IDENT PERIOD IDENT
    (68) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (71) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (83) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 77
    IDENT           shift and go to state 78
    LBRACK          shift and go to state 83
    STRUCT          shift and go to state 84
    FUNC            shift and go to state 85

    Type                           shift and go to state 121
    TypeName                       shift and go to state 75
    TypeLit                        shift and go to state 76
    QualifiedIdent                 shift and go to state 79
    ArrayType                      shift and go to state 80
    StructType                     shift and go to state 81
    FunctionType                   shift and go to state 82

state 78

    (62) TypeName -> IDENT .
    (64) QualifiedIdent -> IDENT . PERIOD IDENT

    ASSIGN          reduce using rule 62 (TypeName -> IDENT .)
    SEMICOLON       reduce using rule 62 (TypeName -> IDENT .)
    LBRACE          reduce using rule 62 (TypeName -> IDENT .)
    RPAREN          reduce using rule 62 (TypeName -> IDENT .)
    COMMA           reduce using rule 62 (TypeName -> IDENT .)
    ELLIPSIS        reduce using rule 62 (TypeName -> IDENT .)
    STRING          reduce using rule 62 (TypeName -> IDENT .)
    PERIOD          shift and go to state 122


state 79

    (63) TypeName -> QualifiedIdent .

    ASSIGN          reduce using rule 63 (TypeName -> QualifiedIdent .)
    SEMICOLON       reduce using rule 63 (TypeName -> QualifiedIdent .)
    LBRACE          reduce using rule 63 (TypeName -> QualifiedIdent .)
    RPAREN          reduce using rule 63 (TypeName -> QualifiedIdent .)
    COMMA           reduce using rule 63 (TypeName -> QualifiedIdent .)
    ELLIPSIS        reduce using rule 63 (TypeName -> QualifiedIdent .)
    STRING          reduce using rule 63 (TypeName -> QualifiedIdent .)
    PERIOD          reduce using rule 63 (TypeName -> QualifiedIdent .)


state 80

    (65) TypeLit -> ArrayType .

    ASSIGN          reduce using rule 65 (TypeLit -> ArrayType .)
    SEMICOLON       reduce using rule 65 (TypeLit -> ArrayType .)
    LBRACE          reduce using rule 65 (TypeLit -> ArrayType .)
    RPAREN          reduce using rule 65 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 65 (TypeLit -> ArrayType .)
    ELLIPSIS        reduce using rule 65 (TypeLit -> ArrayType .)
    STRING          reduce using rule 65 (TypeLit -> ArrayType .)


state 81

    (66) TypeLit -> StructType .

    ASSIGN          reduce using rule 66 (TypeLit -> StructType .)
    SEMICOLON       reduce using rule 66 (TypeLit -> StructType .)
    LBRACE          reduce using rule 66 (TypeLit -> StructType .)
    RPAREN          reduce using rule 66 (TypeLit -> StructType .)
    COMMA           reduce using rule 66 (TypeLit -> StructType .)
    ELLIPSIS        reduce using rule 66 (TypeLit -> StructType .)
    STRING          reduce using rule 66 (TypeLit -> StructType .)


state 82

    (67) TypeLit -> FunctionType .

    ASSIGN          reduce using rule 67 (TypeLit -> FunctionType .)
    SEMICOLON       reduce using rule 67 (TypeLit -> FunctionType .)
    LBRACE          reduce using rule 67 (TypeLit -> FunctionType .)
    RPAREN          reduce using rule 67 (TypeLit -> FunctionType .)
    COMMA           reduce using rule 67 (TypeLit -> FunctionType .)
    ELLIPSIS        reduce using rule 67 (TypeLit -> FunctionType .)
    STRING          reduce using rule 67 (TypeLit -> FunctionType .)


state 83

    (68) ArrayType -> LBRACK . ArrayLength RBRACK ElementType
    (69) ArrayLength -> . Expression
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    LPAREN          shift and go to state 139
    IDENT           shift and go to state 142
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    ArrayLength                    shift and go to state 123
    Expression                     shift and go to state 124
    UnaryExpr                      shift and go to state 125
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146
    TypeName                       shift and go to state 148
    QualifiedIdent                 shift and go to state 79

state 84

    (71) StructType -> STRUCT . LBRACE FieldDeclList RBRACE

    LBRACE          shift and go to state 152


state 85

    (83) FunctionType -> FUNC . Signature
    (84) Signature -> . Parameters ResultTop
    (89) Parameters -> . LPAREN ParameterListTop RPAREN

    LPAREN          shift and go to state 37

    Signature                      shift and go to state 153
    Parameters                     shift and go to state 60

state 86

    (44) IdentifierList -> IDENT IdentifierBotList .
    (46) IdentifierBotList -> IdentifierBotList . COMMA IDENT

    LPAREN          reduce using rule 44 (IdentifierList -> IDENT IdentifierBotList .)
    IDENT           reduce using rule 44 (IdentifierList -> IDENT IdentifierBotList .)
    LBRACK          reduce using rule 44 (IdentifierList -> IDENT IdentifierBotList .)
    STRUCT          reduce using rule 44 (IdentifierList -> IDENT IdentifierBotList .)
    FUNC            reduce using rule 44 (IdentifierList -> IDENT IdentifierBotList .)
    ASSIGN          reduce using rule 44 (IdentifierList -> IDENT IdentifierBotList .)
    SEMICOLON       reduce using rule 44 (IdentifierList -> IDENT IdentifierBotList .)
    ELLIPSIS        reduce using rule 44 (IdentifierList -> IDENT IdentifierBotList .)
    DEFINE          reduce using rule 44 (IdentifierList -> IDENT IdentifierBotList .)
    COMMA           shift and go to state 154


state 87

    (45) IdentifierBotList -> empty .

    COMMA           reduce using rule 45 (IdentifierBotList -> empty .)
    LPAREN          reduce using rule 45 (IdentifierBotList -> empty .)
    IDENT           reduce using rule 45 (IdentifierBotList -> empty .)
    LBRACK          reduce using rule 45 (IdentifierBotList -> empty .)
    STRUCT          reduce using rule 45 (IdentifierBotList -> empty .)
    FUNC            reduce using rule 45 (IdentifierBotList -> empty .)
    ASSIGN          reduce using rule 45 (IdentifierBotList -> empty .)
    SEMICOLON       reduce using rule 45 (IdentifierBotList -> empty .)
    ELLIPSIS        reduce using rule 45 (IdentifierBotList -> empty .)
    DEFINE          reduce using rule 45 (IdentifierBotList -> empty .)


state 88

    (52) TypeSpecTopList -> LPAREN TypeSpecList . RPAREN
    (54) TypeSpecList -> TypeSpecList . TypeSpec SEMICOLON
    (55) TypeSpec -> . AliasDecl
    (56) TypeSpec -> . TypeDef
    (57) AliasDecl -> . IDENT ASSIGN Type
    (58) TypeDef -> . IDENT Type

    RPAREN          shift and go to state 155
    IDENT           shift and go to state 48

    TypeSpec                       shift and go to state 156
    AliasDecl                      shift and go to state 46
    TypeDef                        shift and go to state 47

state 89

    (53) TypeSpecList -> empty .

    RPAREN          reduce using rule 53 (TypeSpecList -> empty .)
    IDENT           reduce using rule 53 (TypeSpecList -> empty .)


state 90

    (57) AliasDecl -> IDENT ASSIGN . Type
    (59) Type -> . TypeName
    (60) Type -> . TypeLit
    (61) Type -> . LPAREN Type RPAREN
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (65) TypeLit -> . ArrayType
    (66) TypeLit -> . StructType
    (67) TypeLit -> . FunctionType
    (64) QualifiedIdent -> . IDENT PERIOD IDENT
    (68) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (71) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (83) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 77
    IDENT           shift and go to state 78
    LBRACK          shift and go to state 83
    STRUCT          shift and go to state 84
    FUNC            shift and go to state 85

    Type                           shift and go to state 157
    TypeName                       shift and go to state 75
    TypeLit                        shift and go to state 76
    QualifiedIdent                 shift and go to state 79
    ArrayType                      shift and go to state 80
    StructType                     shift and go to state 81
    FunctionType                   shift and go to state 82

state 91

    (58) TypeDef -> IDENT Type .

    SEMICOLON       reduce using rule 58 (TypeDef -> IDENT Type .)


state 92

    (104) VarSpecTopList -> LPAREN VarSpecList . RPAREN
    (106) VarSpecList -> VarSpecList . VarSpec SEMICOLON
    (107) VarSpec -> . IdentifierList VarSpecTail
    (44) IdentifierList -> . IDENT IdentifierBotList

    RPAREN          shift and go to state 158
    IDENT           shift and go to state 42

    VarSpec                        shift and go to state 159
    IdentifierList                 shift and go to state 52

state 93

    (105) VarSpecList -> empty .

    RPAREN          reduce using rule 105 (VarSpecList -> empty .)
    IDENT           reduce using rule 105 (VarSpecList -> empty .)


state 94

    (107) VarSpec -> IdentifierList VarSpecTail .

    SEMICOLON       reduce using rule 107 (VarSpec -> IdentifierList VarSpecTail .)


state 95

    (108) VarSpecTail -> Type . VarSpecMid
    (110) VarSpecMid -> . empty
    (111) VarSpecMid -> . ASSIGN ExpressionList
    (214) empty -> .

    ASSIGN          shift and go to state 162
    SEMICOLON       reduce using rule 214 (empty -> .)

    VarSpecMid                     shift and go to state 160
    empty                          shift and go to state 161

state 96

    (109) VarSpecTail -> ASSIGN . ExpressionList
    (47) ExpressionList -> . Expression ExpressionBotList
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    LPAREN          shift and go to state 139
    IDENT           shift and go to state 142
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    ExpressionList                 shift and go to state 163
    Expression                     shift and go to state 164
    UnaryExpr                      shift and go to state 125
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146
    TypeName                       shift and go to state 148
    QualifiedIdent                 shift and go to state 79

state 97

    (13) ImportSpecTopList -> LPAREN ImportSpecList RPAREN .

    SEMICOLON       reduce using rule 13 (ImportSpecTopList -> LPAREN ImportSpecList RPAREN .)


state 98

    (15) ImportSpecList -> ImportSpecList ImportSpec . SEMICOLON

    SEMICOLON       shift and go to state 165


state 99

    (116) Function -> Signature FunctionBody .

    SEMICOLON       reduce using rule 116 (Function -> Signature FunctionBody .)
    PERIOD          reduce using rule 116 (Function -> Signature FunctionBody .)
    LBRACK          reduce using rule 116 (Function -> Signature FunctionBody .)
    LPAREN          reduce using rule 116 (Function -> Signature FunctionBody .)
    LOR             reduce using rule 116 (Function -> Signature FunctionBody .)
    LAND            reduce using rule 116 (Function -> Signature FunctionBody .)
    EQL             reduce using rule 116 (Function -> Signature FunctionBody .)
    NEQ             reduce using rule 116 (Function -> Signature FunctionBody .)
    LSS             reduce using rule 116 (Function -> Signature FunctionBody .)
    LEQ             reduce using rule 116 (Function -> Signature FunctionBody .)
    GTR             reduce using rule 116 (Function -> Signature FunctionBody .)
    GEQ             reduce using rule 116 (Function -> Signature FunctionBody .)
    ADD             reduce using rule 116 (Function -> Signature FunctionBody .)
    SUB             reduce using rule 116 (Function -> Signature FunctionBody .)
    OR              reduce using rule 116 (Function -> Signature FunctionBody .)
    XOR             reduce using rule 116 (Function -> Signature FunctionBody .)
    MUL             reduce using rule 116 (Function -> Signature FunctionBody .)
    QUO             reduce using rule 116 (Function -> Signature FunctionBody .)
    REM             reduce using rule 116 (Function -> Signature FunctionBody .)
    SHL             reduce using rule 116 (Function -> Signature FunctionBody .)
    SHR             reduce using rule 116 (Function -> Signature FunctionBody .)
    AND             reduce using rule 116 (Function -> Signature FunctionBody .)
    AND_NOT         reduce using rule 116 (Function -> Signature FunctionBody .)
    RBRACK          reduce using rule 116 (Function -> Signature FunctionBody .)
    COMMA           reduce using rule 116 (Function -> Signature FunctionBody .)
    RPAREN          reduce using rule 116 (Function -> Signature FunctionBody .)
    ASSIGN          reduce using rule 116 (Function -> Signature FunctionBody .)
    ELLIPSIS        reduce using rule 116 (Function -> Signature FunctionBody .)
    LBRACE          reduce using rule 116 (Function -> Signature FunctionBody .)
    COLON           reduce using rule 116 (Function -> Signature FunctionBody .)


state 100

    (117) FunctionBody -> Block .

    SEMICOLON       reduce using rule 117 (FunctionBody -> Block .)
    PERIOD          reduce using rule 117 (FunctionBody -> Block .)
    LBRACK          reduce using rule 117 (FunctionBody -> Block .)
    LPAREN          reduce using rule 117 (FunctionBody -> Block .)
    LOR             reduce using rule 117 (FunctionBody -> Block .)
    LAND            reduce using rule 117 (FunctionBody -> Block .)
    EQL             reduce using rule 117 (FunctionBody -> Block .)
    NEQ             reduce using rule 117 (FunctionBody -> Block .)
    LSS             reduce using rule 117 (FunctionBody -> Block .)
    LEQ             reduce using rule 117 (FunctionBody -> Block .)
    GTR             reduce using rule 117 (FunctionBody -> Block .)
    GEQ             reduce using rule 117 (FunctionBody -> Block .)
    ADD             reduce using rule 117 (FunctionBody -> Block .)
    SUB             reduce using rule 117 (FunctionBody -> Block .)
    OR              reduce using rule 117 (FunctionBody -> Block .)
    XOR             reduce using rule 117 (FunctionBody -> Block .)
    MUL             reduce using rule 117 (FunctionBody -> Block .)
    QUO             reduce using rule 117 (FunctionBody -> Block .)
    REM             reduce using rule 117 (FunctionBody -> Block .)
    SHL             reduce using rule 117 (FunctionBody -> Block .)
    SHR             reduce using rule 117 (FunctionBody -> Block .)
    AND             reduce using rule 117 (FunctionBody -> Block .)
    AND_NOT         reduce using rule 117 (FunctionBody -> Block .)
    RBRACK          reduce using rule 117 (FunctionBody -> Block .)
    COMMA           reduce using rule 117 (FunctionBody -> Block .)
    RPAREN          reduce using rule 117 (FunctionBody -> Block .)
    ASSIGN          reduce using rule 117 (FunctionBody -> Block .)
    ELLIPSIS        reduce using rule 117 (FunctionBody -> Block .)
    LBRACE          reduce using rule 117 (FunctionBody -> Block .)
    COLON           reduce using rule 117 (FunctionBody -> Block .)


state 101

    (21) Block -> LBRACE . StatementList RBRACE
    (22) StatementList -> . empty
    (23) StatementList -> . StatementList Statement SEMICOLON
    (214) empty -> .

    RBRACE          reduce using rule 214 (empty -> .)
    RETURN          reduce using rule 214 (empty -> .)
    LBRACE          reduce using rule 214 (empty -> .)
    IF              reduce using rule 214 (empty -> .)
    FOR             reduce using rule 214 (empty -> .)
    CONST           reduce using rule 214 (empty -> .)
    TYPE            reduce using rule 214 (empty -> .)
    VAR             reduce using rule 214 (empty -> .)
    SWITCH          reduce using rule 214 (empty -> .)
    IDENT           reduce using rule 214 (empty -> .)
    +               reduce using rule 214 (empty -> .)
    -               reduce using rule 214 (empty -> .)
    !               reduce using rule 214 (empty -> .)
    ^               reduce using rule 214 (empty -> .)
    *               reduce using rule 214 (empty -> .)
    &               reduce using rule 214 (empty -> .)
    CHAN            reduce using rule 214 (empty -> .)
    LPAREN          reduce using rule 214 (empty -> .)
    FUNC            reduce using rule 214 (empty -> .)
    INT             reduce using rule 214 (empty -> .)
    FLOAT           reduce using rule 214 (empty -> .)
    STRING          reduce using rule 214 (empty -> .)

    StatementList                  shift and go to state 166
    empty                          shift and go to state 167

state 102

    (87) Result -> Parameters .

    LBRACE          reduce using rule 87 (Result -> Parameters .)
    SEMICOLON       reduce using rule 87 (Result -> Parameters .)
    ASSIGN          reduce using rule 87 (Result -> Parameters .)
    RPAREN          reduce using rule 87 (Result -> Parameters .)
    COMMA           reduce using rule 87 (Result -> Parameters .)
    ELLIPSIS        reduce using rule 87 (Result -> Parameters .)
    STRING          reduce using rule 87 (Result -> Parameters .)


state 103

    (84) Signature -> Parameters ResultTop .

    LBRACE          reduce using rule 84 (Signature -> Parameters ResultTop .)
    SEMICOLON       reduce using rule 84 (Signature -> Parameters ResultTop .)
    ASSIGN          reduce using rule 84 (Signature -> Parameters ResultTop .)
    RPAREN          reduce using rule 84 (Signature -> Parameters ResultTop .)
    COMMA           reduce using rule 84 (Signature -> Parameters ResultTop .)
    ELLIPSIS        reduce using rule 84 (Signature -> Parameters ResultTop .)
    STRING          reduce using rule 84 (Signature -> Parameters ResultTop .)


state 104

    (85) ResultTop -> empty .

    LBRACE          reduce using rule 85 (ResultTop -> empty .)
    SEMICOLON       reduce using rule 85 (ResultTop -> empty .)
    ASSIGN          reduce using rule 85 (ResultTop -> empty .)
    RPAREN          reduce using rule 85 (ResultTop -> empty .)
    COMMA           reduce using rule 85 (ResultTop -> empty .)
    ELLIPSIS        reduce using rule 85 (ResultTop -> empty .)
    STRING          reduce using rule 85 (ResultTop -> empty .)


state 105

    (86) ResultTop -> Result .

    LBRACE          reduce using rule 86 (ResultTop -> Result .)
    SEMICOLON       reduce using rule 86 (ResultTop -> Result .)
    ASSIGN          reduce using rule 86 (ResultTop -> Result .)
    RPAREN          reduce using rule 86 (ResultTop -> Result .)
    COMMA           reduce using rule 86 (ResultTop -> Result .)
    ELLIPSIS        reduce using rule 86 (ResultTop -> Result .)
    STRING          reduce using rule 86 (ResultTop -> Result .)


state 106

    (88) Result -> Type .

    LBRACE          reduce using rule 88 (Result -> Type .)
    SEMICOLON       reduce using rule 88 (Result -> Type .)
    ASSIGN          reduce using rule 88 (Result -> Type .)
    RPAREN          reduce using rule 88 (Result -> Type .)
    COMMA           reduce using rule 88 (Result -> Type .)
    ELLIPSIS        reduce using rule 88 (Result -> Type .)
    STRING          reduce using rule 88 (Result -> Type .)


state 107

    (89) Parameters -> LPAREN . ParameterListTop RPAREN
    (61) Type -> LPAREN . Type RPAREN
    (90) ParameterListTop -> . empty
    (91) ParameterListTop -> . ParameterList commaTop
    (59) Type -> . TypeName
    (60) Type -> . TypeLit
    (61) Type -> . LPAREN Type RPAREN
    (214) empty -> .
    (94) ParameterList -> . ParameterDecl ParameterDeclList
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (65) TypeLit -> . ArrayType
    (66) TypeLit -> . StructType
    (67) TypeLit -> . FunctionType
    (97) ParameterDecl -> . ParameterDeclHead tripledotTop Type
    (64) QualifiedIdent -> . IDENT PERIOD IDENT
    (68) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (71) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (83) FunctionType -> . FUNC Signature
    (100) ParameterDeclHead -> . empty
    (101) ParameterDeclHead -> . IdentifierList
    (44) IdentifierList -> . IDENT IdentifierBotList

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LBRACK resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    LPAREN          shift and go to state 77
    RPAREN          reduce using rule 214 (empty -> .)
    ELLIPSIS        reduce using rule 214 (empty -> .)
    IDENT           shift and go to state 168
    LBRACK          shift and go to state 83
    STRUCT          shift and go to state 84
    FUNC            shift and go to state 85

  ! LPAREN          [ reduce using rule 214 (empty -> .) ]
  ! IDENT           [ reduce using rule 214 (empty -> .) ]
  ! LBRACK          [ reduce using rule 214 (empty -> .) ]
  ! STRUCT          [ reduce using rule 214 (empty -> .) ]
  ! FUNC            [ reduce using rule 214 (empty -> .) ]

    ParameterListTop               shift and go to state 63
    Type                           shift and go to state 121
    empty                          shift and go to state 64
    ParameterList                  shift and go to state 65
    TypeName                       shift and go to state 75
    TypeLit                        shift and go to state 76
    ParameterDecl                  shift and go to state 66
    QualifiedIdent                 shift and go to state 79
    ArrayType                      shift and go to state 80
    StructType                     shift and go to state 81
    FunctionType                   shift and go to state 82
    ParameterDeclHead              shift and go to state 67
    IdentifierList                 shift and go to state 68

state 108

    (118) MethodDecl -> FUNC Receiver MethodName FunctionDeclTail .

    SEMICOLON       reduce using rule 118 (MethodDecl -> FUNC Receiver MethodName FunctionDeclTail .)


state 109

    (89) Parameters -> LPAREN ParameterListTop RPAREN .

    IDENT           reduce using rule 89 (Parameters -> LPAREN ParameterListTop RPAREN .)
    LPAREN          reduce using rule 89 (Parameters -> LPAREN ParameterListTop RPAREN .)
    LBRACK          reduce using rule 89 (Parameters -> LPAREN ParameterListTop RPAREN .)
    STRUCT          reduce using rule 89 (Parameters -> LPAREN ParameterListTop RPAREN .)
    FUNC            reduce using rule 89 (Parameters -> LPAREN ParameterListTop RPAREN .)
    LBRACE          reduce using rule 89 (Parameters -> LPAREN ParameterListTop RPAREN .)
    SEMICOLON       reduce using rule 89 (Parameters -> LPAREN ParameterListTop RPAREN .)
    ASSIGN          reduce using rule 89 (Parameters -> LPAREN ParameterListTop RPAREN .)
    RPAREN          reduce using rule 89 (Parameters -> LPAREN ParameterListTop RPAREN .)
    COMMA           reduce using rule 89 (Parameters -> LPAREN ParameterListTop RPAREN .)
    ELLIPSIS        reduce using rule 89 (Parameters -> LPAREN ParameterListTop RPAREN .)
    STRING          reduce using rule 89 (Parameters -> LPAREN ParameterListTop RPAREN .)


state 110

    (91) ParameterListTop -> ParameterList commaTop .

    RPAREN          reduce using rule 91 (ParameterListTop -> ParameterList commaTop .)


state 111

    (92) commaTop -> empty .

    RPAREN          reduce using rule 92 (commaTop -> empty .)


state 112

    (93) commaTop -> COMMA .

    RPAREN          reduce using rule 93 (commaTop -> COMMA .)


state 113

    (94) ParameterList -> ParameterDecl ParameterDeclList .
    (96) ParameterDeclList -> ParameterDeclList . COMMA ParameterDecl

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 94 (ParameterList -> ParameterDecl ParameterDeclList .)
    COMMA           shift and go to state 169

  ! COMMA           [ reduce using rule 94 (ParameterList -> ParameterDecl ParameterDeclList .) ]


state 114

    (95) ParameterDeclList -> empty .

    COMMA           reduce using rule 95 (ParameterDeclList -> empty .)
    RPAREN          reduce using rule 95 (ParameterDeclList -> empty .)


state 115

    (97) ParameterDecl -> ParameterDeclHead tripledotTop . Type
    (59) Type -> . TypeName
    (60) Type -> . TypeLit
    (61) Type -> . LPAREN Type RPAREN
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (65) TypeLit -> . ArrayType
    (66) TypeLit -> . StructType
    (67) TypeLit -> . FunctionType
    (64) QualifiedIdent -> . IDENT PERIOD IDENT
    (68) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (71) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (83) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 77
    IDENT           shift and go to state 78
    LBRACK          shift and go to state 83
    STRUCT          shift and go to state 84
    FUNC            shift and go to state 85

    Type                           shift and go to state 170
    TypeName                       shift and go to state 75
    TypeLit                        shift and go to state 76
    QualifiedIdent                 shift and go to state 79
    ArrayType                      shift and go to state 80
    StructType                     shift and go to state 81
    FunctionType                   shift and go to state 82

state 116

    (98) tripledotTop -> empty .

    LPAREN          reduce using rule 98 (tripledotTop -> empty .)
    IDENT           reduce using rule 98 (tripledotTop -> empty .)
    LBRACK          reduce using rule 98 (tripledotTop -> empty .)
    STRUCT          reduce using rule 98 (tripledotTop -> empty .)
    FUNC            reduce using rule 98 (tripledotTop -> empty .)
    COMMA           reduce using rule 98 (tripledotTop -> empty .)
    RPAREN          reduce using rule 98 (tripledotTop -> empty .)


state 117

    (99) tripledotTop -> ELLIPSIS .

    LPAREN          reduce using rule 99 (tripledotTop -> ELLIPSIS .)
    IDENT           reduce using rule 99 (tripledotTop -> ELLIPSIS .)
    LBRACK          reduce using rule 99 (tripledotTop -> ELLIPSIS .)
    STRUCT          reduce using rule 99 (tripledotTop -> ELLIPSIS .)
    FUNC            reduce using rule 99 (tripledotTop -> ELLIPSIS .)
    COMMA           reduce using rule 99 (tripledotTop -> ELLIPSIS .)
    RPAREN          reduce using rule 99 (tripledotTop -> ELLIPSIS .)


state 118

    (36) ConstSpecTopList -> LPAREN ConstSpecList RPAREN .

    SEMICOLON       reduce using rule 36 (ConstSpecTopList -> LPAREN ConstSpecList RPAREN .)


state 119

    (38) ConstSpecList -> ConstSpecList ConstSpec . SEMICOLON

    SEMICOLON       shift and go to state 171


state 120

    (41) ConstSpecTail -> TypeTop ASSIGN . ExpressionList
    (47) ExpressionList -> . Expression ExpressionBotList
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    LPAREN          shift and go to state 139
    IDENT           shift and go to state 142
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    ExpressionList                 shift and go to state 172
    Expression                     shift and go to state 164
    UnaryExpr                      shift and go to state 125
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146
    TypeName                       shift and go to state 148
    QualifiedIdent                 shift and go to state 79

state 121

    (61) Type -> LPAREN Type . RPAREN

    RPAREN          shift and go to state 173


state 122

    (64) QualifiedIdent -> IDENT PERIOD . IDENT

    IDENT           shift and go to state 174


state 123

    (68) ArrayType -> LBRACK ArrayLength . RBRACK ElementType

    RBRACK          shift and go to state 175


state 124

    (69) ArrayLength -> Expression .
    (151) Expression -> Expression . binary_op Expression
    (154) binary_op -> . LOR
    (155) binary_op -> . LAND
    (156) binary_op -> . rel_op
    (157) binary_op -> . add_op
    (158) binary_op -> . mul_op
    (159) rel_op -> . EQL
    (160) rel_op -> . NEQ
    (161) rel_op -> . LSS
    (162) rel_op -> . LEQ
    (163) rel_op -> . GTR
    (164) rel_op -> . GEQ
    (165) add_op -> . ADD
    (166) add_op -> . SUB
    (167) add_op -> . OR
    (168) add_op -> . XOR
    (169) mul_op -> . MUL
    (170) mul_op -> . QUO
    (171) mul_op -> . REM
    (172) mul_op -> . SHL
    (173) mul_op -> . SHR
    (174) mul_op -> . AND
    (175) mul_op -> . AND_NOT

    RBRACK          reduce using rule 69 (ArrayLength -> Expression .)
    LOR             shift and go to state 177
    LAND            shift and go to state 178
    EQL             shift and go to state 182
    NEQ             shift and go to state 183
    LSS             shift and go to state 184
    LEQ             shift and go to state 185
    GTR             shift and go to state 186
    GEQ             shift and go to state 187
    ADD             shift and go to state 188
    SUB             shift and go to state 189
    OR              shift and go to state 190
    XOR             shift and go to state 191
    MUL             shift and go to state 192
    QUO             shift and go to state 193
    REM             shift and go to state 194
    SHL             shift and go to state 195
    SHR             shift and go to state 196
    AND             shift and go to state 197
    AND_NOT         shift and go to state 198

    binary_op                      shift and go to state 176
    rel_op                         shift and go to state 179
    add_op                         shift and go to state 180
    mul_op                         shift and go to state 181

state 125

    (150) Expression -> UnaryExpr .

    LOR             reduce using rule 150 (Expression -> UnaryExpr .)
    LAND            reduce using rule 150 (Expression -> UnaryExpr .)
    EQL             reduce using rule 150 (Expression -> UnaryExpr .)
    NEQ             reduce using rule 150 (Expression -> UnaryExpr .)
    LSS             reduce using rule 150 (Expression -> UnaryExpr .)
    LEQ             reduce using rule 150 (Expression -> UnaryExpr .)
    GTR             reduce using rule 150 (Expression -> UnaryExpr .)
    GEQ             reduce using rule 150 (Expression -> UnaryExpr .)
    ADD             reduce using rule 150 (Expression -> UnaryExpr .)
    SUB             reduce using rule 150 (Expression -> UnaryExpr .)
    OR              reduce using rule 150 (Expression -> UnaryExpr .)
    XOR             reduce using rule 150 (Expression -> UnaryExpr .)
    MUL             reduce using rule 150 (Expression -> UnaryExpr .)
    QUO             reduce using rule 150 (Expression -> UnaryExpr .)
    REM             reduce using rule 150 (Expression -> UnaryExpr .)
    SHL             reduce using rule 150 (Expression -> UnaryExpr .)
    SHR             reduce using rule 150 (Expression -> UnaryExpr .)
    AND             reduce using rule 150 (Expression -> UnaryExpr .)
    AND_NOT         reduce using rule 150 (Expression -> UnaryExpr .)
    RBRACK          reduce using rule 150 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 150 (Expression -> UnaryExpr .)
    SEMICOLON       reduce using rule 150 (Expression -> UnaryExpr .)
    RPAREN          reduce using rule 150 (Expression -> UnaryExpr .)
    ASSIGN          reduce using rule 150 (Expression -> UnaryExpr .)
    ELLIPSIS        reduce using rule 150 (Expression -> UnaryExpr .)
    LBRACE          reduce using rule 150 (Expression -> UnaryExpr .)
    COLON           reduce using rule 150 (Expression -> UnaryExpr .)


state 126

    (152) UnaryExpr -> PrimaryExpr .
    (184) PrimaryExpr -> PrimaryExpr . Selector
    (185) PrimaryExpr -> PrimaryExpr . Index
    (186) PrimaryExpr -> PrimaryExpr . Arguments
    (206) Selector -> . PERIOD IDENT
    (207) Index -> . LBRACK Expression RBRACK
    (208) Arguments -> . LPAREN ArgumentsHead RPAREN

    LOR             reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    LAND            reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    EQL             reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    NEQ             reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    LSS             reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    GTR             reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    ADD             reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    SUB             reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    XOR             reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    MUL             reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    QUO             reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    REM             reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    SHL             reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    SHR             reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    AND             reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    AND_NOT         reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    RBRACK          reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    SEMICOLON       reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    ASSIGN          reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    ELLIPSIS        reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 152 (UnaryExpr -> PrimaryExpr .)
    PERIOD          shift and go to state 202
    LBRACK          shift and go to state 203
    LPAREN          shift and go to state 204

    Selector                       shift and go to state 199
    Index                          shift and go to state 200
    Arguments                      shift and go to state 201

state 127

    (153) UnaryExpr -> unary_op . UnaryExpr
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    LPAREN          shift and go to state 139
    IDENT           shift and go to state 142
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    unary_op                       shift and go to state 127
    UnaryExpr                      shift and go to state 205
    PrimaryExpr                    shift and go to state 126
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146
    TypeName                       shift and go to state 148
    QualifiedIdent                 shift and go to state 79

state 128

    (183) PrimaryExpr -> Operand .

    PERIOD          reduce using rule 183 (PrimaryExpr -> Operand .)
    LBRACK          reduce using rule 183 (PrimaryExpr -> Operand .)
    LPAREN          reduce using rule 183 (PrimaryExpr -> Operand .)
    LOR             reduce using rule 183 (PrimaryExpr -> Operand .)
    LAND            reduce using rule 183 (PrimaryExpr -> Operand .)
    EQL             reduce using rule 183 (PrimaryExpr -> Operand .)
    NEQ             reduce using rule 183 (PrimaryExpr -> Operand .)
    LSS             reduce using rule 183 (PrimaryExpr -> Operand .)
    LEQ             reduce using rule 183 (PrimaryExpr -> Operand .)
    GTR             reduce using rule 183 (PrimaryExpr -> Operand .)
    GEQ             reduce using rule 183 (PrimaryExpr -> Operand .)
    ADD             reduce using rule 183 (PrimaryExpr -> Operand .)
    SUB             reduce using rule 183 (PrimaryExpr -> Operand .)
    OR              reduce using rule 183 (PrimaryExpr -> Operand .)
    XOR             reduce using rule 183 (PrimaryExpr -> Operand .)
    MUL             reduce using rule 183 (PrimaryExpr -> Operand .)
    QUO             reduce using rule 183 (PrimaryExpr -> Operand .)
    REM             reduce using rule 183 (PrimaryExpr -> Operand .)
    SHL             reduce using rule 183 (PrimaryExpr -> Operand .)
    SHR             reduce using rule 183 (PrimaryExpr -> Operand .)
    AND             reduce using rule 183 (PrimaryExpr -> Operand .)
    AND_NOT         reduce using rule 183 (PrimaryExpr -> Operand .)
    RBRACK          reduce using rule 183 (PrimaryExpr -> Operand .)
    COMMA           reduce using rule 183 (PrimaryExpr -> Operand .)
    SEMICOLON       reduce using rule 183 (PrimaryExpr -> Operand .)
    RPAREN          reduce using rule 183 (PrimaryExpr -> Operand .)
    ASSIGN          reduce using rule 183 (PrimaryExpr -> Operand .)
    ELLIPSIS        reduce using rule 183 (PrimaryExpr -> Operand .)
    LBRACE          reduce using rule 183 (PrimaryExpr -> Operand .)
    COLON           reduce using rule 183 (PrimaryExpr -> Operand .)


state 129

    (176) unary_op -> + .

    +               reduce using rule 176 (unary_op -> + .)
    -               reduce using rule 176 (unary_op -> + .)
    !               reduce using rule 176 (unary_op -> + .)
    ^               reduce using rule 176 (unary_op -> + .)
    *               reduce using rule 176 (unary_op -> + .)
    &               reduce using rule 176 (unary_op -> + .)
    CHAN            reduce using rule 176 (unary_op -> + .)
    LPAREN          reduce using rule 176 (unary_op -> + .)
    IDENT           reduce using rule 176 (unary_op -> + .)
    FUNC            reduce using rule 176 (unary_op -> + .)
    INT             reduce using rule 176 (unary_op -> + .)
    FLOAT           reduce using rule 176 (unary_op -> + .)
    STRING          reduce using rule 176 (unary_op -> + .)


state 130

    (177) unary_op -> - .

    +               reduce using rule 177 (unary_op -> - .)
    -               reduce using rule 177 (unary_op -> - .)
    !               reduce using rule 177 (unary_op -> - .)
    ^               reduce using rule 177 (unary_op -> - .)
    *               reduce using rule 177 (unary_op -> - .)
    &               reduce using rule 177 (unary_op -> - .)
    CHAN            reduce using rule 177 (unary_op -> - .)
    LPAREN          reduce using rule 177 (unary_op -> - .)
    IDENT           reduce using rule 177 (unary_op -> - .)
    FUNC            reduce using rule 177 (unary_op -> - .)
    INT             reduce using rule 177 (unary_op -> - .)
    FLOAT           reduce using rule 177 (unary_op -> - .)
    STRING          reduce using rule 177 (unary_op -> - .)


state 131

    (178) unary_op -> ! .

    +               reduce using rule 178 (unary_op -> ! .)
    -               reduce using rule 178 (unary_op -> ! .)
    !               reduce using rule 178 (unary_op -> ! .)
    ^               reduce using rule 178 (unary_op -> ! .)
    *               reduce using rule 178 (unary_op -> ! .)
    &               reduce using rule 178 (unary_op -> ! .)
    CHAN            reduce using rule 178 (unary_op -> ! .)
    LPAREN          reduce using rule 178 (unary_op -> ! .)
    IDENT           reduce using rule 178 (unary_op -> ! .)
    FUNC            reduce using rule 178 (unary_op -> ! .)
    INT             reduce using rule 178 (unary_op -> ! .)
    FLOAT           reduce using rule 178 (unary_op -> ! .)
    STRING          reduce using rule 178 (unary_op -> ! .)


state 132

    (179) unary_op -> ^ .

    +               reduce using rule 179 (unary_op -> ^ .)
    -               reduce using rule 179 (unary_op -> ^ .)
    !               reduce using rule 179 (unary_op -> ^ .)
    ^               reduce using rule 179 (unary_op -> ^ .)
    *               reduce using rule 179 (unary_op -> ^ .)
    &               reduce using rule 179 (unary_op -> ^ .)
    CHAN            reduce using rule 179 (unary_op -> ^ .)
    LPAREN          reduce using rule 179 (unary_op -> ^ .)
    IDENT           reduce using rule 179 (unary_op -> ^ .)
    FUNC            reduce using rule 179 (unary_op -> ^ .)
    INT             reduce using rule 179 (unary_op -> ^ .)
    FLOAT           reduce using rule 179 (unary_op -> ^ .)
    STRING          reduce using rule 179 (unary_op -> ^ .)


state 133

    (180) unary_op -> * .

    +               reduce using rule 180 (unary_op -> * .)
    -               reduce using rule 180 (unary_op -> * .)
    !               reduce using rule 180 (unary_op -> * .)
    ^               reduce using rule 180 (unary_op -> * .)
    *               reduce using rule 180 (unary_op -> * .)
    &               reduce using rule 180 (unary_op -> * .)
    CHAN            reduce using rule 180 (unary_op -> * .)
    LPAREN          reduce using rule 180 (unary_op -> * .)
    IDENT           reduce using rule 180 (unary_op -> * .)
    FUNC            reduce using rule 180 (unary_op -> * .)
    INT             reduce using rule 180 (unary_op -> * .)
    FLOAT           reduce using rule 180 (unary_op -> * .)
    STRING          reduce using rule 180 (unary_op -> * .)


state 134

    (181) unary_op -> & .

    +               reduce using rule 181 (unary_op -> & .)
    -               reduce using rule 181 (unary_op -> & .)
    !               reduce using rule 181 (unary_op -> & .)
    ^               reduce using rule 181 (unary_op -> & .)
    *               reduce using rule 181 (unary_op -> & .)
    &               reduce using rule 181 (unary_op -> & .)
    CHAN            reduce using rule 181 (unary_op -> & .)
    LPAREN          reduce using rule 181 (unary_op -> & .)
    IDENT           reduce using rule 181 (unary_op -> & .)
    FUNC            reduce using rule 181 (unary_op -> & .)
    INT             reduce using rule 181 (unary_op -> & .)
    FLOAT           reduce using rule 181 (unary_op -> & .)
    STRING          reduce using rule 181 (unary_op -> & .)


state 135

    (182) unary_op -> CHAN .

    +               reduce using rule 182 (unary_op -> CHAN .)
    -               reduce using rule 182 (unary_op -> CHAN .)
    !               reduce using rule 182 (unary_op -> CHAN .)
    ^               reduce using rule 182 (unary_op -> CHAN .)
    *               reduce using rule 182 (unary_op -> CHAN .)
    &               reduce using rule 182 (unary_op -> CHAN .)
    CHAN            reduce using rule 182 (unary_op -> CHAN .)
    LPAREN          reduce using rule 182 (unary_op -> CHAN .)
    IDENT           reduce using rule 182 (unary_op -> CHAN .)
    FUNC            reduce using rule 182 (unary_op -> CHAN .)
    INT             reduce using rule 182 (unary_op -> CHAN .)
    FLOAT           reduce using rule 182 (unary_op -> CHAN .)
    STRING          reduce using rule 182 (unary_op -> CHAN .)


state 136

    (187) Operand -> Literal .

    PERIOD          reduce using rule 187 (Operand -> Literal .)
    LBRACK          reduce using rule 187 (Operand -> Literal .)
    LPAREN          reduce using rule 187 (Operand -> Literal .)
    LOR             reduce using rule 187 (Operand -> Literal .)
    LAND            reduce using rule 187 (Operand -> Literal .)
    EQL             reduce using rule 187 (Operand -> Literal .)
    NEQ             reduce using rule 187 (Operand -> Literal .)
    LSS             reduce using rule 187 (Operand -> Literal .)
    LEQ             reduce using rule 187 (Operand -> Literal .)
    GTR             reduce using rule 187 (Operand -> Literal .)
    GEQ             reduce using rule 187 (Operand -> Literal .)
    ADD             reduce using rule 187 (Operand -> Literal .)
    SUB             reduce using rule 187 (Operand -> Literal .)
    OR              reduce using rule 187 (Operand -> Literal .)
    XOR             reduce using rule 187 (Operand -> Literal .)
    MUL             reduce using rule 187 (Operand -> Literal .)
    QUO             reduce using rule 187 (Operand -> Literal .)
    REM             reduce using rule 187 (Operand -> Literal .)
    SHL             reduce using rule 187 (Operand -> Literal .)
    SHR             reduce using rule 187 (Operand -> Literal .)
    AND             reduce using rule 187 (Operand -> Literal .)
    AND_NOT         reduce using rule 187 (Operand -> Literal .)
    RBRACK          reduce using rule 187 (Operand -> Literal .)
    COMMA           reduce using rule 187 (Operand -> Literal .)
    SEMICOLON       reduce using rule 187 (Operand -> Literal .)
    RPAREN          reduce using rule 187 (Operand -> Literal .)
    ASSIGN          reduce using rule 187 (Operand -> Literal .)
    ELLIPSIS        reduce using rule 187 (Operand -> Literal .)
    LBRACE          reduce using rule 187 (Operand -> Literal .)
    COLON           reduce using rule 187 (Operand -> Literal .)


state 137

    (188) Operand -> OperandName .

    PERIOD          reduce using rule 188 (Operand -> OperandName .)
    LBRACK          reduce using rule 188 (Operand -> OperandName .)
    LPAREN          reduce using rule 188 (Operand -> OperandName .)
    LOR             reduce using rule 188 (Operand -> OperandName .)
    LAND            reduce using rule 188 (Operand -> OperandName .)
    EQL             reduce using rule 188 (Operand -> OperandName .)
    NEQ             reduce using rule 188 (Operand -> OperandName .)
    LSS             reduce using rule 188 (Operand -> OperandName .)
    LEQ             reduce using rule 188 (Operand -> OperandName .)
    GTR             reduce using rule 188 (Operand -> OperandName .)
    GEQ             reduce using rule 188 (Operand -> OperandName .)
    ADD             reduce using rule 188 (Operand -> OperandName .)
    SUB             reduce using rule 188 (Operand -> OperandName .)
    OR              reduce using rule 188 (Operand -> OperandName .)
    XOR             reduce using rule 188 (Operand -> OperandName .)
    MUL             reduce using rule 188 (Operand -> OperandName .)
    QUO             reduce using rule 188 (Operand -> OperandName .)
    REM             reduce using rule 188 (Operand -> OperandName .)
    SHL             reduce using rule 188 (Operand -> OperandName .)
    SHR             reduce using rule 188 (Operand -> OperandName .)
    AND             reduce using rule 188 (Operand -> OperandName .)
    AND_NOT         reduce using rule 188 (Operand -> OperandName .)
    RBRACK          reduce using rule 188 (Operand -> OperandName .)
    COMMA           reduce using rule 188 (Operand -> OperandName .)
    SEMICOLON       reduce using rule 188 (Operand -> OperandName .)
    RPAREN          reduce using rule 188 (Operand -> OperandName .)
    ASSIGN          reduce using rule 188 (Operand -> OperandName .)
    ELLIPSIS        reduce using rule 188 (Operand -> OperandName .)
    LBRACE          reduce using rule 188 (Operand -> OperandName .)
    COLON           reduce using rule 188 (Operand -> OperandName .)


state 138

    (189) Operand -> MethodExpr .

    PERIOD          reduce using rule 189 (Operand -> MethodExpr .)
    LBRACK          reduce using rule 189 (Operand -> MethodExpr .)
    LPAREN          reduce using rule 189 (Operand -> MethodExpr .)
    LOR             reduce using rule 189 (Operand -> MethodExpr .)
    LAND            reduce using rule 189 (Operand -> MethodExpr .)
    EQL             reduce using rule 189 (Operand -> MethodExpr .)
    NEQ             reduce using rule 189 (Operand -> MethodExpr .)
    LSS             reduce using rule 189 (Operand -> MethodExpr .)
    LEQ             reduce using rule 189 (Operand -> MethodExpr .)
    GTR             reduce using rule 189 (Operand -> MethodExpr .)
    GEQ             reduce using rule 189 (Operand -> MethodExpr .)
    ADD             reduce using rule 189 (Operand -> MethodExpr .)
    SUB             reduce using rule 189 (Operand -> MethodExpr .)
    OR              reduce using rule 189 (Operand -> MethodExpr .)
    XOR             reduce using rule 189 (Operand -> MethodExpr .)
    MUL             reduce using rule 189 (Operand -> MethodExpr .)
    QUO             reduce using rule 189 (Operand -> MethodExpr .)
    REM             reduce using rule 189 (Operand -> MethodExpr .)
    SHL             reduce using rule 189 (Operand -> MethodExpr .)
    SHR             reduce using rule 189 (Operand -> MethodExpr .)
    AND             reduce using rule 189 (Operand -> MethodExpr .)
    AND_NOT         reduce using rule 189 (Operand -> MethodExpr .)
    RBRACK          reduce using rule 189 (Operand -> MethodExpr .)
    COMMA           reduce using rule 189 (Operand -> MethodExpr .)
    SEMICOLON       reduce using rule 189 (Operand -> MethodExpr .)
    RPAREN          reduce using rule 189 (Operand -> MethodExpr .)
    ASSIGN          reduce using rule 189 (Operand -> MethodExpr .)
    ELLIPSIS        reduce using rule 189 (Operand -> MethodExpr .)
    LBRACE          reduce using rule 189 (Operand -> MethodExpr .)
    COLON           reduce using rule 189 (Operand -> MethodExpr .)


state 139

    (190) Operand -> LPAREN . Expression RPAREN
    (204) ReceiverType -> LPAREN . MUL TypeName RPAREN
    (205) ReceiverType -> LPAREN . ReceiverType RPAREN
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (64) QualifiedIdent -> . IDENT PERIOD IDENT
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING

    MUL             shift and go to state 208
    LPAREN          shift and go to state 206
    IDENT           shift and go to state 210
    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    Expression                     shift and go to state 207
    TypeName                       shift and go to state 148
    ReceiverType                   shift and go to state 209
    UnaryExpr                      shift and go to state 125
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    QualifiedIdent                 shift and go to state 79
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146

state 140

    (191) Literal -> BasicLit .

    PERIOD          reduce using rule 191 (Literal -> BasicLit .)
    LBRACK          reduce using rule 191 (Literal -> BasicLit .)
    LPAREN          reduce using rule 191 (Literal -> BasicLit .)
    LOR             reduce using rule 191 (Literal -> BasicLit .)
    LAND            reduce using rule 191 (Literal -> BasicLit .)
    EQL             reduce using rule 191 (Literal -> BasicLit .)
    NEQ             reduce using rule 191 (Literal -> BasicLit .)
    LSS             reduce using rule 191 (Literal -> BasicLit .)
    LEQ             reduce using rule 191 (Literal -> BasicLit .)
    GTR             reduce using rule 191 (Literal -> BasicLit .)
    GEQ             reduce using rule 191 (Literal -> BasicLit .)
    ADD             reduce using rule 191 (Literal -> BasicLit .)
    SUB             reduce using rule 191 (Literal -> BasicLit .)
    OR              reduce using rule 191 (Literal -> BasicLit .)
    XOR             reduce using rule 191 (Literal -> BasicLit .)
    MUL             reduce using rule 191 (Literal -> BasicLit .)
    QUO             reduce using rule 191 (Literal -> BasicLit .)
    REM             reduce using rule 191 (Literal -> BasicLit .)
    SHL             reduce using rule 191 (Literal -> BasicLit .)
    SHR             reduce using rule 191 (Literal -> BasicLit .)
    AND             reduce using rule 191 (Literal -> BasicLit .)
    AND_NOT         reduce using rule 191 (Literal -> BasicLit .)
    RBRACK          reduce using rule 191 (Literal -> BasicLit .)
    COMMA           reduce using rule 191 (Literal -> BasicLit .)
    SEMICOLON       reduce using rule 191 (Literal -> BasicLit .)
    RPAREN          reduce using rule 191 (Literal -> BasicLit .)
    ASSIGN          reduce using rule 191 (Literal -> BasicLit .)
    ELLIPSIS        reduce using rule 191 (Literal -> BasicLit .)
    LBRACE          reduce using rule 191 (Literal -> BasicLit .)
    COLON           reduce using rule 191 (Literal -> BasicLit .)


state 141

    (192) Literal -> FunctionLit .

    PERIOD          reduce using rule 192 (Literal -> FunctionLit .)
    LBRACK          reduce using rule 192 (Literal -> FunctionLit .)
    LPAREN          reduce using rule 192 (Literal -> FunctionLit .)
    LOR             reduce using rule 192 (Literal -> FunctionLit .)
    LAND            reduce using rule 192 (Literal -> FunctionLit .)
    EQL             reduce using rule 192 (Literal -> FunctionLit .)
    NEQ             reduce using rule 192 (Literal -> FunctionLit .)
    LSS             reduce using rule 192 (Literal -> FunctionLit .)
    LEQ             reduce using rule 192 (Literal -> FunctionLit .)
    GTR             reduce using rule 192 (Literal -> FunctionLit .)
    GEQ             reduce using rule 192 (Literal -> FunctionLit .)
    ADD             reduce using rule 192 (Literal -> FunctionLit .)
    SUB             reduce using rule 192 (Literal -> FunctionLit .)
    OR              reduce using rule 192 (Literal -> FunctionLit .)
    XOR             reduce using rule 192 (Literal -> FunctionLit .)
    MUL             reduce using rule 192 (Literal -> FunctionLit .)
    QUO             reduce using rule 192 (Literal -> FunctionLit .)
    REM             reduce using rule 192 (Literal -> FunctionLit .)
    SHL             reduce using rule 192 (Literal -> FunctionLit .)
    SHR             reduce using rule 192 (Literal -> FunctionLit .)
    AND             reduce using rule 192 (Literal -> FunctionLit .)
    AND_NOT         reduce using rule 192 (Literal -> FunctionLit .)
    RBRACK          reduce using rule 192 (Literal -> FunctionLit .)
    COMMA           reduce using rule 192 (Literal -> FunctionLit .)
    SEMICOLON       reduce using rule 192 (Literal -> FunctionLit .)
    RPAREN          reduce using rule 192 (Literal -> FunctionLit .)
    ASSIGN          reduce using rule 192 (Literal -> FunctionLit .)
    ELLIPSIS        reduce using rule 192 (Literal -> FunctionLit .)
    LBRACE          reduce using rule 192 (Literal -> FunctionLit .)
    COLON           reduce using rule 192 (Literal -> FunctionLit .)


state 142

    (199) OperandName -> IDENT .
    (62) TypeName -> IDENT .
    (64) QualifiedIdent -> IDENT . PERIOD IDENT

  ! reduce/reduce conflict for PERIOD resolved using rule 62 (TypeName -> IDENT .)
  ! shift/reduce conflict for PERIOD resolved as shift
    LBRACK          reduce using rule 199 (OperandName -> IDENT .)
    LPAREN          reduce using rule 199 (OperandName -> IDENT .)
    LOR             reduce using rule 199 (OperandName -> IDENT .)
    LAND            reduce using rule 199 (OperandName -> IDENT .)
    EQL             reduce using rule 199 (OperandName -> IDENT .)
    NEQ             reduce using rule 199 (OperandName -> IDENT .)
    LSS             reduce using rule 199 (OperandName -> IDENT .)
    LEQ             reduce using rule 199 (OperandName -> IDENT .)
    GTR             reduce using rule 199 (OperandName -> IDENT .)
    GEQ             reduce using rule 199 (OperandName -> IDENT .)
    ADD             reduce using rule 199 (OperandName -> IDENT .)
    SUB             reduce using rule 199 (OperandName -> IDENT .)
    OR              reduce using rule 199 (OperandName -> IDENT .)
    XOR             reduce using rule 199 (OperandName -> IDENT .)
    MUL             reduce using rule 199 (OperandName -> IDENT .)
    QUO             reduce using rule 199 (OperandName -> IDENT .)
    REM             reduce using rule 199 (OperandName -> IDENT .)
    SHL             reduce using rule 199 (OperandName -> IDENT .)
    SHR             reduce using rule 199 (OperandName -> IDENT .)
    AND             reduce using rule 199 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 199 (OperandName -> IDENT .)
    RBRACK          reduce using rule 199 (OperandName -> IDENT .)
    COMMA           reduce using rule 199 (OperandName -> IDENT .)
    SEMICOLON       reduce using rule 199 (OperandName -> IDENT .)
    RPAREN          reduce using rule 199 (OperandName -> IDENT .)
    ASSIGN          reduce using rule 199 (OperandName -> IDENT .)
    ELLIPSIS        reduce using rule 199 (OperandName -> IDENT .)
    LBRACE          reduce using rule 199 (OperandName -> IDENT .)
    COLON           reduce using rule 199 (OperandName -> IDENT .)
    PERIOD          shift and go to state 122

  ! PERIOD          [ reduce using rule 199 (OperandName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 62 (TypeName -> IDENT .) ]


state 143

    (201) MethodExpr -> ReceiverType . PERIOD MethodName

    PERIOD          shift and go to state 211


state 144

    (193) BasicLit -> int_lit .

    PERIOD          reduce using rule 193 (BasicLit -> int_lit .)
    LBRACK          reduce using rule 193 (BasicLit -> int_lit .)
    LPAREN          reduce using rule 193 (BasicLit -> int_lit .)
    LOR             reduce using rule 193 (BasicLit -> int_lit .)
    LAND            reduce using rule 193 (BasicLit -> int_lit .)
    EQL             reduce using rule 193 (BasicLit -> int_lit .)
    NEQ             reduce using rule 193 (BasicLit -> int_lit .)
    LSS             reduce using rule 193 (BasicLit -> int_lit .)
    LEQ             reduce using rule 193 (BasicLit -> int_lit .)
    GTR             reduce using rule 193 (BasicLit -> int_lit .)
    GEQ             reduce using rule 193 (BasicLit -> int_lit .)
    ADD             reduce using rule 193 (BasicLit -> int_lit .)
    SUB             reduce using rule 193 (BasicLit -> int_lit .)
    OR              reduce using rule 193 (BasicLit -> int_lit .)
    XOR             reduce using rule 193 (BasicLit -> int_lit .)
    MUL             reduce using rule 193 (BasicLit -> int_lit .)
    QUO             reduce using rule 193 (BasicLit -> int_lit .)
    REM             reduce using rule 193 (BasicLit -> int_lit .)
    SHL             reduce using rule 193 (BasicLit -> int_lit .)
    SHR             reduce using rule 193 (BasicLit -> int_lit .)
    AND             reduce using rule 193 (BasicLit -> int_lit .)
    AND_NOT         reduce using rule 193 (BasicLit -> int_lit .)
    RBRACK          reduce using rule 193 (BasicLit -> int_lit .)
    COMMA           reduce using rule 193 (BasicLit -> int_lit .)
    SEMICOLON       reduce using rule 193 (BasicLit -> int_lit .)
    RPAREN          reduce using rule 193 (BasicLit -> int_lit .)
    ASSIGN          reduce using rule 193 (BasicLit -> int_lit .)
    ELLIPSIS        reduce using rule 193 (BasicLit -> int_lit .)
    LBRACE          reduce using rule 193 (BasicLit -> int_lit .)
    COLON           reduce using rule 193 (BasicLit -> int_lit .)


state 145

    (194) BasicLit -> float_lit .

    PERIOD          reduce using rule 194 (BasicLit -> float_lit .)
    LBRACK          reduce using rule 194 (BasicLit -> float_lit .)
    LPAREN          reduce using rule 194 (BasicLit -> float_lit .)
    LOR             reduce using rule 194 (BasicLit -> float_lit .)
    LAND            reduce using rule 194 (BasicLit -> float_lit .)
    EQL             reduce using rule 194 (BasicLit -> float_lit .)
    NEQ             reduce using rule 194 (BasicLit -> float_lit .)
    LSS             reduce using rule 194 (BasicLit -> float_lit .)
    LEQ             reduce using rule 194 (BasicLit -> float_lit .)
    GTR             reduce using rule 194 (BasicLit -> float_lit .)
    GEQ             reduce using rule 194 (BasicLit -> float_lit .)
    ADD             reduce using rule 194 (BasicLit -> float_lit .)
    SUB             reduce using rule 194 (BasicLit -> float_lit .)
    OR              reduce using rule 194 (BasicLit -> float_lit .)
    XOR             reduce using rule 194 (BasicLit -> float_lit .)
    MUL             reduce using rule 194 (BasicLit -> float_lit .)
    QUO             reduce using rule 194 (BasicLit -> float_lit .)
    REM             reduce using rule 194 (BasicLit -> float_lit .)
    SHL             reduce using rule 194 (BasicLit -> float_lit .)
    SHR             reduce using rule 194 (BasicLit -> float_lit .)
    AND             reduce using rule 194 (BasicLit -> float_lit .)
    AND_NOT         reduce using rule 194 (BasicLit -> float_lit .)
    RBRACK          reduce using rule 194 (BasicLit -> float_lit .)
    COMMA           reduce using rule 194 (BasicLit -> float_lit .)
    SEMICOLON       reduce using rule 194 (BasicLit -> float_lit .)
    RPAREN          reduce using rule 194 (BasicLit -> float_lit .)
    ASSIGN          reduce using rule 194 (BasicLit -> float_lit .)
    ELLIPSIS        reduce using rule 194 (BasicLit -> float_lit .)
    LBRACE          reduce using rule 194 (BasicLit -> float_lit .)
    COLON           reduce using rule 194 (BasicLit -> float_lit .)


state 146

    (195) BasicLit -> string_lit .

    PERIOD          reduce using rule 195 (BasicLit -> string_lit .)
    LBRACK          reduce using rule 195 (BasicLit -> string_lit .)
    LPAREN          reduce using rule 195 (BasicLit -> string_lit .)
    LOR             reduce using rule 195 (BasicLit -> string_lit .)
    LAND            reduce using rule 195 (BasicLit -> string_lit .)
    EQL             reduce using rule 195 (BasicLit -> string_lit .)
    NEQ             reduce using rule 195 (BasicLit -> string_lit .)
    LSS             reduce using rule 195 (BasicLit -> string_lit .)
    LEQ             reduce using rule 195 (BasicLit -> string_lit .)
    GTR             reduce using rule 195 (BasicLit -> string_lit .)
    GEQ             reduce using rule 195 (BasicLit -> string_lit .)
    ADD             reduce using rule 195 (BasicLit -> string_lit .)
    SUB             reduce using rule 195 (BasicLit -> string_lit .)
    OR              reduce using rule 195 (BasicLit -> string_lit .)
    XOR             reduce using rule 195 (BasicLit -> string_lit .)
    MUL             reduce using rule 195 (BasicLit -> string_lit .)
    QUO             reduce using rule 195 (BasicLit -> string_lit .)
    REM             reduce using rule 195 (BasicLit -> string_lit .)
    SHL             reduce using rule 195 (BasicLit -> string_lit .)
    SHR             reduce using rule 195 (BasicLit -> string_lit .)
    AND             reduce using rule 195 (BasicLit -> string_lit .)
    AND_NOT         reduce using rule 195 (BasicLit -> string_lit .)
    RBRACK          reduce using rule 195 (BasicLit -> string_lit .)
    COMMA           reduce using rule 195 (BasicLit -> string_lit .)
    SEMICOLON       reduce using rule 195 (BasicLit -> string_lit .)
    RPAREN          reduce using rule 195 (BasicLit -> string_lit .)
    ASSIGN          reduce using rule 195 (BasicLit -> string_lit .)
    ELLIPSIS        reduce using rule 195 (BasicLit -> string_lit .)
    LBRACE          reduce using rule 195 (BasicLit -> string_lit .)
    COLON           reduce using rule 195 (BasicLit -> string_lit .)


state 147

    (200) FunctionLit -> FUNC . Function
    (116) Function -> . Signature FunctionBody
    (84) Signature -> . Parameters ResultTop
    (89) Parameters -> . LPAREN ParameterListTop RPAREN

    LPAREN          shift and go to state 37

    Function                       shift and go to state 212
    Signature                      shift and go to state 213
    Parameters                     shift and go to state 60

state 148

    (203) ReceiverType -> TypeName .

    PERIOD          reduce using rule 203 (ReceiverType -> TypeName .)
    RPAREN          reduce using rule 203 (ReceiverType -> TypeName .)


state 149

    (196) int_lit -> INT .

    PERIOD          reduce using rule 196 (int_lit -> INT .)
    LBRACK          reduce using rule 196 (int_lit -> INT .)
    LPAREN          reduce using rule 196 (int_lit -> INT .)
    LOR             reduce using rule 196 (int_lit -> INT .)
    LAND            reduce using rule 196 (int_lit -> INT .)
    EQL             reduce using rule 196 (int_lit -> INT .)
    NEQ             reduce using rule 196 (int_lit -> INT .)
    LSS             reduce using rule 196 (int_lit -> INT .)
    LEQ             reduce using rule 196 (int_lit -> INT .)
    GTR             reduce using rule 196 (int_lit -> INT .)
    GEQ             reduce using rule 196 (int_lit -> INT .)
    ADD             reduce using rule 196 (int_lit -> INT .)
    SUB             reduce using rule 196 (int_lit -> INT .)
    OR              reduce using rule 196 (int_lit -> INT .)
    XOR             reduce using rule 196 (int_lit -> INT .)
    MUL             reduce using rule 196 (int_lit -> INT .)
    QUO             reduce using rule 196 (int_lit -> INT .)
    REM             reduce using rule 196 (int_lit -> INT .)
    SHL             reduce using rule 196 (int_lit -> INT .)
    SHR             reduce using rule 196 (int_lit -> INT .)
    AND             reduce using rule 196 (int_lit -> INT .)
    AND_NOT         reduce using rule 196 (int_lit -> INT .)
    RBRACK          reduce using rule 196 (int_lit -> INT .)
    COMMA           reduce using rule 196 (int_lit -> INT .)
    SEMICOLON       reduce using rule 196 (int_lit -> INT .)
    RPAREN          reduce using rule 196 (int_lit -> INT .)
    ASSIGN          reduce using rule 196 (int_lit -> INT .)
    ELLIPSIS        reduce using rule 196 (int_lit -> INT .)
    LBRACE          reduce using rule 196 (int_lit -> INT .)
    COLON           reduce using rule 196 (int_lit -> INT .)


state 150

    (197) float_lit -> FLOAT .

    PERIOD          reduce using rule 197 (float_lit -> FLOAT .)
    LBRACK          reduce using rule 197 (float_lit -> FLOAT .)
    LPAREN          reduce using rule 197 (float_lit -> FLOAT .)
    LOR             reduce using rule 197 (float_lit -> FLOAT .)
    LAND            reduce using rule 197 (float_lit -> FLOAT .)
    EQL             reduce using rule 197 (float_lit -> FLOAT .)
    NEQ             reduce using rule 197 (float_lit -> FLOAT .)
    LSS             reduce using rule 197 (float_lit -> FLOAT .)
    LEQ             reduce using rule 197 (float_lit -> FLOAT .)
    GTR             reduce using rule 197 (float_lit -> FLOAT .)
    GEQ             reduce using rule 197 (float_lit -> FLOAT .)
    ADD             reduce using rule 197 (float_lit -> FLOAT .)
    SUB             reduce using rule 197 (float_lit -> FLOAT .)
    OR              reduce using rule 197 (float_lit -> FLOAT .)
    XOR             reduce using rule 197 (float_lit -> FLOAT .)
    MUL             reduce using rule 197 (float_lit -> FLOAT .)
    QUO             reduce using rule 197 (float_lit -> FLOAT .)
    REM             reduce using rule 197 (float_lit -> FLOAT .)
    SHL             reduce using rule 197 (float_lit -> FLOAT .)
    SHR             reduce using rule 197 (float_lit -> FLOAT .)
    AND             reduce using rule 197 (float_lit -> FLOAT .)
    AND_NOT         reduce using rule 197 (float_lit -> FLOAT .)
    RBRACK          reduce using rule 197 (float_lit -> FLOAT .)
    COMMA           reduce using rule 197 (float_lit -> FLOAT .)
    SEMICOLON       reduce using rule 197 (float_lit -> FLOAT .)
    RPAREN          reduce using rule 197 (float_lit -> FLOAT .)
    ASSIGN          reduce using rule 197 (float_lit -> FLOAT .)
    ELLIPSIS        reduce using rule 197 (float_lit -> FLOAT .)
    LBRACE          reduce using rule 197 (float_lit -> FLOAT .)
    COLON           reduce using rule 197 (float_lit -> FLOAT .)


state 151

    (198) string_lit -> STRING .

    PERIOD          reduce using rule 198 (string_lit -> STRING .)
    LBRACK          reduce using rule 198 (string_lit -> STRING .)
    LPAREN          reduce using rule 198 (string_lit -> STRING .)
    LOR             reduce using rule 198 (string_lit -> STRING .)
    LAND            reduce using rule 198 (string_lit -> STRING .)
    EQL             reduce using rule 198 (string_lit -> STRING .)
    NEQ             reduce using rule 198 (string_lit -> STRING .)
    LSS             reduce using rule 198 (string_lit -> STRING .)
    LEQ             reduce using rule 198 (string_lit -> STRING .)
    GTR             reduce using rule 198 (string_lit -> STRING .)
    GEQ             reduce using rule 198 (string_lit -> STRING .)
    ADD             reduce using rule 198 (string_lit -> STRING .)
    SUB             reduce using rule 198 (string_lit -> STRING .)
    OR              reduce using rule 198 (string_lit -> STRING .)
    XOR             reduce using rule 198 (string_lit -> STRING .)
    MUL             reduce using rule 198 (string_lit -> STRING .)
    QUO             reduce using rule 198 (string_lit -> STRING .)
    REM             reduce using rule 198 (string_lit -> STRING .)
    SHL             reduce using rule 198 (string_lit -> STRING .)
    SHR             reduce using rule 198 (string_lit -> STRING .)
    AND             reduce using rule 198 (string_lit -> STRING .)
    AND_NOT         reduce using rule 198 (string_lit -> STRING .)
    RBRACK          reduce using rule 198 (string_lit -> STRING .)
    COMMA           reduce using rule 198 (string_lit -> STRING .)
    SEMICOLON       reduce using rule 198 (string_lit -> STRING .)
    RPAREN          reduce using rule 198 (string_lit -> STRING .)
    ASSIGN          reduce using rule 198 (string_lit -> STRING .)
    ELLIPSIS        reduce using rule 198 (string_lit -> STRING .)
    LBRACE          reduce using rule 198 (string_lit -> STRING .)
    COLON           reduce using rule 198 (string_lit -> STRING .)


state 152

    (71) StructType -> STRUCT LBRACE . FieldDeclList RBRACE
    (72) FieldDeclList -> . empty
    (73) FieldDeclList -> . FieldDeclList FieldDecl SEMICOLON
    (214) empty -> .

    RBRACE          reduce using rule 214 (empty -> .)
    IDENT           reduce using rule 214 (empty -> .)
    MUL             reduce using rule 214 (empty -> .)

    FieldDeclList                  shift and go to state 214
    empty                          shift and go to state 215

state 153

    (83) FunctionType -> FUNC Signature .

    ASSIGN          reduce using rule 83 (FunctionType -> FUNC Signature .)
    SEMICOLON       reduce using rule 83 (FunctionType -> FUNC Signature .)
    LBRACE          reduce using rule 83 (FunctionType -> FUNC Signature .)
    RPAREN          reduce using rule 83 (FunctionType -> FUNC Signature .)
    COMMA           reduce using rule 83 (FunctionType -> FUNC Signature .)
    ELLIPSIS        reduce using rule 83 (FunctionType -> FUNC Signature .)
    STRING          reduce using rule 83 (FunctionType -> FUNC Signature .)


state 154

    (46) IdentifierBotList -> IdentifierBotList COMMA . IDENT

    IDENT           shift and go to state 216


state 155

    (52) TypeSpecTopList -> LPAREN TypeSpecList RPAREN .

    SEMICOLON       reduce using rule 52 (TypeSpecTopList -> LPAREN TypeSpecList RPAREN .)


state 156

    (54) TypeSpecList -> TypeSpecList TypeSpec . SEMICOLON

    SEMICOLON       shift and go to state 217


state 157

    (57) AliasDecl -> IDENT ASSIGN Type .

    SEMICOLON       reduce using rule 57 (AliasDecl -> IDENT ASSIGN Type .)


state 158

    (104) VarSpecTopList -> LPAREN VarSpecList RPAREN .

    SEMICOLON       reduce using rule 104 (VarSpecTopList -> LPAREN VarSpecList RPAREN .)


state 159

    (106) VarSpecList -> VarSpecList VarSpec . SEMICOLON

    SEMICOLON       shift and go to state 218


state 160

    (108) VarSpecTail -> Type VarSpecMid .

    SEMICOLON       reduce using rule 108 (VarSpecTail -> Type VarSpecMid .)


state 161

    (110) VarSpecMid -> empty .

    SEMICOLON       reduce using rule 110 (VarSpecMid -> empty .)


state 162

    (111) VarSpecMid -> ASSIGN . ExpressionList
    (47) ExpressionList -> . Expression ExpressionBotList
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    LPAREN          shift and go to state 139
    IDENT           shift and go to state 142
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    ExpressionList                 shift and go to state 219
    Expression                     shift and go to state 164
    UnaryExpr                      shift and go to state 125
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146
    TypeName                       shift and go to state 148
    QualifiedIdent                 shift and go to state 79

state 163

    (109) VarSpecTail -> ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 109 (VarSpecTail -> ASSIGN ExpressionList .)


state 164

    (47) ExpressionList -> Expression . ExpressionBotList
    (151) Expression -> Expression . binary_op Expression
    (48) ExpressionBotList -> . empty
    (49) ExpressionBotList -> . ExpressionBotList COMMA Expression
    (154) binary_op -> . LOR
    (155) binary_op -> . LAND
    (156) binary_op -> . rel_op
    (157) binary_op -> . add_op
    (158) binary_op -> . mul_op
    (214) empty -> .
    (159) rel_op -> . EQL
    (160) rel_op -> . NEQ
    (161) rel_op -> . LSS
    (162) rel_op -> . LEQ
    (163) rel_op -> . GTR
    (164) rel_op -> . GEQ
    (165) add_op -> . ADD
    (166) add_op -> . SUB
    (167) add_op -> . OR
    (168) add_op -> . XOR
    (169) mul_op -> . MUL
    (170) mul_op -> . QUO
    (171) mul_op -> . REM
    (172) mul_op -> . SHL
    (173) mul_op -> . SHR
    (174) mul_op -> . AND
    (175) mul_op -> . AND_NOT

    LOR             shift and go to state 177
    LAND            shift and go to state 178
    COMMA           reduce using rule 214 (empty -> .)
    SEMICOLON       reduce using rule 214 (empty -> .)
    ELLIPSIS        reduce using rule 214 (empty -> .)
    RPAREN          reduce using rule 214 (empty -> .)
    COLON           reduce using rule 214 (empty -> .)
    EQL             shift and go to state 182
    NEQ             shift and go to state 183
    LSS             shift and go to state 184
    LEQ             shift and go to state 185
    GTR             shift and go to state 186
    GEQ             shift and go to state 187
    ADD             shift and go to state 188
    SUB             shift and go to state 189
    OR              shift and go to state 190
    XOR             shift and go to state 191
    MUL             shift and go to state 192
    QUO             shift and go to state 193
    REM             shift and go to state 194
    SHL             shift and go to state 195
    SHR             shift and go to state 196
    AND             shift and go to state 197
    AND_NOT         shift and go to state 198

    ExpressionBotList              shift and go to state 220
    binary_op                      shift and go to state 176
    empty                          shift and go to state 221
    rel_op                         shift and go to state 179
    add_op                         shift and go to state 180
    mul_op                         shift and go to state 181

state 165

    (15) ImportSpecList -> ImportSpecList ImportSpec SEMICOLON .

    RPAREN          reduce using rule 15 (ImportSpecList -> ImportSpecList ImportSpec SEMICOLON .)
    PERIOD          reduce using rule 15 (ImportSpecList -> ImportSpecList ImportSpec SEMICOLON .)
    IDENT           reduce using rule 15 (ImportSpecList -> ImportSpecList ImportSpec SEMICOLON .)
    STRING          reduce using rule 15 (ImportSpecList -> ImportSpecList ImportSpec SEMICOLON .)


state 166

    (21) Block -> LBRACE StatementList . RBRACE
    (23) StatementList -> StatementList . Statement SEMICOLON
    (24) Statement -> . Declaration
    (25) Statement -> . SimpleStmt
    (26) Statement -> . ReturnStmt
    (27) Statement -> . Block
    (28) Statement -> . IfStmt
    (29) Statement -> . SwitchStmt
    (30) Statement -> . ForStmt
    (31) Declaration -> . ConstDecl
    (32) Declaration -> . TypeDecl
    (33) Declaration -> . VarDecl
    (120) SimpleStmt -> . ExpressionStmt
    (121) SimpleStmt -> . Assignment
    (122) SimpleStmt -> . ShortVarDecl
    (147) ReturnStmt -> . RETURN ExpressionListBot
    (21) Block -> . LBRACE StatementList RBRACE
    (130) IfStmt -> . IF SimpleStmtBot Expression Block elseBot
    (137) SwitchStmt -> . ExprSwitchStmt
    (144) ForStmt -> . FOR ExpressionBot Block
    (34) ConstDecl -> . CONST ConstSpecTopList
    (50) TypeDecl -> . TYPE TypeSpecTopList
    (102) VarDecl -> . VAR VarSpecTopList
    (123) ExpressionStmt -> . Expression
    (125) Assignment -> . ExpressionList assign_op ExpressionList
    (124) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (138) ExprSwitchStmt -> . SWITCH SimpleStmtBot ExpressionBot LBRACE ExprCaseClauseList RBRACE
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (47) ExpressionList -> . Expression ExpressionBotList
    (44) IdentifierList -> . IDENT IdentifierBotList
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

    RBRACE          shift and go to state 222
    RETURN          shift and go to state 234
    LBRACE          shift and go to state 101
    IF              shift and go to state 235
    FOR             shift and go to state 238
    CONST           shift and go to state 21
    TYPE            shift and go to state 22
    VAR             shift and go to state 23
    SWITCH          shift and go to state 241
    IDENT           shift and go to state 242
    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    LPAREN          shift and go to state 139
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    Statement                      shift and go to state 223
    Declaration                    shift and go to state 224
    SimpleStmt                     shift and go to state 225
    ReturnStmt                     shift and go to state 226
    Block                          shift and go to state 227
    IfStmt                         shift and go to state 228
    SwitchStmt                     shift and go to state 229
    ForStmt                        shift and go to state 230
    ConstDecl                      shift and go to state 17
    TypeDecl                       shift and go to state 18
    VarDecl                        shift and go to state 19
    ExpressionStmt                 shift and go to state 231
    Assignment                     shift and go to state 232
    ShortVarDecl                   shift and go to state 233
    Expression                     shift and go to state 236
    ExprSwitchStmt                 shift and go to state 237
    ExpressionList                 shift and go to state 239
    IdentifierList                 shift and go to state 240
    UnaryExpr                      shift and go to state 125
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146
    TypeName                       shift and go to state 148
    QualifiedIdent                 shift and go to state 79

state 167

    (22) StatementList -> empty .

    RBRACE          reduce using rule 22 (StatementList -> empty .)
    RETURN          reduce using rule 22 (StatementList -> empty .)
    LBRACE          reduce using rule 22 (StatementList -> empty .)
    IF              reduce using rule 22 (StatementList -> empty .)
    FOR             reduce using rule 22 (StatementList -> empty .)
    CONST           reduce using rule 22 (StatementList -> empty .)
    TYPE            reduce using rule 22 (StatementList -> empty .)
    VAR             reduce using rule 22 (StatementList -> empty .)
    SWITCH          reduce using rule 22 (StatementList -> empty .)
    IDENT           reduce using rule 22 (StatementList -> empty .)
    +               reduce using rule 22 (StatementList -> empty .)
    -               reduce using rule 22 (StatementList -> empty .)
    !               reduce using rule 22 (StatementList -> empty .)
    ^               reduce using rule 22 (StatementList -> empty .)
    *               reduce using rule 22 (StatementList -> empty .)
    &               reduce using rule 22 (StatementList -> empty .)
    CHAN            reduce using rule 22 (StatementList -> empty .)
    LPAREN          reduce using rule 22 (StatementList -> empty .)
    FUNC            reduce using rule 22 (StatementList -> empty .)
    INT             reduce using rule 22 (StatementList -> empty .)
    FLOAT           reduce using rule 22 (StatementList -> empty .)
    STRING          reduce using rule 22 (StatementList -> empty .)
    CASE            reduce using rule 22 (StatementList -> empty .)
    DEFAULT         reduce using rule 22 (StatementList -> empty .)


state 168

    (62) TypeName -> IDENT .
    (64) QualifiedIdent -> IDENT . PERIOD IDENT
    (44) IdentifierList -> IDENT . IdentifierBotList
    (45) IdentifierBotList -> . empty
    (46) IdentifierBotList -> . IdentifierBotList COMMA IDENT
    (214) empty -> .

    RPAREN          reduce using rule 62 (TypeName -> IDENT .)
    PERIOD          shift and go to state 122
    COMMA           reduce using rule 214 (empty -> .)
    ELLIPSIS        reduce using rule 214 (empty -> .)
    LPAREN          reduce using rule 214 (empty -> .)
    IDENT           reduce using rule 214 (empty -> .)
    LBRACK          reduce using rule 214 (empty -> .)
    STRUCT          reduce using rule 214 (empty -> .)
    FUNC            reduce using rule 214 (empty -> .)

    IdentifierBotList              shift and go to state 86
    empty                          shift and go to state 87

state 169

    (96) ParameterDeclList -> ParameterDeclList COMMA . ParameterDecl
    (97) ParameterDecl -> . ParameterDeclHead tripledotTop Type
    (100) ParameterDeclHead -> . empty
    (101) ParameterDeclHead -> . IdentifierList
    (214) empty -> .
    (44) IdentifierList -> . IDENT IdentifierBotList

  ! shift/reduce conflict for IDENT resolved as shift
    ELLIPSIS        reduce using rule 214 (empty -> .)
    LPAREN          reduce using rule 214 (empty -> .)
    LBRACK          reduce using rule 214 (empty -> .)
    STRUCT          reduce using rule 214 (empty -> .)
    FUNC            reduce using rule 214 (empty -> .)
    IDENT           shift and go to state 42

  ! IDENT           [ reduce using rule 214 (empty -> .) ]

    ParameterDecl                  shift and go to state 243
    ParameterDeclHead              shift and go to state 67
    empty                          shift and go to state 244
    IdentifierList                 shift and go to state 68

state 170

    (97) ParameterDecl -> ParameterDeclHead tripledotTop Type .

    COMMA           reduce using rule 97 (ParameterDecl -> ParameterDeclHead tripledotTop Type .)
    RPAREN          reduce using rule 97 (ParameterDecl -> ParameterDeclHead tripledotTop Type .)


state 171

    (38) ConstSpecList -> ConstSpecList ConstSpec SEMICOLON .

    RPAREN          reduce using rule 38 (ConstSpecList -> ConstSpecList ConstSpec SEMICOLON .)
    IDENT           reduce using rule 38 (ConstSpecList -> ConstSpecList ConstSpec SEMICOLON .)


state 172

    (41) ConstSpecTail -> TypeTop ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 41 (ConstSpecTail -> TypeTop ASSIGN ExpressionList .)


state 173

    (61) Type -> LPAREN Type RPAREN .

    ASSIGN          reduce using rule 61 (Type -> LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 61 (Type -> LPAREN Type RPAREN .)
    LBRACE          reduce using rule 61 (Type -> LPAREN Type RPAREN .)
    RPAREN          reduce using rule 61 (Type -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 61 (Type -> LPAREN Type RPAREN .)
    ELLIPSIS        reduce using rule 61 (Type -> LPAREN Type RPAREN .)
    STRING          reduce using rule 61 (Type -> LPAREN Type RPAREN .)


state 174

    (64) QualifiedIdent -> IDENT PERIOD IDENT .

    ASSIGN          reduce using rule 64 (QualifiedIdent -> IDENT PERIOD IDENT .)
    SEMICOLON       reduce using rule 64 (QualifiedIdent -> IDENT PERIOD IDENT .)
    LBRACE          reduce using rule 64 (QualifiedIdent -> IDENT PERIOD IDENT .)
    RPAREN          reduce using rule 64 (QualifiedIdent -> IDENT PERIOD IDENT .)
    COMMA           reduce using rule 64 (QualifiedIdent -> IDENT PERIOD IDENT .)
    ELLIPSIS        reduce using rule 64 (QualifiedIdent -> IDENT PERIOD IDENT .)
    STRING          reduce using rule 64 (QualifiedIdent -> IDENT PERIOD IDENT .)
    PERIOD          reduce using rule 64 (QualifiedIdent -> IDENT PERIOD IDENT .)


state 175

    (68) ArrayType -> LBRACK ArrayLength RBRACK . ElementType
    (70) ElementType -> . Type
    (59) Type -> . TypeName
    (60) Type -> . TypeLit
    (61) Type -> . LPAREN Type RPAREN
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (65) TypeLit -> . ArrayType
    (66) TypeLit -> . StructType
    (67) TypeLit -> . FunctionType
    (64) QualifiedIdent -> . IDENT PERIOD IDENT
    (68) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (71) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (83) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 77
    IDENT           shift and go to state 78
    LBRACK          shift and go to state 83
    STRUCT          shift and go to state 84
    FUNC            shift and go to state 85

    ElementType                    shift and go to state 245
    Type                           shift and go to state 246
    TypeName                       shift and go to state 75
    TypeLit                        shift and go to state 76
    QualifiedIdent                 shift and go to state 79
    ArrayType                      shift and go to state 80
    StructType                     shift and go to state 81
    FunctionType                   shift and go to state 82

state 176

    (151) Expression -> Expression binary_op . Expression
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    LPAREN          shift and go to state 139
    IDENT           shift and go to state 142
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    Expression                     shift and go to state 247
    UnaryExpr                      shift and go to state 125
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146
    TypeName                       shift and go to state 148
    QualifiedIdent                 shift and go to state 79

state 177

    (154) binary_op -> LOR .

    +               reduce using rule 154 (binary_op -> LOR .)
    -               reduce using rule 154 (binary_op -> LOR .)
    !               reduce using rule 154 (binary_op -> LOR .)
    ^               reduce using rule 154 (binary_op -> LOR .)
    *               reduce using rule 154 (binary_op -> LOR .)
    &               reduce using rule 154 (binary_op -> LOR .)
    CHAN            reduce using rule 154 (binary_op -> LOR .)
    LPAREN          reduce using rule 154 (binary_op -> LOR .)
    IDENT           reduce using rule 154 (binary_op -> LOR .)
    FUNC            reduce using rule 154 (binary_op -> LOR .)
    INT             reduce using rule 154 (binary_op -> LOR .)
    FLOAT           reduce using rule 154 (binary_op -> LOR .)
    STRING          reduce using rule 154 (binary_op -> LOR .)


state 178

    (155) binary_op -> LAND .

    +               reduce using rule 155 (binary_op -> LAND .)
    -               reduce using rule 155 (binary_op -> LAND .)
    !               reduce using rule 155 (binary_op -> LAND .)
    ^               reduce using rule 155 (binary_op -> LAND .)
    *               reduce using rule 155 (binary_op -> LAND .)
    &               reduce using rule 155 (binary_op -> LAND .)
    CHAN            reduce using rule 155 (binary_op -> LAND .)
    LPAREN          reduce using rule 155 (binary_op -> LAND .)
    IDENT           reduce using rule 155 (binary_op -> LAND .)
    FUNC            reduce using rule 155 (binary_op -> LAND .)
    INT             reduce using rule 155 (binary_op -> LAND .)
    FLOAT           reduce using rule 155 (binary_op -> LAND .)
    STRING          reduce using rule 155 (binary_op -> LAND .)


state 179

    (156) binary_op -> rel_op .

    +               reduce using rule 156 (binary_op -> rel_op .)
    -               reduce using rule 156 (binary_op -> rel_op .)
    !               reduce using rule 156 (binary_op -> rel_op .)
    ^               reduce using rule 156 (binary_op -> rel_op .)
    *               reduce using rule 156 (binary_op -> rel_op .)
    &               reduce using rule 156 (binary_op -> rel_op .)
    CHAN            reduce using rule 156 (binary_op -> rel_op .)
    LPAREN          reduce using rule 156 (binary_op -> rel_op .)
    IDENT           reduce using rule 156 (binary_op -> rel_op .)
    FUNC            reduce using rule 156 (binary_op -> rel_op .)
    INT             reduce using rule 156 (binary_op -> rel_op .)
    FLOAT           reduce using rule 156 (binary_op -> rel_op .)
    STRING          reduce using rule 156 (binary_op -> rel_op .)


state 180

    (157) binary_op -> add_op .

    +               reduce using rule 157 (binary_op -> add_op .)
    -               reduce using rule 157 (binary_op -> add_op .)
    !               reduce using rule 157 (binary_op -> add_op .)
    ^               reduce using rule 157 (binary_op -> add_op .)
    *               reduce using rule 157 (binary_op -> add_op .)
    &               reduce using rule 157 (binary_op -> add_op .)
    CHAN            reduce using rule 157 (binary_op -> add_op .)
    LPAREN          reduce using rule 157 (binary_op -> add_op .)
    IDENT           reduce using rule 157 (binary_op -> add_op .)
    FUNC            reduce using rule 157 (binary_op -> add_op .)
    INT             reduce using rule 157 (binary_op -> add_op .)
    FLOAT           reduce using rule 157 (binary_op -> add_op .)
    STRING          reduce using rule 157 (binary_op -> add_op .)


state 181

    (158) binary_op -> mul_op .

    +               reduce using rule 158 (binary_op -> mul_op .)
    -               reduce using rule 158 (binary_op -> mul_op .)
    !               reduce using rule 158 (binary_op -> mul_op .)
    ^               reduce using rule 158 (binary_op -> mul_op .)
    *               reduce using rule 158 (binary_op -> mul_op .)
    &               reduce using rule 158 (binary_op -> mul_op .)
    CHAN            reduce using rule 158 (binary_op -> mul_op .)
    LPAREN          reduce using rule 158 (binary_op -> mul_op .)
    IDENT           reduce using rule 158 (binary_op -> mul_op .)
    FUNC            reduce using rule 158 (binary_op -> mul_op .)
    INT             reduce using rule 158 (binary_op -> mul_op .)
    FLOAT           reduce using rule 158 (binary_op -> mul_op .)
    STRING          reduce using rule 158 (binary_op -> mul_op .)


state 182

    (159) rel_op -> EQL .

    +               reduce using rule 159 (rel_op -> EQL .)
    -               reduce using rule 159 (rel_op -> EQL .)
    !               reduce using rule 159 (rel_op -> EQL .)
    ^               reduce using rule 159 (rel_op -> EQL .)
    *               reduce using rule 159 (rel_op -> EQL .)
    &               reduce using rule 159 (rel_op -> EQL .)
    CHAN            reduce using rule 159 (rel_op -> EQL .)
    LPAREN          reduce using rule 159 (rel_op -> EQL .)
    IDENT           reduce using rule 159 (rel_op -> EQL .)
    FUNC            reduce using rule 159 (rel_op -> EQL .)
    INT             reduce using rule 159 (rel_op -> EQL .)
    FLOAT           reduce using rule 159 (rel_op -> EQL .)
    STRING          reduce using rule 159 (rel_op -> EQL .)


state 183

    (160) rel_op -> NEQ .

    +               reduce using rule 160 (rel_op -> NEQ .)
    -               reduce using rule 160 (rel_op -> NEQ .)
    !               reduce using rule 160 (rel_op -> NEQ .)
    ^               reduce using rule 160 (rel_op -> NEQ .)
    *               reduce using rule 160 (rel_op -> NEQ .)
    &               reduce using rule 160 (rel_op -> NEQ .)
    CHAN            reduce using rule 160 (rel_op -> NEQ .)
    LPAREN          reduce using rule 160 (rel_op -> NEQ .)
    IDENT           reduce using rule 160 (rel_op -> NEQ .)
    FUNC            reduce using rule 160 (rel_op -> NEQ .)
    INT             reduce using rule 160 (rel_op -> NEQ .)
    FLOAT           reduce using rule 160 (rel_op -> NEQ .)
    STRING          reduce using rule 160 (rel_op -> NEQ .)


state 184

    (161) rel_op -> LSS .

    +               reduce using rule 161 (rel_op -> LSS .)
    -               reduce using rule 161 (rel_op -> LSS .)
    !               reduce using rule 161 (rel_op -> LSS .)
    ^               reduce using rule 161 (rel_op -> LSS .)
    *               reduce using rule 161 (rel_op -> LSS .)
    &               reduce using rule 161 (rel_op -> LSS .)
    CHAN            reduce using rule 161 (rel_op -> LSS .)
    LPAREN          reduce using rule 161 (rel_op -> LSS .)
    IDENT           reduce using rule 161 (rel_op -> LSS .)
    FUNC            reduce using rule 161 (rel_op -> LSS .)
    INT             reduce using rule 161 (rel_op -> LSS .)
    FLOAT           reduce using rule 161 (rel_op -> LSS .)
    STRING          reduce using rule 161 (rel_op -> LSS .)


state 185

    (162) rel_op -> LEQ .

    +               reduce using rule 162 (rel_op -> LEQ .)
    -               reduce using rule 162 (rel_op -> LEQ .)
    !               reduce using rule 162 (rel_op -> LEQ .)
    ^               reduce using rule 162 (rel_op -> LEQ .)
    *               reduce using rule 162 (rel_op -> LEQ .)
    &               reduce using rule 162 (rel_op -> LEQ .)
    CHAN            reduce using rule 162 (rel_op -> LEQ .)
    LPAREN          reduce using rule 162 (rel_op -> LEQ .)
    IDENT           reduce using rule 162 (rel_op -> LEQ .)
    FUNC            reduce using rule 162 (rel_op -> LEQ .)
    INT             reduce using rule 162 (rel_op -> LEQ .)
    FLOAT           reduce using rule 162 (rel_op -> LEQ .)
    STRING          reduce using rule 162 (rel_op -> LEQ .)


state 186

    (163) rel_op -> GTR .

    +               reduce using rule 163 (rel_op -> GTR .)
    -               reduce using rule 163 (rel_op -> GTR .)
    !               reduce using rule 163 (rel_op -> GTR .)
    ^               reduce using rule 163 (rel_op -> GTR .)
    *               reduce using rule 163 (rel_op -> GTR .)
    &               reduce using rule 163 (rel_op -> GTR .)
    CHAN            reduce using rule 163 (rel_op -> GTR .)
    LPAREN          reduce using rule 163 (rel_op -> GTR .)
    IDENT           reduce using rule 163 (rel_op -> GTR .)
    FUNC            reduce using rule 163 (rel_op -> GTR .)
    INT             reduce using rule 163 (rel_op -> GTR .)
    FLOAT           reduce using rule 163 (rel_op -> GTR .)
    STRING          reduce using rule 163 (rel_op -> GTR .)


state 187

    (164) rel_op -> GEQ .

    +               reduce using rule 164 (rel_op -> GEQ .)
    -               reduce using rule 164 (rel_op -> GEQ .)
    !               reduce using rule 164 (rel_op -> GEQ .)
    ^               reduce using rule 164 (rel_op -> GEQ .)
    *               reduce using rule 164 (rel_op -> GEQ .)
    &               reduce using rule 164 (rel_op -> GEQ .)
    CHAN            reduce using rule 164 (rel_op -> GEQ .)
    LPAREN          reduce using rule 164 (rel_op -> GEQ .)
    IDENT           reduce using rule 164 (rel_op -> GEQ .)
    FUNC            reduce using rule 164 (rel_op -> GEQ .)
    INT             reduce using rule 164 (rel_op -> GEQ .)
    FLOAT           reduce using rule 164 (rel_op -> GEQ .)
    STRING          reduce using rule 164 (rel_op -> GEQ .)


state 188

    (165) add_op -> ADD .

    +               reduce using rule 165 (add_op -> ADD .)
    -               reduce using rule 165 (add_op -> ADD .)
    !               reduce using rule 165 (add_op -> ADD .)
    ^               reduce using rule 165 (add_op -> ADD .)
    *               reduce using rule 165 (add_op -> ADD .)
    &               reduce using rule 165 (add_op -> ADD .)
    CHAN            reduce using rule 165 (add_op -> ADD .)
    LPAREN          reduce using rule 165 (add_op -> ADD .)
    IDENT           reduce using rule 165 (add_op -> ADD .)
    FUNC            reduce using rule 165 (add_op -> ADD .)
    INT             reduce using rule 165 (add_op -> ADD .)
    FLOAT           reduce using rule 165 (add_op -> ADD .)
    STRING          reduce using rule 165 (add_op -> ADD .)
    ASSIGN          reduce using rule 165 (add_op -> ADD .)


state 189

    (166) add_op -> SUB .

    +               reduce using rule 166 (add_op -> SUB .)
    -               reduce using rule 166 (add_op -> SUB .)
    !               reduce using rule 166 (add_op -> SUB .)
    ^               reduce using rule 166 (add_op -> SUB .)
    *               reduce using rule 166 (add_op -> SUB .)
    &               reduce using rule 166 (add_op -> SUB .)
    CHAN            reduce using rule 166 (add_op -> SUB .)
    LPAREN          reduce using rule 166 (add_op -> SUB .)
    IDENT           reduce using rule 166 (add_op -> SUB .)
    FUNC            reduce using rule 166 (add_op -> SUB .)
    INT             reduce using rule 166 (add_op -> SUB .)
    FLOAT           reduce using rule 166 (add_op -> SUB .)
    STRING          reduce using rule 166 (add_op -> SUB .)
    ASSIGN          reduce using rule 166 (add_op -> SUB .)


state 190

    (167) add_op -> OR .

    +               reduce using rule 167 (add_op -> OR .)
    -               reduce using rule 167 (add_op -> OR .)
    !               reduce using rule 167 (add_op -> OR .)
    ^               reduce using rule 167 (add_op -> OR .)
    *               reduce using rule 167 (add_op -> OR .)
    &               reduce using rule 167 (add_op -> OR .)
    CHAN            reduce using rule 167 (add_op -> OR .)
    LPAREN          reduce using rule 167 (add_op -> OR .)
    IDENT           reduce using rule 167 (add_op -> OR .)
    FUNC            reduce using rule 167 (add_op -> OR .)
    INT             reduce using rule 167 (add_op -> OR .)
    FLOAT           reduce using rule 167 (add_op -> OR .)
    STRING          reduce using rule 167 (add_op -> OR .)
    ASSIGN          reduce using rule 167 (add_op -> OR .)


state 191

    (168) add_op -> XOR .

    +               reduce using rule 168 (add_op -> XOR .)
    -               reduce using rule 168 (add_op -> XOR .)
    !               reduce using rule 168 (add_op -> XOR .)
    ^               reduce using rule 168 (add_op -> XOR .)
    *               reduce using rule 168 (add_op -> XOR .)
    &               reduce using rule 168 (add_op -> XOR .)
    CHAN            reduce using rule 168 (add_op -> XOR .)
    LPAREN          reduce using rule 168 (add_op -> XOR .)
    IDENT           reduce using rule 168 (add_op -> XOR .)
    FUNC            reduce using rule 168 (add_op -> XOR .)
    INT             reduce using rule 168 (add_op -> XOR .)
    FLOAT           reduce using rule 168 (add_op -> XOR .)
    STRING          reduce using rule 168 (add_op -> XOR .)
    ASSIGN          reduce using rule 168 (add_op -> XOR .)


state 192

    (169) mul_op -> MUL .

    +               reduce using rule 169 (mul_op -> MUL .)
    -               reduce using rule 169 (mul_op -> MUL .)
    !               reduce using rule 169 (mul_op -> MUL .)
    ^               reduce using rule 169 (mul_op -> MUL .)
    *               reduce using rule 169 (mul_op -> MUL .)
    &               reduce using rule 169 (mul_op -> MUL .)
    CHAN            reduce using rule 169 (mul_op -> MUL .)
    LPAREN          reduce using rule 169 (mul_op -> MUL .)
    IDENT           reduce using rule 169 (mul_op -> MUL .)
    FUNC            reduce using rule 169 (mul_op -> MUL .)
    INT             reduce using rule 169 (mul_op -> MUL .)
    FLOAT           reduce using rule 169 (mul_op -> MUL .)
    STRING          reduce using rule 169 (mul_op -> MUL .)
    ASSIGN          reduce using rule 169 (mul_op -> MUL .)


state 193

    (170) mul_op -> QUO .

    +               reduce using rule 170 (mul_op -> QUO .)
    -               reduce using rule 170 (mul_op -> QUO .)
    !               reduce using rule 170 (mul_op -> QUO .)
    ^               reduce using rule 170 (mul_op -> QUO .)
    *               reduce using rule 170 (mul_op -> QUO .)
    &               reduce using rule 170 (mul_op -> QUO .)
    CHAN            reduce using rule 170 (mul_op -> QUO .)
    LPAREN          reduce using rule 170 (mul_op -> QUO .)
    IDENT           reduce using rule 170 (mul_op -> QUO .)
    FUNC            reduce using rule 170 (mul_op -> QUO .)
    INT             reduce using rule 170 (mul_op -> QUO .)
    FLOAT           reduce using rule 170 (mul_op -> QUO .)
    STRING          reduce using rule 170 (mul_op -> QUO .)
    ASSIGN          reduce using rule 170 (mul_op -> QUO .)


state 194

    (171) mul_op -> REM .

    +               reduce using rule 171 (mul_op -> REM .)
    -               reduce using rule 171 (mul_op -> REM .)
    !               reduce using rule 171 (mul_op -> REM .)
    ^               reduce using rule 171 (mul_op -> REM .)
    *               reduce using rule 171 (mul_op -> REM .)
    &               reduce using rule 171 (mul_op -> REM .)
    CHAN            reduce using rule 171 (mul_op -> REM .)
    LPAREN          reduce using rule 171 (mul_op -> REM .)
    IDENT           reduce using rule 171 (mul_op -> REM .)
    FUNC            reduce using rule 171 (mul_op -> REM .)
    INT             reduce using rule 171 (mul_op -> REM .)
    FLOAT           reduce using rule 171 (mul_op -> REM .)
    STRING          reduce using rule 171 (mul_op -> REM .)
    ASSIGN          reduce using rule 171 (mul_op -> REM .)


state 195

    (172) mul_op -> SHL .

    +               reduce using rule 172 (mul_op -> SHL .)
    -               reduce using rule 172 (mul_op -> SHL .)
    !               reduce using rule 172 (mul_op -> SHL .)
    ^               reduce using rule 172 (mul_op -> SHL .)
    *               reduce using rule 172 (mul_op -> SHL .)
    &               reduce using rule 172 (mul_op -> SHL .)
    CHAN            reduce using rule 172 (mul_op -> SHL .)
    LPAREN          reduce using rule 172 (mul_op -> SHL .)
    IDENT           reduce using rule 172 (mul_op -> SHL .)
    FUNC            reduce using rule 172 (mul_op -> SHL .)
    INT             reduce using rule 172 (mul_op -> SHL .)
    FLOAT           reduce using rule 172 (mul_op -> SHL .)
    STRING          reduce using rule 172 (mul_op -> SHL .)
    ASSIGN          reduce using rule 172 (mul_op -> SHL .)


state 196

    (173) mul_op -> SHR .

    +               reduce using rule 173 (mul_op -> SHR .)
    -               reduce using rule 173 (mul_op -> SHR .)
    !               reduce using rule 173 (mul_op -> SHR .)
    ^               reduce using rule 173 (mul_op -> SHR .)
    *               reduce using rule 173 (mul_op -> SHR .)
    &               reduce using rule 173 (mul_op -> SHR .)
    CHAN            reduce using rule 173 (mul_op -> SHR .)
    LPAREN          reduce using rule 173 (mul_op -> SHR .)
    IDENT           reduce using rule 173 (mul_op -> SHR .)
    FUNC            reduce using rule 173 (mul_op -> SHR .)
    INT             reduce using rule 173 (mul_op -> SHR .)
    FLOAT           reduce using rule 173 (mul_op -> SHR .)
    STRING          reduce using rule 173 (mul_op -> SHR .)
    ASSIGN          reduce using rule 173 (mul_op -> SHR .)


state 197

    (174) mul_op -> AND .

    +               reduce using rule 174 (mul_op -> AND .)
    -               reduce using rule 174 (mul_op -> AND .)
    !               reduce using rule 174 (mul_op -> AND .)
    ^               reduce using rule 174 (mul_op -> AND .)
    *               reduce using rule 174 (mul_op -> AND .)
    &               reduce using rule 174 (mul_op -> AND .)
    CHAN            reduce using rule 174 (mul_op -> AND .)
    LPAREN          reduce using rule 174 (mul_op -> AND .)
    IDENT           reduce using rule 174 (mul_op -> AND .)
    FUNC            reduce using rule 174 (mul_op -> AND .)
    INT             reduce using rule 174 (mul_op -> AND .)
    FLOAT           reduce using rule 174 (mul_op -> AND .)
    STRING          reduce using rule 174 (mul_op -> AND .)
    ASSIGN          reduce using rule 174 (mul_op -> AND .)


state 198

    (175) mul_op -> AND_NOT .

    +               reduce using rule 175 (mul_op -> AND_NOT .)
    -               reduce using rule 175 (mul_op -> AND_NOT .)
    !               reduce using rule 175 (mul_op -> AND_NOT .)
    ^               reduce using rule 175 (mul_op -> AND_NOT .)
    *               reduce using rule 175 (mul_op -> AND_NOT .)
    &               reduce using rule 175 (mul_op -> AND_NOT .)
    CHAN            reduce using rule 175 (mul_op -> AND_NOT .)
    LPAREN          reduce using rule 175 (mul_op -> AND_NOT .)
    IDENT           reduce using rule 175 (mul_op -> AND_NOT .)
    FUNC            reduce using rule 175 (mul_op -> AND_NOT .)
    INT             reduce using rule 175 (mul_op -> AND_NOT .)
    FLOAT           reduce using rule 175 (mul_op -> AND_NOT .)
    STRING          reduce using rule 175 (mul_op -> AND_NOT .)
    ASSIGN          reduce using rule 175 (mul_op -> AND_NOT .)


state 199

    (184) PrimaryExpr -> PrimaryExpr Selector .

    PERIOD          reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACK          reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    LPAREN          reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    LOR             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    LAND            reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    EQL             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    NEQ             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    LSS             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    LEQ             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    GTR             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    GEQ             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    ADD             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    SUB             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    OR              reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    MUL             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    QUO             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    REM             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    SHL             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    SHR             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    AND             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    AND_NOT         reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    RBRACK          reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    COMMA           reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    SEMICOLON       reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    RPAREN          reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    ASSIGN          reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    ELLIPSIS        reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACE          reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)
    COLON           reduce using rule 184 (PrimaryExpr -> PrimaryExpr Selector .)


state 200

    (185) PrimaryExpr -> PrimaryExpr Index .

    PERIOD          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACK          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    LPAREN          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    LOR             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    LAND            reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    EQL             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    NEQ             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    LSS             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    LEQ             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    GTR             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    GEQ             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    ADD             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    SUB             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    XOR             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    MUL             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    QUO             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    REM             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    SHL             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    SHR             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    AND             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    AND_NOT         reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    RBRACK          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOLON       reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    RPAREN          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    ASSIGN          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    ELLIPSIS        reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACE          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 185 (PrimaryExpr -> PrimaryExpr Index .)


state 201

    (186) PrimaryExpr -> PrimaryExpr Arguments .

    PERIOD          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACK          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    LPAREN          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    LOR             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    LAND            reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQL             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    NEQ             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    LSS             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEQ             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    GTR             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    GEQ             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    QUO             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    REM             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHL             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHR             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_NOT         reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACK          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOLON       reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    RPAREN          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    ASSIGN          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    ELLIPSIS        reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACE          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 186 (PrimaryExpr -> PrimaryExpr Arguments .)


state 202

    (206) Selector -> PERIOD . IDENT

    IDENT           shift and go to state 248


state 203

    (207) Index -> LBRACK . Expression RBRACK
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    LPAREN          shift and go to state 139
    IDENT           shift and go to state 142
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    Expression                     shift and go to state 249
    UnaryExpr                      shift and go to state 125
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146
    TypeName                       shift and go to state 148
    QualifiedIdent                 shift and go to state 79

state 204

    (208) Arguments -> LPAREN . ArgumentsHead RPAREN
    (209) ArgumentsHead -> . empty
    (210) ArgumentsHead -> . ArgumentsHeadMid tripledotTop commaTop
    (214) empty -> .
    (211) ArgumentsHeadMid -> . ExpressionList
    (212) ArgumentsHeadMid -> . Type COMMA ExpressionList
    (213) ArgumentsHeadMid -> . Type
    (47) ExpressionList -> . Expression ExpressionBotList
    (59) Type -> . TypeName
    (60) Type -> . TypeLit
    (61) Type -> . LPAREN Type RPAREN
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (65) TypeLit -> . ArrayType
    (66) TypeLit -> . StructType
    (67) TypeLit -> . FunctionType
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (64) QualifiedIdent -> . IDENT PERIOD IDENT
    (68) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (71) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (83) FunctionType -> . FUNC Signature
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING

    RPAREN          reduce using rule 214 (empty -> .)
    LPAREN          shift and go to state 250
    IDENT           shift and go to state 210
    LBRACK          shift and go to state 83
    STRUCT          shift and go to state 84
    FUNC            shift and go to state 257
    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    ArgumentsHead                  shift and go to state 251
    empty                          shift and go to state 252
    ArgumentsHeadMid               shift and go to state 253
    ExpressionList                 shift and go to state 254
    Type                           shift and go to state 255
    Expression                     shift and go to state 164
    TypeName                       shift and go to state 256
    TypeLit                        shift and go to state 76
    UnaryExpr                      shift and go to state 125
    QualifiedIdent                 shift and go to state 79
    ArrayType                      shift and go to state 80
    StructType                     shift and go to state 81
    FunctionType                   shift and go to state 82
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146

state 205

    (153) UnaryExpr -> unary_op UnaryExpr .

    LOR             reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    LAND            reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    EQL             reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    NEQ             reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    LSS             reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    LEQ             reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    GTR             reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    GEQ             reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    ADD             reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    SUB             reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    OR              reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    XOR             reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    MUL             reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    QUO             reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    REM             reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    SHL             reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    SHR             reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    AND             reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    AND_NOT         reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    RBRACK          reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    COMMA           reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    SEMICOLON       reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    RPAREN          reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    ASSIGN          reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    ELLIPSIS        reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    LBRACE          reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)
    COLON           reduce using rule 153 (UnaryExpr -> unary_op UnaryExpr .)


state 206

    (204) ReceiverType -> LPAREN . MUL TypeName RPAREN
    (205) ReceiverType -> LPAREN . ReceiverType RPAREN
    (190) Operand -> LPAREN . Expression RPAREN
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (64) QualifiedIdent -> . IDENT PERIOD IDENT
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING

    MUL             shift and go to state 208
    LPAREN          shift and go to state 206
    IDENT           shift and go to state 210
    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    TypeName                       shift and go to state 148
    ReceiverType                   shift and go to state 209
    Expression                     shift and go to state 207
    UnaryExpr                      shift and go to state 125
    QualifiedIdent                 shift and go to state 79
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146

state 207

    (190) Operand -> LPAREN Expression . RPAREN
    (151) Expression -> Expression . binary_op Expression
    (154) binary_op -> . LOR
    (155) binary_op -> . LAND
    (156) binary_op -> . rel_op
    (157) binary_op -> . add_op
    (158) binary_op -> . mul_op
    (159) rel_op -> . EQL
    (160) rel_op -> . NEQ
    (161) rel_op -> . LSS
    (162) rel_op -> . LEQ
    (163) rel_op -> . GTR
    (164) rel_op -> . GEQ
    (165) add_op -> . ADD
    (166) add_op -> . SUB
    (167) add_op -> . OR
    (168) add_op -> . XOR
    (169) mul_op -> . MUL
    (170) mul_op -> . QUO
    (171) mul_op -> . REM
    (172) mul_op -> . SHL
    (173) mul_op -> . SHR
    (174) mul_op -> . AND
    (175) mul_op -> . AND_NOT

    RPAREN          shift and go to state 258
    LOR             shift and go to state 177
    LAND            shift and go to state 178
    EQL             shift and go to state 182
    NEQ             shift and go to state 183
    LSS             shift and go to state 184
    LEQ             shift and go to state 185
    GTR             shift and go to state 186
    GEQ             shift and go to state 187
    ADD             shift and go to state 188
    SUB             shift and go to state 189
    OR              shift and go to state 190
    XOR             shift and go to state 191
    MUL             shift and go to state 192
    QUO             shift and go to state 193
    REM             shift and go to state 194
    SHL             shift and go to state 195
    SHR             shift and go to state 196
    AND             shift and go to state 197
    AND_NOT         shift and go to state 198

    binary_op                      shift and go to state 176
    rel_op                         shift and go to state 179
    add_op                         shift and go to state 180
    mul_op                         shift and go to state 181

state 208

    (204) ReceiverType -> LPAREN MUL . TypeName RPAREN
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

    IDENT           shift and go to state 78

    TypeName                       shift and go to state 259
    QualifiedIdent                 shift and go to state 79

state 209

    (205) ReceiverType -> LPAREN ReceiverType . RPAREN
    (201) MethodExpr -> ReceiverType . PERIOD MethodName

    RPAREN          shift and go to state 260
    PERIOD          shift and go to state 211


state 210

    (62) TypeName -> IDENT .
    (64) QualifiedIdent -> IDENT . PERIOD IDENT
    (199) OperandName -> IDENT .

  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 62 (TypeName -> IDENT .)
  ! reduce/reduce conflict for COMMA resolved using rule 62 (TypeName -> IDENT .)
  ! reduce/reduce conflict for ELLIPSIS resolved using rule 62 (TypeName -> IDENT .)
    RPAREN          reduce using rule 62 (TypeName -> IDENT .)
    COMMA           reduce using rule 62 (TypeName -> IDENT .)
    ELLIPSIS        reduce using rule 62 (TypeName -> IDENT .)
    PERIOD          shift and go to state 122
    LBRACK          reduce using rule 199 (OperandName -> IDENT .)
    LPAREN          reduce using rule 199 (OperandName -> IDENT .)
    LOR             reduce using rule 199 (OperandName -> IDENT .)
    LAND            reduce using rule 199 (OperandName -> IDENT .)
    EQL             reduce using rule 199 (OperandName -> IDENT .)
    NEQ             reduce using rule 199 (OperandName -> IDENT .)
    LSS             reduce using rule 199 (OperandName -> IDENT .)
    LEQ             reduce using rule 199 (OperandName -> IDENT .)
    GTR             reduce using rule 199 (OperandName -> IDENT .)
    GEQ             reduce using rule 199 (OperandName -> IDENT .)
    ADD             reduce using rule 199 (OperandName -> IDENT .)
    SUB             reduce using rule 199 (OperandName -> IDENT .)
    OR              reduce using rule 199 (OperandName -> IDENT .)
    XOR             reduce using rule 199 (OperandName -> IDENT .)
    MUL             reduce using rule 199 (OperandName -> IDENT .)
    QUO             reduce using rule 199 (OperandName -> IDENT .)
    REM             reduce using rule 199 (OperandName -> IDENT .)
    SHL             reduce using rule 199 (OperandName -> IDENT .)
    SHR             reduce using rule 199 (OperandName -> IDENT .)
    AND             reduce using rule 199 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 199 (OperandName -> IDENT .)

  ! PERIOD          [ reduce using rule 62 (TypeName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 199 (OperandName -> IDENT .) ]
  ! RPAREN          [ reduce using rule 199 (OperandName -> IDENT .) ]
  ! COMMA           [ reduce using rule 199 (OperandName -> IDENT .) ]
  ! ELLIPSIS        [ reduce using rule 199 (OperandName -> IDENT .) ]


state 211

    (201) MethodExpr -> ReceiverType PERIOD . MethodName
    (202) MethodName -> . IDENT

    IDENT           shift and go to state 62

    MethodName                     shift and go to state 261

state 212

    (200) FunctionLit -> FUNC Function .

    PERIOD          reduce using rule 200 (FunctionLit -> FUNC Function .)
    LBRACK          reduce using rule 200 (FunctionLit -> FUNC Function .)
    LPAREN          reduce using rule 200 (FunctionLit -> FUNC Function .)
    LOR             reduce using rule 200 (FunctionLit -> FUNC Function .)
    LAND            reduce using rule 200 (FunctionLit -> FUNC Function .)
    EQL             reduce using rule 200 (FunctionLit -> FUNC Function .)
    NEQ             reduce using rule 200 (FunctionLit -> FUNC Function .)
    LSS             reduce using rule 200 (FunctionLit -> FUNC Function .)
    LEQ             reduce using rule 200 (FunctionLit -> FUNC Function .)
    GTR             reduce using rule 200 (FunctionLit -> FUNC Function .)
    GEQ             reduce using rule 200 (FunctionLit -> FUNC Function .)
    ADD             reduce using rule 200 (FunctionLit -> FUNC Function .)
    SUB             reduce using rule 200 (FunctionLit -> FUNC Function .)
    OR              reduce using rule 200 (FunctionLit -> FUNC Function .)
    XOR             reduce using rule 200 (FunctionLit -> FUNC Function .)
    MUL             reduce using rule 200 (FunctionLit -> FUNC Function .)
    QUO             reduce using rule 200 (FunctionLit -> FUNC Function .)
    REM             reduce using rule 200 (FunctionLit -> FUNC Function .)
    SHL             reduce using rule 200 (FunctionLit -> FUNC Function .)
    SHR             reduce using rule 200 (FunctionLit -> FUNC Function .)
    AND             reduce using rule 200 (FunctionLit -> FUNC Function .)
    AND_NOT         reduce using rule 200 (FunctionLit -> FUNC Function .)
    RBRACK          reduce using rule 200 (FunctionLit -> FUNC Function .)
    COMMA           reduce using rule 200 (FunctionLit -> FUNC Function .)
    SEMICOLON       reduce using rule 200 (FunctionLit -> FUNC Function .)
    RPAREN          reduce using rule 200 (FunctionLit -> FUNC Function .)
    ASSIGN          reduce using rule 200 (FunctionLit -> FUNC Function .)
    ELLIPSIS        reduce using rule 200 (FunctionLit -> FUNC Function .)
    LBRACE          reduce using rule 200 (FunctionLit -> FUNC Function .)
    COLON           reduce using rule 200 (FunctionLit -> FUNC Function .)


state 213

    (116) Function -> Signature . FunctionBody
    (117) FunctionBody -> . Block
    (21) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 101

    FunctionBody                   shift and go to state 99
    Block                          shift and go to state 100

state 214

    (71) StructType -> STRUCT LBRACE FieldDeclList . RBRACE
    (73) FieldDeclList -> FieldDeclList . FieldDecl SEMICOLON
    (74) FieldDecl -> . FieldDeclHead TagTop
    (77) FieldDeclHead -> . IdentifierList Type
    (78) FieldDeclHead -> . EmbeddedField
    (44) IdentifierList -> . IDENT IdentifierBotList
    (79) EmbeddedField -> . starTop TypeName
    (80) starTop -> . empty
    (81) starTop -> . MUL
    (214) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    RBRACE          shift and go to state 262
    IDENT           shift and go to state 42
    MUL             shift and go to state 269

  ! IDENT           [ reduce using rule 214 (empty -> .) ]

    FieldDecl                      shift and go to state 263
    FieldDeclHead                  shift and go to state 264
    IdentifierList                 shift and go to state 265
    EmbeddedField                  shift and go to state 266
    starTop                        shift and go to state 267
    empty                          shift and go to state 268

state 215

    (72) FieldDeclList -> empty .

    RBRACE          reduce using rule 72 (FieldDeclList -> empty .)
    IDENT           reduce using rule 72 (FieldDeclList -> empty .)
    MUL             reduce using rule 72 (FieldDeclList -> empty .)


state 216

    (46) IdentifierBotList -> IdentifierBotList COMMA IDENT .

    COMMA           reduce using rule 46 (IdentifierBotList -> IdentifierBotList COMMA IDENT .)
    LPAREN          reduce using rule 46 (IdentifierBotList -> IdentifierBotList COMMA IDENT .)
    IDENT           reduce using rule 46 (IdentifierBotList -> IdentifierBotList COMMA IDENT .)
    LBRACK          reduce using rule 46 (IdentifierBotList -> IdentifierBotList COMMA IDENT .)
    STRUCT          reduce using rule 46 (IdentifierBotList -> IdentifierBotList COMMA IDENT .)
    FUNC            reduce using rule 46 (IdentifierBotList -> IdentifierBotList COMMA IDENT .)
    ASSIGN          reduce using rule 46 (IdentifierBotList -> IdentifierBotList COMMA IDENT .)
    SEMICOLON       reduce using rule 46 (IdentifierBotList -> IdentifierBotList COMMA IDENT .)
    ELLIPSIS        reduce using rule 46 (IdentifierBotList -> IdentifierBotList COMMA IDENT .)
    DEFINE          reduce using rule 46 (IdentifierBotList -> IdentifierBotList COMMA IDENT .)


state 217

    (54) TypeSpecList -> TypeSpecList TypeSpec SEMICOLON .

    RPAREN          reduce using rule 54 (TypeSpecList -> TypeSpecList TypeSpec SEMICOLON .)
    IDENT           reduce using rule 54 (TypeSpecList -> TypeSpecList TypeSpec SEMICOLON .)


state 218

    (106) VarSpecList -> VarSpecList VarSpec SEMICOLON .

    RPAREN          reduce using rule 106 (VarSpecList -> VarSpecList VarSpec SEMICOLON .)
    IDENT           reduce using rule 106 (VarSpecList -> VarSpecList VarSpec SEMICOLON .)


state 219

    (111) VarSpecMid -> ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 111 (VarSpecMid -> ASSIGN ExpressionList .)


state 220

    (47) ExpressionList -> Expression ExpressionBotList .
    (49) ExpressionBotList -> ExpressionBotList . COMMA Expression

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 47 (ExpressionList -> Expression ExpressionBotList .)
    ADD             reduce using rule 47 (ExpressionList -> Expression ExpressionBotList .)
    SUB             reduce using rule 47 (ExpressionList -> Expression ExpressionBotList .)
    OR              reduce using rule 47 (ExpressionList -> Expression ExpressionBotList .)
    XOR             reduce using rule 47 (ExpressionList -> Expression ExpressionBotList .)
    MUL             reduce using rule 47 (ExpressionList -> Expression ExpressionBotList .)
    QUO             reduce using rule 47 (ExpressionList -> Expression ExpressionBotList .)
    REM             reduce using rule 47 (ExpressionList -> Expression ExpressionBotList .)
    SHL             reduce using rule 47 (ExpressionList -> Expression ExpressionBotList .)
    SHR             reduce using rule 47 (ExpressionList -> Expression ExpressionBotList .)
    AND             reduce using rule 47 (ExpressionList -> Expression ExpressionBotList .)
    AND_NOT         reduce using rule 47 (ExpressionList -> Expression ExpressionBotList .)
    ASSIGN          reduce using rule 47 (ExpressionList -> Expression ExpressionBotList .)
    ELLIPSIS        reduce using rule 47 (ExpressionList -> Expression ExpressionBotList .)
    RPAREN          reduce using rule 47 (ExpressionList -> Expression ExpressionBotList .)
    COLON           reduce using rule 47 (ExpressionList -> Expression ExpressionBotList .)
    COMMA           shift and go to state 270

  ! COMMA           [ reduce using rule 47 (ExpressionList -> Expression ExpressionBotList .) ]


state 221

    (48) ExpressionBotList -> empty .

    COMMA           reduce using rule 48 (ExpressionBotList -> empty .)
    SEMICOLON       reduce using rule 48 (ExpressionBotList -> empty .)
    ELLIPSIS        reduce using rule 48 (ExpressionBotList -> empty .)
    RPAREN          reduce using rule 48 (ExpressionBotList -> empty .)
    COLON           reduce using rule 48 (ExpressionBotList -> empty .)
    ADD             reduce using rule 48 (ExpressionBotList -> empty .)
    SUB             reduce using rule 48 (ExpressionBotList -> empty .)
    OR              reduce using rule 48 (ExpressionBotList -> empty .)
    XOR             reduce using rule 48 (ExpressionBotList -> empty .)
    MUL             reduce using rule 48 (ExpressionBotList -> empty .)
    QUO             reduce using rule 48 (ExpressionBotList -> empty .)
    REM             reduce using rule 48 (ExpressionBotList -> empty .)
    SHL             reduce using rule 48 (ExpressionBotList -> empty .)
    SHR             reduce using rule 48 (ExpressionBotList -> empty .)
    AND             reduce using rule 48 (ExpressionBotList -> empty .)
    AND_NOT         reduce using rule 48 (ExpressionBotList -> empty .)
    ASSIGN          reduce using rule 48 (ExpressionBotList -> empty .)


state 222

    (21) Block -> LBRACE StatementList RBRACE .

    SEMICOLON       reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    PERIOD          reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    LBRACK          reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    LPAREN          reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    LOR             reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    LAND            reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    EQL             reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    NEQ             reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    LSS             reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    LEQ             reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    GTR             reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    GEQ             reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    ADD             reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    SUB             reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    OR              reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    XOR             reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    MUL             reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    QUO             reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    REM             reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    SHL             reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    SHR             reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    AND             reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    AND_NOT         reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    RBRACK          reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    COMMA           reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    RPAREN          reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    ASSIGN          reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    ELLIPSIS        reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    LBRACE          reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    COLON           reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)
    ELSE            reduce using rule 21 (Block -> LBRACE StatementList RBRACE .)


state 223

    (23) StatementList -> StatementList Statement . SEMICOLON

    SEMICOLON       shift and go to state 271


state 224

    (24) Statement -> Declaration .

    SEMICOLON       reduce using rule 24 (Statement -> Declaration .)


state 225

    (25) Statement -> SimpleStmt .

    SEMICOLON       reduce using rule 25 (Statement -> SimpleStmt .)


state 226

    (26) Statement -> ReturnStmt .

    SEMICOLON       reduce using rule 26 (Statement -> ReturnStmt .)


state 227

    (27) Statement -> Block .

    SEMICOLON       reduce using rule 27 (Statement -> Block .)


state 228

    (28) Statement -> IfStmt .

    SEMICOLON       reduce using rule 28 (Statement -> IfStmt .)


state 229

    (29) Statement -> SwitchStmt .

    SEMICOLON       reduce using rule 29 (Statement -> SwitchStmt .)


state 230

    (30) Statement -> ForStmt .

    SEMICOLON       reduce using rule 30 (Statement -> ForStmt .)


state 231

    (120) SimpleStmt -> ExpressionStmt .

    SEMICOLON       reduce using rule 120 (SimpleStmt -> ExpressionStmt .)


state 232

    (121) SimpleStmt -> Assignment .

    SEMICOLON       reduce using rule 121 (SimpleStmt -> Assignment .)


state 233

    (122) SimpleStmt -> ShortVarDecl .

    SEMICOLON       reduce using rule 122 (SimpleStmt -> ShortVarDecl .)


state 234

    (147) ReturnStmt -> RETURN . ExpressionListBot
    (148) ExpressionListBot -> . empty
    (149) ExpressionListBot -> . ExpressionList
    (214) empty -> .
    (47) ExpressionList -> . Expression ExpressionBotList
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

    SEMICOLON       reduce using rule 214 (empty -> .)
    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    LPAREN          shift and go to state 139
    IDENT           shift and go to state 142
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    ExpressionListBot              shift and go to state 272
    empty                          shift and go to state 273
    ExpressionList                 shift and go to state 274
    Expression                     shift and go to state 164
    UnaryExpr                      shift and go to state 125
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146
    TypeName                       shift and go to state 148
    QualifiedIdent                 shift and go to state 79

state 235

    (130) IfStmt -> IF . SimpleStmtBot Expression Block elseBot
    (131) SimpleStmtBot -> . empty
    (132) SimpleStmtBot -> . SimpleStmt SEMICOLON
    (214) empty -> .
    (120) SimpleStmt -> . ExpressionStmt
    (121) SimpleStmt -> . Assignment
    (122) SimpleStmt -> . ShortVarDecl
    (123) ExpressionStmt -> . Expression
    (125) Assignment -> . ExpressionList assign_op ExpressionList
    (124) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (47) ExpressionList -> . Expression ExpressionBotList
    (44) IdentifierList -> . IDENT IdentifierBotList
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ! resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    IDENT           shift and go to state 242
    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    LPAREN          shift and go to state 139
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

  ! +               [ reduce using rule 214 (empty -> .) ]
  ! -               [ reduce using rule 214 (empty -> .) ]
  ! !               [ reduce using rule 214 (empty -> .) ]
  ! ^               [ reduce using rule 214 (empty -> .) ]
  ! *               [ reduce using rule 214 (empty -> .) ]
  ! &               [ reduce using rule 214 (empty -> .) ]
  ! CHAN            [ reduce using rule 214 (empty -> .) ]
  ! LPAREN          [ reduce using rule 214 (empty -> .) ]
  ! IDENT           [ reduce using rule 214 (empty -> .) ]
  ! FUNC            [ reduce using rule 214 (empty -> .) ]
  ! INT             [ reduce using rule 214 (empty -> .) ]
  ! FLOAT           [ reduce using rule 214 (empty -> .) ]
  ! STRING          [ reduce using rule 214 (empty -> .) ]

    SimpleStmtBot                  shift and go to state 275
    Expression                     shift and go to state 236
    empty                          shift and go to state 276
    SimpleStmt                     shift and go to state 277
    ExpressionStmt                 shift and go to state 231
    Assignment                     shift and go to state 232
    ShortVarDecl                   shift and go to state 233
    ExpressionList                 shift and go to state 239
    IdentifierList                 shift and go to state 240
    UnaryExpr                      shift and go to state 125
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146
    TypeName                       shift and go to state 148
    QualifiedIdent                 shift and go to state 79

state 236

    (123) ExpressionStmt -> Expression .
    (151) Expression -> Expression . binary_op Expression
    (47) ExpressionList -> Expression . ExpressionBotList
    (154) binary_op -> . LOR
    (155) binary_op -> . LAND
    (156) binary_op -> . rel_op
    (157) binary_op -> . add_op
    (158) binary_op -> . mul_op
    (48) ExpressionBotList -> . empty
    (49) ExpressionBotList -> . ExpressionBotList COMMA Expression
    (159) rel_op -> . EQL
    (160) rel_op -> . NEQ
    (161) rel_op -> . LSS
    (162) rel_op -> . LEQ
    (163) rel_op -> . GTR
    (164) rel_op -> . GEQ
    (165) add_op -> . ADD
    (166) add_op -> . SUB
    (167) add_op -> . OR
    (168) add_op -> . XOR
    (169) mul_op -> . MUL
    (170) mul_op -> . QUO
    (171) mul_op -> . REM
    (172) mul_op -> . SHL
    (173) mul_op -> . SHR
    (174) mul_op -> . AND
    (175) mul_op -> . AND_NOT
    (214) empty -> .

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for QUO resolved as shift
  ! shift/reduce conflict for REM resolved as shift
  ! shift/reduce conflict for SHL resolved as shift
  ! shift/reduce conflict for SHR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for AND_NOT resolved as shift
    SEMICOLON       reduce using rule 123 (ExpressionStmt -> Expression .)
    LOR             shift and go to state 177
    LAND            shift and go to state 178
    EQL             shift and go to state 182
    NEQ             shift and go to state 183
    LSS             shift and go to state 184
    LEQ             shift and go to state 185
    GTR             shift and go to state 186
    GEQ             shift and go to state 187
    ADD             shift and go to state 188
    SUB             shift and go to state 189
    OR              shift and go to state 190
    XOR             shift and go to state 191
    MUL             shift and go to state 192
    QUO             shift and go to state 193
    REM             shift and go to state 194
    SHL             shift and go to state 195
    SHR             shift and go to state 196
    AND             shift and go to state 197
    AND_NOT         shift and go to state 198
    COMMA           reduce using rule 214 (empty -> .)
    ASSIGN          reduce using rule 214 (empty -> .)

  ! ADD             [ reduce using rule 214 (empty -> .) ]
  ! SUB             [ reduce using rule 214 (empty -> .) ]
  ! OR              [ reduce using rule 214 (empty -> .) ]
  ! XOR             [ reduce using rule 214 (empty -> .) ]
  ! MUL             [ reduce using rule 214 (empty -> .) ]
  ! QUO             [ reduce using rule 214 (empty -> .) ]
  ! REM             [ reduce using rule 214 (empty -> .) ]
  ! SHL             [ reduce using rule 214 (empty -> .) ]
  ! SHR             [ reduce using rule 214 (empty -> .) ]
  ! AND             [ reduce using rule 214 (empty -> .) ]
  ! AND_NOT         [ reduce using rule 214 (empty -> .) ]

    binary_op                      shift and go to state 176
    ExpressionBotList              shift and go to state 220
    rel_op                         shift and go to state 179
    add_op                         shift and go to state 180
    mul_op                         shift and go to state 181
    empty                          shift and go to state 221

state 237

    (137) SwitchStmt -> ExprSwitchStmt .

    SEMICOLON       reduce using rule 137 (SwitchStmt -> ExprSwitchStmt .)


state 238

    (144) ForStmt -> FOR . ExpressionBot Block
    (145) ExpressionBot -> . empty
    (146) ExpressionBot -> . Expression
    (214) empty -> .
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

    LBRACE          reduce using rule 214 (empty -> .)
    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    LPAREN          shift and go to state 139
    IDENT           shift and go to state 142
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    ExpressionBot                  shift and go to state 278
    empty                          shift and go to state 279
    Expression                     shift and go to state 280
    UnaryExpr                      shift and go to state 125
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146
    TypeName                       shift and go to state 148
    QualifiedIdent                 shift and go to state 79

state 239

    (125) Assignment -> ExpressionList . assign_op ExpressionList
    (126) assign_op -> . addmul_op ASSIGN
    (127) addmul_op -> . empty
    (128) addmul_op -> . add_op
    (129) addmul_op -> . mul_op
    (214) empty -> .
    (165) add_op -> . ADD
    (166) add_op -> . SUB
    (167) add_op -> . OR
    (168) add_op -> . XOR
    (169) mul_op -> . MUL
    (170) mul_op -> . QUO
    (171) mul_op -> . REM
    (172) mul_op -> . SHL
    (173) mul_op -> . SHR
    (174) mul_op -> . AND
    (175) mul_op -> . AND_NOT

    ASSIGN          reduce using rule 214 (empty -> .)
    ADD             shift and go to state 188
    SUB             shift and go to state 189
    OR              shift and go to state 190
    XOR             shift and go to state 191
    MUL             shift and go to state 192
    QUO             shift and go to state 193
    REM             shift and go to state 194
    SHL             shift and go to state 195
    SHR             shift and go to state 196
    AND             shift and go to state 197
    AND_NOT         shift and go to state 198

    assign_op                      shift and go to state 281
    addmul_op                      shift and go to state 282
    empty                          shift and go to state 283
    add_op                         shift and go to state 284
    mul_op                         shift and go to state 285

state 240

    (124) ShortVarDecl -> IdentifierList . DEFINE ExpressionList

    DEFINE          shift and go to state 286


state 241

    (138) ExprSwitchStmt -> SWITCH . SimpleStmtBot ExpressionBot LBRACE ExprCaseClauseList RBRACE
    (131) SimpleStmtBot -> . empty
    (132) SimpleStmtBot -> . SimpleStmt SEMICOLON
    (214) empty -> .
    (120) SimpleStmt -> . ExpressionStmt
    (121) SimpleStmt -> . Assignment
    (122) SimpleStmt -> . ShortVarDecl
    (123) ExpressionStmt -> . Expression
    (125) Assignment -> . ExpressionList assign_op ExpressionList
    (124) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (47) ExpressionList -> . Expression ExpressionBotList
    (44) IdentifierList -> . IDENT IdentifierBotList
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ! resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    LBRACE          reduce using rule 214 (empty -> .)
    IDENT           shift and go to state 242
    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    LPAREN          shift and go to state 139
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

  ! +               [ reduce using rule 214 (empty -> .) ]
  ! -               [ reduce using rule 214 (empty -> .) ]
  ! !               [ reduce using rule 214 (empty -> .) ]
  ! ^               [ reduce using rule 214 (empty -> .) ]
  ! *               [ reduce using rule 214 (empty -> .) ]
  ! &               [ reduce using rule 214 (empty -> .) ]
  ! CHAN            [ reduce using rule 214 (empty -> .) ]
  ! LPAREN          [ reduce using rule 214 (empty -> .) ]
  ! IDENT           [ reduce using rule 214 (empty -> .) ]
  ! FUNC            [ reduce using rule 214 (empty -> .) ]
  ! INT             [ reduce using rule 214 (empty -> .) ]
  ! FLOAT           [ reduce using rule 214 (empty -> .) ]
  ! STRING          [ reduce using rule 214 (empty -> .) ]

    SimpleStmtBot                  shift and go to state 287
    empty                          shift and go to state 276
    SimpleStmt                     shift and go to state 277
    ExpressionStmt                 shift and go to state 231
    Assignment                     shift and go to state 232
    ShortVarDecl                   shift and go to state 233
    Expression                     shift and go to state 236
    ExpressionList                 shift and go to state 239
    IdentifierList                 shift and go to state 240
    UnaryExpr                      shift and go to state 125
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146
    TypeName                       shift and go to state 148
    QualifiedIdent                 shift and go to state 79

state 242

    (44) IdentifierList -> IDENT . IdentifierBotList
    (199) OperandName -> IDENT .
    (62) TypeName -> IDENT .
    (64) QualifiedIdent -> IDENT . PERIOD IDENT
    (45) IdentifierBotList -> . empty
    (46) IdentifierBotList -> . IdentifierBotList COMMA IDENT
    (214) empty -> .

  ! reduce/reduce conflict for PERIOD resolved using rule 62 (TypeName -> IDENT .)
  ! shift/reduce conflict for PERIOD resolved as shift
  ! reduce/reduce conflict for COMMA resolved using rule 199 (OperandName -> IDENT .)
    LBRACK          reduce using rule 199 (OperandName -> IDENT .)
    LPAREN          reduce using rule 199 (OperandName -> IDENT .)
    LOR             reduce using rule 199 (OperandName -> IDENT .)
    LAND            reduce using rule 199 (OperandName -> IDENT .)
    EQL             reduce using rule 199 (OperandName -> IDENT .)
    NEQ             reduce using rule 199 (OperandName -> IDENT .)
    LSS             reduce using rule 199 (OperandName -> IDENT .)
    LEQ             reduce using rule 199 (OperandName -> IDENT .)
    GTR             reduce using rule 199 (OperandName -> IDENT .)
    GEQ             reduce using rule 199 (OperandName -> IDENT .)
    ADD             reduce using rule 199 (OperandName -> IDENT .)
    SUB             reduce using rule 199 (OperandName -> IDENT .)
    OR              reduce using rule 199 (OperandName -> IDENT .)
    XOR             reduce using rule 199 (OperandName -> IDENT .)
    MUL             reduce using rule 199 (OperandName -> IDENT .)
    QUO             reduce using rule 199 (OperandName -> IDENT .)
    REM             reduce using rule 199 (OperandName -> IDENT .)
    SHL             reduce using rule 199 (OperandName -> IDENT .)
    SHR             reduce using rule 199 (OperandName -> IDENT .)
    AND             reduce using rule 199 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 199 (OperandName -> IDENT .)
    COMMA           reduce using rule 199 (OperandName -> IDENT .)
    SEMICOLON       reduce using rule 199 (OperandName -> IDENT .)
    ASSIGN          reduce using rule 199 (OperandName -> IDENT .)
    PERIOD          shift and go to state 122
    DEFINE          reduce using rule 214 (empty -> .)

  ! PERIOD          [ reduce using rule 199 (OperandName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 62 (TypeName -> IDENT .) ]
  ! COMMA           [ reduce using rule 214 (empty -> .) ]

    IdentifierBotList              shift and go to state 86
    empty                          shift and go to state 87

state 243

    (96) ParameterDeclList -> ParameterDeclList COMMA ParameterDecl .

    COMMA           reduce using rule 96 (ParameterDeclList -> ParameterDeclList COMMA ParameterDecl .)
    RPAREN          reduce using rule 96 (ParameterDeclList -> ParameterDeclList COMMA ParameterDecl .)


state 244

    (100) ParameterDeclHead -> empty .

    ELLIPSIS        reduce using rule 100 (ParameterDeclHead -> empty .)
    LPAREN          reduce using rule 100 (ParameterDeclHead -> empty .)
    IDENT           reduce using rule 100 (ParameterDeclHead -> empty .)
    LBRACK          reduce using rule 100 (ParameterDeclHead -> empty .)
    STRUCT          reduce using rule 100 (ParameterDeclHead -> empty .)
    FUNC            reduce using rule 100 (ParameterDeclHead -> empty .)


state 245

    (68) ArrayType -> LBRACK ArrayLength RBRACK ElementType .

    ASSIGN          reduce using rule 68 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    SEMICOLON       reduce using rule 68 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    LBRACE          reduce using rule 68 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    RPAREN          reduce using rule 68 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    COMMA           reduce using rule 68 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    ELLIPSIS        reduce using rule 68 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    STRING          reduce using rule 68 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)


state 246

    (70) ElementType -> Type .

    LBRACE          reduce using rule 70 (ElementType -> Type .)
    SEMICOLON       reduce using rule 70 (ElementType -> Type .)
    ASSIGN          reduce using rule 70 (ElementType -> Type .)
    RPAREN          reduce using rule 70 (ElementType -> Type .)
    COMMA           reduce using rule 70 (ElementType -> Type .)
    ELLIPSIS        reduce using rule 70 (ElementType -> Type .)
    STRING          reduce using rule 70 (ElementType -> Type .)


state 247

    (151) Expression -> Expression binary_op Expression .
    (151) Expression -> Expression . binary_op Expression
    (154) binary_op -> . LOR
    (155) binary_op -> . LAND
    (156) binary_op -> . rel_op
    (157) binary_op -> . add_op
    (158) binary_op -> . mul_op
    (159) rel_op -> . EQL
    (160) rel_op -> . NEQ
    (161) rel_op -> . LSS
    (162) rel_op -> . LEQ
    (163) rel_op -> . GTR
    (164) rel_op -> . GEQ
    (165) add_op -> . ADD
    (166) add_op -> . SUB
    (167) add_op -> . OR
    (168) add_op -> . XOR
    (169) mul_op -> . MUL
    (170) mul_op -> . QUO
    (171) mul_op -> . REM
    (172) mul_op -> . SHL
    (173) mul_op -> . SHR
    (174) mul_op -> . AND
    (175) mul_op -> . AND_NOT

  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for EQL resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GTR resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for QUO resolved as shift
  ! shift/reduce conflict for REM resolved as shift
  ! shift/reduce conflict for SHL resolved as shift
  ! shift/reduce conflict for SHR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for AND_NOT resolved as shift
    RBRACK          reduce using rule 151 (Expression -> Expression binary_op Expression .)
    COMMA           reduce using rule 151 (Expression -> Expression binary_op Expression .)
    SEMICOLON       reduce using rule 151 (Expression -> Expression binary_op Expression .)
    RPAREN          reduce using rule 151 (Expression -> Expression binary_op Expression .)
    ASSIGN          reduce using rule 151 (Expression -> Expression binary_op Expression .)
    ELLIPSIS        reduce using rule 151 (Expression -> Expression binary_op Expression .)
    LBRACE          reduce using rule 151 (Expression -> Expression binary_op Expression .)
    COLON           reduce using rule 151 (Expression -> Expression binary_op Expression .)
    LOR             shift and go to state 177
    LAND            shift and go to state 178
    EQL             shift and go to state 182
    NEQ             shift and go to state 183
    LSS             shift and go to state 184
    LEQ             shift and go to state 185
    GTR             shift and go to state 186
    GEQ             shift and go to state 187
    ADD             shift and go to state 188
    SUB             shift and go to state 189
    OR              shift and go to state 190
    XOR             shift and go to state 191
    MUL             shift and go to state 192
    QUO             shift and go to state 193
    REM             shift and go to state 194
    SHL             shift and go to state 195
    SHR             shift and go to state 196
    AND             shift and go to state 197
    AND_NOT         shift and go to state 198

  ! LOR             [ reduce using rule 151 (Expression -> Expression binary_op Expression .) ]
  ! LAND            [ reduce using rule 151 (Expression -> Expression binary_op Expression .) ]
  ! EQL             [ reduce using rule 151 (Expression -> Expression binary_op Expression .) ]
  ! NEQ             [ reduce using rule 151 (Expression -> Expression binary_op Expression .) ]
  ! LSS             [ reduce using rule 151 (Expression -> Expression binary_op Expression .) ]
  ! LEQ             [ reduce using rule 151 (Expression -> Expression binary_op Expression .) ]
  ! GTR             [ reduce using rule 151 (Expression -> Expression binary_op Expression .) ]
  ! GEQ             [ reduce using rule 151 (Expression -> Expression binary_op Expression .) ]
  ! ADD             [ reduce using rule 151 (Expression -> Expression binary_op Expression .) ]
  ! SUB             [ reduce using rule 151 (Expression -> Expression binary_op Expression .) ]
  ! OR              [ reduce using rule 151 (Expression -> Expression binary_op Expression .) ]
  ! XOR             [ reduce using rule 151 (Expression -> Expression binary_op Expression .) ]
  ! MUL             [ reduce using rule 151 (Expression -> Expression binary_op Expression .) ]
  ! QUO             [ reduce using rule 151 (Expression -> Expression binary_op Expression .) ]
  ! REM             [ reduce using rule 151 (Expression -> Expression binary_op Expression .) ]
  ! SHL             [ reduce using rule 151 (Expression -> Expression binary_op Expression .) ]
  ! SHR             [ reduce using rule 151 (Expression -> Expression binary_op Expression .) ]
  ! AND             [ reduce using rule 151 (Expression -> Expression binary_op Expression .) ]
  ! AND_NOT         [ reduce using rule 151 (Expression -> Expression binary_op Expression .) ]

    binary_op                      shift and go to state 176
    rel_op                         shift and go to state 179
    add_op                         shift and go to state 180
    mul_op                         shift and go to state 181

state 248

    (206) Selector -> PERIOD IDENT .

    PERIOD          reduce using rule 206 (Selector -> PERIOD IDENT .)
    LBRACK          reduce using rule 206 (Selector -> PERIOD IDENT .)
    LPAREN          reduce using rule 206 (Selector -> PERIOD IDENT .)
    LOR             reduce using rule 206 (Selector -> PERIOD IDENT .)
    LAND            reduce using rule 206 (Selector -> PERIOD IDENT .)
    EQL             reduce using rule 206 (Selector -> PERIOD IDENT .)
    NEQ             reduce using rule 206 (Selector -> PERIOD IDENT .)
    LSS             reduce using rule 206 (Selector -> PERIOD IDENT .)
    LEQ             reduce using rule 206 (Selector -> PERIOD IDENT .)
    GTR             reduce using rule 206 (Selector -> PERIOD IDENT .)
    GEQ             reduce using rule 206 (Selector -> PERIOD IDENT .)
    ADD             reduce using rule 206 (Selector -> PERIOD IDENT .)
    SUB             reduce using rule 206 (Selector -> PERIOD IDENT .)
    OR              reduce using rule 206 (Selector -> PERIOD IDENT .)
    XOR             reduce using rule 206 (Selector -> PERIOD IDENT .)
    MUL             reduce using rule 206 (Selector -> PERIOD IDENT .)
    QUO             reduce using rule 206 (Selector -> PERIOD IDENT .)
    REM             reduce using rule 206 (Selector -> PERIOD IDENT .)
    SHL             reduce using rule 206 (Selector -> PERIOD IDENT .)
    SHR             reduce using rule 206 (Selector -> PERIOD IDENT .)
    AND             reduce using rule 206 (Selector -> PERIOD IDENT .)
    AND_NOT         reduce using rule 206 (Selector -> PERIOD IDENT .)
    RBRACK          reduce using rule 206 (Selector -> PERIOD IDENT .)
    COMMA           reduce using rule 206 (Selector -> PERIOD IDENT .)
    SEMICOLON       reduce using rule 206 (Selector -> PERIOD IDENT .)
    RPAREN          reduce using rule 206 (Selector -> PERIOD IDENT .)
    ASSIGN          reduce using rule 206 (Selector -> PERIOD IDENT .)
    ELLIPSIS        reduce using rule 206 (Selector -> PERIOD IDENT .)
    LBRACE          reduce using rule 206 (Selector -> PERIOD IDENT .)
    COLON           reduce using rule 206 (Selector -> PERIOD IDENT .)


state 249

    (207) Index -> LBRACK Expression . RBRACK
    (151) Expression -> Expression . binary_op Expression
    (154) binary_op -> . LOR
    (155) binary_op -> . LAND
    (156) binary_op -> . rel_op
    (157) binary_op -> . add_op
    (158) binary_op -> . mul_op
    (159) rel_op -> . EQL
    (160) rel_op -> . NEQ
    (161) rel_op -> . LSS
    (162) rel_op -> . LEQ
    (163) rel_op -> . GTR
    (164) rel_op -> . GEQ
    (165) add_op -> . ADD
    (166) add_op -> . SUB
    (167) add_op -> . OR
    (168) add_op -> . XOR
    (169) mul_op -> . MUL
    (170) mul_op -> . QUO
    (171) mul_op -> . REM
    (172) mul_op -> . SHL
    (173) mul_op -> . SHR
    (174) mul_op -> . AND
    (175) mul_op -> . AND_NOT

    RBRACK          shift and go to state 288
    LOR             shift and go to state 177
    LAND            shift and go to state 178
    EQL             shift and go to state 182
    NEQ             shift and go to state 183
    LSS             shift and go to state 184
    LEQ             shift and go to state 185
    GTR             shift and go to state 186
    GEQ             shift and go to state 187
    ADD             shift and go to state 188
    SUB             shift and go to state 189
    OR              shift and go to state 190
    XOR             shift and go to state 191
    MUL             shift and go to state 192
    QUO             shift and go to state 193
    REM             shift and go to state 194
    SHL             shift and go to state 195
    SHR             shift and go to state 196
    AND             shift and go to state 197
    AND_NOT         shift and go to state 198

    binary_op                      shift and go to state 176
    rel_op                         shift and go to state 179
    add_op                         shift and go to state 180
    mul_op                         shift and go to state 181

state 250

    (61) Type -> LPAREN . Type RPAREN
    (190) Operand -> LPAREN . Expression RPAREN
    (204) ReceiverType -> LPAREN . MUL TypeName RPAREN
    (205) ReceiverType -> LPAREN . ReceiverType RPAREN
    (59) Type -> . TypeName
    (60) Type -> . TypeLit
    (61) Type -> . LPAREN Type RPAREN
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (65) TypeLit -> . ArrayType
    (66) TypeLit -> . StructType
    (67) TypeLit -> . FunctionType
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (64) QualifiedIdent -> . IDENT PERIOD IDENT
    (68) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (71) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (83) FunctionType -> . FUNC Signature
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING

    MUL             shift and go to state 208
    LPAREN          shift and go to state 289
    IDENT           shift and go to state 210
    LBRACK          shift and go to state 83
    STRUCT          shift and go to state 84
    FUNC            shift and go to state 257
    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    Type                           shift and go to state 121
    Expression                     shift and go to state 207
    TypeName                       shift and go to state 256
    ReceiverType                   shift and go to state 209
    TypeLit                        shift and go to state 76
    UnaryExpr                      shift and go to state 125
    QualifiedIdent                 shift and go to state 79
    ArrayType                      shift and go to state 80
    StructType                     shift and go to state 81
    FunctionType                   shift and go to state 82
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146

state 251

    (208) Arguments -> LPAREN ArgumentsHead . RPAREN

    RPAREN          shift and go to state 290


state 252

    (209) ArgumentsHead -> empty .

    RPAREN          reduce using rule 209 (ArgumentsHead -> empty .)


state 253

    (210) ArgumentsHead -> ArgumentsHeadMid . tripledotTop commaTop
    (98) tripledotTop -> . empty
    (99) tripledotTop -> . ELLIPSIS
    (214) empty -> .

    ELLIPSIS        shift and go to state 117
    COMMA           reduce using rule 214 (empty -> .)
    RPAREN          reduce using rule 214 (empty -> .)

    tripledotTop                   shift and go to state 291
    empty                          shift and go to state 116

state 254

    (211) ArgumentsHeadMid -> ExpressionList .

    ELLIPSIS        reduce using rule 211 (ArgumentsHeadMid -> ExpressionList .)
    COMMA           reduce using rule 211 (ArgumentsHeadMid -> ExpressionList .)
    RPAREN          reduce using rule 211 (ArgumentsHeadMid -> ExpressionList .)


state 255

    (212) ArgumentsHeadMid -> Type . COMMA ExpressionList
    (213) ArgumentsHeadMid -> Type .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 292
    ELLIPSIS        reduce using rule 213 (ArgumentsHeadMid -> Type .)
    RPAREN          reduce using rule 213 (ArgumentsHeadMid -> Type .)

  ! COMMA           [ reduce using rule 213 (ArgumentsHeadMid -> Type .) ]


state 256

    (59) Type -> TypeName .
    (203) ReceiverType -> TypeName .

  ! reduce/reduce conflict for RPAREN resolved using rule 59 (Type -> TypeName .)
    COMMA           reduce using rule 59 (Type -> TypeName .)
    ELLIPSIS        reduce using rule 59 (Type -> TypeName .)
    RPAREN          reduce using rule 59 (Type -> TypeName .)
    PERIOD          reduce using rule 203 (ReceiverType -> TypeName .)

  ! RPAREN          [ reduce using rule 203 (ReceiverType -> TypeName .) ]


state 257

    (83) FunctionType -> FUNC . Signature
    (200) FunctionLit -> FUNC . Function
    (84) Signature -> . Parameters ResultTop
    (116) Function -> . Signature FunctionBody
    (89) Parameters -> . LPAREN ParameterListTop RPAREN

    LPAREN          shift and go to state 37

    Signature                      shift and go to state 293
    Function                       shift and go to state 212
    Parameters                     shift and go to state 60

state 258

    (190) Operand -> LPAREN Expression RPAREN .

    PERIOD          reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    LBRACK          reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    LOR             reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    LAND            reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    EQL             reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    NEQ             reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    LSS             reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    LEQ             reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    GTR             reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    GEQ             reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    ADD             reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    SUB             reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    OR              reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    XOR             reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    MUL             reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    QUO             reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    REM             reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    SHL             reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    SHR             reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    AND             reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    AND_NOT         reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    ASSIGN          reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    ELLIPSIS        reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 190 (Operand -> LPAREN Expression RPAREN .)


state 259

    (204) ReceiverType -> LPAREN MUL TypeName . RPAREN

    RPAREN          shift and go to state 294


state 260

    (205) ReceiverType -> LPAREN ReceiverType RPAREN .

    PERIOD          reduce using rule 205 (ReceiverType -> LPAREN ReceiverType RPAREN .)
    RPAREN          reduce using rule 205 (ReceiverType -> LPAREN ReceiverType RPAREN .)


state 261

    (201) MethodExpr -> ReceiverType PERIOD MethodName .

    PERIOD          reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LBRACK          reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LPAREN          reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LOR             reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LAND            reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    EQL             reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    NEQ             reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LSS             reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LEQ             reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    GTR             reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    GEQ             reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    ADD             reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    SUB             reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    OR              reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    XOR             reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    MUL             reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    QUO             reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    REM             reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    SHL             reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    SHR             reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    AND             reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    AND_NOT         reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    RBRACK          reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    COMMA           reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    SEMICOLON       reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    RPAREN          reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    ASSIGN          reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    ELLIPSIS        reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LBRACE          reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)
    COLON           reduce using rule 201 (MethodExpr -> ReceiverType PERIOD MethodName .)


state 262

    (71) StructType -> STRUCT LBRACE FieldDeclList RBRACE .

    ASSIGN          reduce using rule 71 (StructType -> STRUCT LBRACE FieldDeclList RBRACE .)
    SEMICOLON       reduce using rule 71 (StructType -> STRUCT LBRACE FieldDeclList RBRACE .)
    LBRACE          reduce using rule 71 (StructType -> STRUCT LBRACE FieldDeclList RBRACE .)
    RPAREN          reduce using rule 71 (StructType -> STRUCT LBRACE FieldDeclList RBRACE .)
    COMMA           reduce using rule 71 (StructType -> STRUCT LBRACE FieldDeclList RBRACE .)
    ELLIPSIS        reduce using rule 71 (StructType -> STRUCT LBRACE FieldDeclList RBRACE .)
    STRING          reduce using rule 71 (StructType -> STRUCT LBRACE FieldDeclList RBRACE .)


state 263

    (73) FieldDeclList -> FieldDeclList FieldDecl . SEMICOLON

    SEMICOLON       shift and go to state 295


state 264

    (74) FieldDecl -> FieldDeclHead . TagTop
    (75) TagTop -> . empty
    (76) TagTop -> . Tag
    (214) empty -> .
    (82) Tag -> . string_lit
    (198) string_lit -> . STRING

    SEMICOLON       reduce using rule 214 (empty -> .)
    STRING          shift and go to state 151

    TagTop                         shift and go to state 296
    empty                          shift and go to state 297
    Tag                            shift and go to state 298
    string_lit                     shift and go to state 299

state 265

    (77) FieldDeclHead -> IdentifierList . Type
    (59) Type -> . TypeName
    (60) Type -> . TypeLit
    (61) Type -> . LPAREN Type RPAREN
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (65) TypeLit -> . ArrayType
    (66) TypeLit -> . StructType
    (67) TypeLit -> . FunctionType
    (64) QualifiedIdent -> . IDENT PERIOD IDENT
    (68) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (71) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (83) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 77
    IDENT           shift and go to state 78
    LBRACK          shift and go to state 83
    STRUCT          shift and go to state 84
    FUNC            shift and go to state 85

    Type                           shift and go to state 300
    TypeName                       shift and go to state 75
    TypeLit                        shift and go to state 76
    QualifiedIdent                 shift and go to state 79
    ArrayType                      shift and go to state 80
    StructType                     shift and go to state 81
    FunctionType                   shift and go to state 82

state 266

    (78) FieldDeclHead -> EmbeddedField .

    STRING          reduce using rule 78 (FieldDeclHead -> EmbeddedField .)
    SEMICOLON       reduce using rule 78 (FieldDeclHead -> EmbeddedField .)


state 267

    (79) EmbeddedField -> starTop . TypeName
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

    IDENT           shift and go to state 78

    TypeName                       shift and go to state 301
    QualifiedIdent                 shift and go to state 79

state 268

    (80) starTop -> empty .

    IDENT           reduce using rule 80 (starTop -> empty .)


state 269

    (81) starTop -> MUL .

    IDENT           reduce using rule 81 (starTop -> MUL .)


state 270

    (49) ExpressionBotList -> ExpressionBotList COMMA . Expression
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    LPAREN          shift and go to state 139
    IDENT           shift and go to state 142
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    Expression                     shift and go to state 302
    UnaryExpr                      shift and go to state 125
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146
    TypeName                       shift and go to state 148
    QualifiedIdent                 shift and go to state 79

state 271

    (23) StatementList -> StatementList Statement SEMICOLON .

    RBRACE          reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    RETURN          reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    LBRACE          reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    IF              reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    FOR             reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    CONST           reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    TYPE            reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    VAR             reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    SWITCH          reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    IDENT           reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    +               reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    -               reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    !               reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    ^               reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    *               reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    &               reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    CHAN            reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    LPAREN          reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    FUNC            reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    INT             reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    FLOAT           reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    STRING          reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    CASE            reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)
    DEFAULT         reduce using rule 23 (StatementList -> StatementList Statement SEMICOLON .)


state 272

    (147) ReturnStmt -> RETURN ExpressionListBot .

    SEMICOLON       reduce using rule 147 (ReturnStmt -> RETURN ExpressionListBot .)


state 273

    (148) ExpressionListBot -> empty .

    SEMICOLON       reduce using rule 148 (ExpressionListBot -> empty .)


state 274

    (149) ExpressionListBot -> ExpressionList .

    SEMICOLON       reduce using rule 149 (ExpressionListBot -> ExpressionList .)


state 275

    (130) IfStmt -> IF SimpleStmtBot . Expression Block elseBot
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    LPAREN          shift and go to state 139
    IDENT           shift and go to state 142
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    Expression                     shift and go to state 303
    UnaryExpr                      shift and go to state 125
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146
    TypeName                       shift and go to state 148
    QualifiedIdent                 shift and go to state 79

state 276

    (131) SimpleStmtBot -> empty .

    +               reduce using rule 131 (SimpleStmtBot -> empty .)
    -               reduce using rule 131 (SimpleStmtBot -> empty .)
    !               reduce using rule 131 (SimpleStmtBot -> empty .)
    ^               reduce using rule 131 (SimpleStmtBot -> empty .)
    *               reduce using rule 131 (SimpleStmtBot -> empty .)
    &               reduce using rule 131 (SimpleStmtBot -> empty .)
    CHAN            reduce using rule 131 (SimpleStmtBot -> empty .)
    LPAREN          reduce using rule 131 (SimpleStmtBot -> empty .)
    IDENT           reduce using rule 131 (SimpleStmtBot -> empty .)
    FUNC            reduce using rule 131 (SimpleStmtBot -> empty .)
    INT             reduce using rule 131 (SimpleStmtBot -> empty .)
    FLOAT           reduce using rule 131 (SimpleStmtBot -> empty .)
    STRING          reduce using rule 131 (SimpleStmtBot -> empty .)
    LBRACE          reduce using rule 131 (SimpleStmtBot -> empty .)


state 277

    (132) SimpleStmtBot -> SimpleStmt . SEMICOLON

    SEMICOLON       shift and go to state 304


state 278

    (144) ForStmt -> FOR ExpressionBot . Block
    (21) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 101

    Block                          shift and go to state 305

state 279

    (145) ExpressionBot -> empty .

    LBRACE          reduce using rule 145 (ExpressionBot -> empty .)


state 280

    (146) ExpressionBot -> Expression .
    (151) Expression -> Expression . binary_op Expression
    (154) binary_op -> . LOR
    (155) binary_op -> . LAND
    (156) binary_op -> . rel_op
    (157) binary_op -> . add_op
    (158) binary_op -> . mul_op
    (159) rel_op -> . EQL
    (160) rel_op -> . NEQ
    (161) rel_op -> . LSS
    (162) rel_op -> . LEQ
    (163) rel_op -> . GTR
    (164) rel_op -> . GEQ
    (165) add_op -> . ADD
    (166) add_op -> . SUB
    (167) add_op -> . OR
    (168) add_op -> . XOR
    (169) mul_op -> . MUL
    (170) mul_op -> . QUO
    (171) mul_op -> . REM
    (172) mul_op -> . SHL
    (173) mul_op -> . SHR
    (174) mul_op -> . AND
    (175) mul_op -> . AND_NOT

    LBRACE          reduce using rule 146 (ExpressionBot -> Expression .)
    LOR             shift and go to state 177
    LAND            shift and go to state 178
    EQL             shift and go to state 182
    NEQ             shift and go to state 183
    LSS             shift and go to state 184
    LEQ             shift and go to state 185
    GTR             shift and go to state 186
    GEQ             shift and go to state 187
    ADD             shift and go to state 188
    SUB             shift and go to state 189
    OR              shift and go to state 190
    XOR             shift and go to state 191
    MUL             shift and go to state 192
    QUO             shift and go to state 193
    REM             shift and go to state 194
    SHL             shift and go to state 195
    SHR             shift and go to state 196
    AND             shift and go to state 197
    AND_NOT         shift and go to state 198

    binary_op                      shift and go to state 176
    rel_op                         shift and go to state 179
    add_op                         shift and go to state 180
    mul_op                         shift and go to state 181

state 281

    (125) Assignment -> ExpressionList assign_op . ExpressionList
    (47) ExpressionList -> . Expression ExpressionBotList
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    LPAREN          shift and go to state 139
    IDENT           shift and go to state 142
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    ExpressionList                 shift and go to state 306
    Expression                     shift and go to state 164
    UnaryExpr                      shift and go to state 125
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146
    TypeName                       shift and go to state 148
    QualifiedIdent                 shift and go to state 79

state 282

    (126) assign_op -> addmul_op . ASSIGN

    ASSIGN          shift and go to state 307


state 283

    (127) addmul_op -> empty .

    ASSIGN          reduce using rule 127 (addmul_op -> empty .)


state 284

    (128) addmul_op -> add_op .

    ASSIGN          reduce using rule 128 (addmul_op -> add_op .)


state 285

    (129) addmul_op -> mul_op .

    ASSIGN          reduce using rule 129 (addmul_op -> mul_op .)


state 286

    (124) ShortVarDecl -> IdentifierList DEFINE . ExpressionList
    (47) ExpressionList -> . Expression ExpressionBotList
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    LPAREN          shift and go to state 139
    IDENT           shift and go to state 142
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    ExpressionList                 shift and go to state 308
    Expression                     shift and go to state 164
    UnaryExpr                      shift and go to state 125
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146
    TypeName                       shift and go to state 148
    QualifiedIdent                 shift and go to state 79

state 287

    (138) ExprSwitchStmt -> SWITCH SimpleStmtBot . ExpressionBot LBRACE ExprCaseClauseList RBRACE
    (145) ExpressionBot -> . empty
    (146) ExpressionBot -> . Expression
    (214) empty -> .
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

    LBRACE          reduce using rule 214 (empty -> .)
    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    LPAREN          shift and go to state 139
    IDENT           shift and go to state 142
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    ExpressionBot                  shift and go to state 309
    empty                          shift and go to state 279
    Expression                     shift and go to state 280
    UnaryExpr                      shift and go to state 125
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146
    TypeName                       shift and go to state 148
    QualifiedIdent                 shift and go to state 79

state 288

    (207) Index -> LBRACK Expression RBRACK .

    PERIOD          reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    LBRACK          reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    LPAREN          reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    LOR             reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    LAND            reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    EQL             reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    NEQ             reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    LSS             reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    LEQ             reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    GTR             reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    GEQ             reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    ADD             reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    SUB             reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    OR              reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    XOR             reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    MUL             reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    QUO             reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    REM             reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    SHL             reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    SHR             reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    AND             reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    AND_NOT         reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    COMMA           reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    SEMICOLON       reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    ASSIGN          reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    ELLIPSIS        reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    LBRACE          reduce using rule 207 (Index -> LBRACK Expression RBRACK .)
    COLON           reduce using rule 207 (Index -> LBRACK Expression RBRACK .)


state 289

    (61) Type -> LPAREN . Type RPAREN
    (204) ReceiverType -> LPAREN . MUL TypeName RPAREN
    (205) ReceiverType -> LPAREN . ReceiverType RPAREN
    (190) Operand -> LPAREN . Expression RPAREN
    (59) Type -> . TypeName
    (60) Type -> . TypeLit
    (61) Type -> . LPAREN Type RPAREN
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (65) TypeLit -> . ArrayType
    (66) TypeLit -> . StructType
    (67) TypeLit -> . FunctionType
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (64) QualifiedIdent -> . IDENT PERIOD IDENT
    (68) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (71) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (83) FunctionType -> . FUNC Signature
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING

    MUL             shift and go to state 208
    LPAREN          shift and go to state 289
    IDENT           shift and go to state 210
    LBRACK          shift and go to state 83
    STRUCT          shift and go to state 84
    FUNC            shift and go to state 257
    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    Type                           shift and go to state 121
    TypeName                       shift and go to state 256
    ReceiverType                   shift and go to state 209
    Expression                     shift and go to state 207
    TypeLit                        shift and go to state 76
    UnaryExpr                      shift and go to state 125
    QualifiedIdent                 shift and go to state 79
    ArrayType                      shift and go to state 80
    StructType                     shift and go to state 81
    FunctionType                   shift and go to state 82
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146

state 290

    (208) Arguments -> LPAREN ArgumentsHead RPAREN .

    PERIOD          reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    LBRACK          reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    LPAREN          reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    LOR             reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    LAND            reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    EQL             reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    NEQ             reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    LSS             reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    LEQ             reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    GTR             reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    GEQ             reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    ADD             reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    SUB             reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    OR              reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    XOR             reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    MUL             reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    QUO             reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    REM             reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    SHL             reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    SHR             reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    AND             reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    AND_NOT         reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    RBRACK          reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    COMMA           reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    SEMICOLON       reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    RPAREN          reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    ASSIGN          reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    ELLIPSIS        reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    LBRACE          reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    COLON           reduce using rule 208 (Arguments -> LPAREN ArgumentsHead RPAREN .)


state 291

    (210) ArgumentsHead -> ArgumentsHeadMid tripledotTop . commaTop
    (92) commaTop -> . empty
    (93) commaTop -> . COMMA
    (214) empty -> .

    COMMA           shift and go to state 112
    RPAREN          reduce using rule 214 (empty -> .)

    commaTop                       shift and go to state 310
    empty                          shift and go to state 111

state 292

    (212) ArgumentsHeadMid -> Type COMMA . ExpressionList
    (47) ExpressionList -> . Expression ExpressionBotList
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    LPAREN          shift and go to state 139
    IDENT           shift and go to state 142
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    ExpressionList                 shift and go to state 311
    Expression                     shift and go to state 164
    UnaryExpr                      shift and go to state 125
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146
    TypeName                       shift and go to state 148
    QualifiedIdent                 shift and go to state 79

state 293

    (83) FunctionType -> FUNC Signature .
    (116) Function -> Signature . FunctionBody
    (117) FunctionBody -> . Block
    (21) Block -> . LBRACE StatementList RBRACE

    COMMA           reduce using rule 83 (FunctionType -> FUNC Signature .)
    ELLIPSIS        reduce using rule 83 (FunctionType -> FUNC Signature .)
    RPAREN          reduce using rule 83 (FunctionType -> FUNC Signature .)
    LBRACE          shift and go to state 101

    FunctionBody                   shift and go to state 99
    Block                          shift and go to state 100

state 294

    (204) ReceiverType -> LPAREN MUL TypeName RPAREN .

    PERIOD          reduce using rule 204 (ReceiverType -> LPAREN MUL TypeName RPAREN .)
    RPAREN          reduce using rule 204 (ReceiverType -> LPAREN MUL TypeName RPAREN .)


state 295

    (73) FieldDeclList -> FieldDeclList FieldDecl SEMICOLON .

    RBRACE          reduce using rule 73 (FieldDeclList -> FieldDeclList FieldDecl SEMICOLON .)
    IDENT           reduce using rule 73 (FieldDeclList -> FieldDeclList FieldDecl SEMICOLON .)
    MUL             reduce using rule 73 (FieldDeclList -> FieldDeclList FieldDecl SEMICOLON .)


state 296

    (74) FieldDecl -> FieldDeclHead TagTop .

    SEMICOLON       reduce using rule 74 (FieldDecl -> FieldDeclHead TagTop .)


state 297

    (75) TagTop -> empty .

    SEMICOLON       reduce using rule 75 (TagTop -> empty .)


state 298

    (76) TagTop -> Tag .

    SEMICOLON       reduce using rule 76 (TagTop -> Tag .)


state 299

    (82) Tag -> string_lit .

    SEMICOLON       reduce using rule 82 (Tag -> string_lit .)


state 300

    (77) FieldDeclHead -> IdentifierList Type .

    STRING          reduce using rule 77 (FieldDeclHead -> IdentifierList Type .)
    SEMICOLON       reduce using rule 77 (FieldDeclHead -> IdentifierList Type .)


state 301

    (79) EmbeddedField -> starTop TypeName .

    STRING          reduce using rule 79 (EmbeddedField -> starTop TypeName .)
    SEMICOLON       reduce using rule 79 (EmbeddedField -> starTop TypeName .)


state 302

    (49) ExpressionBotList -> ExpressionBotList COMMA Expression .
    (151) Expression -> Expression . binary_op Expression
    (154) binary_op -> . LOR
    (155) binary_op -> . LAND
    (156) binary_op -> . rel_op
    (157) binary_op -> . add_op
    (158) binary_op -> . mul_op
    (159) rel_op -> . EQL
    (160) rel_op -> . NEQ
    (161) rel_op -> . LSS
    (162) rel_op -> . LEQ
    (163) rel_op -> . GTR
    (164) rel_op -> . GEQ
    (165) add_op -> . ADD
    (166) add_op -> . SUB
    (167) add_op -> . OR
    (168) add_op -> . XOR
    (169) mul_op -> . MUL
    (170) mul_op -> . QUO
    (171) mul_op -> . REM
    (172) mul_op -> . SHL
    (173) mul_op -> . SHR
    (174) mul_op -> . AND
    (175) mul_op -> . AND_NOT

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for QUO resolved as shift
  ! shift/reduce conflict for REM resolved as shift
  ! shift/reduce conflict for SHL resolved as shift
  ! shift/reduce conflict for SHR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for AND_NOT resolved as shift
    COMMA           reduce using rule 49 (ExpressionBotList -> ExpressionBotList COMMA Expression .)
    SEMICOLON       reduce using rule 49 (ExpressionBotList -> ExpressionBotList COMMA Expression .)
    ELLIPSIS        reduce using rule 49 (ExpressionBotList -> ExpressionBotList COMMA Expression .)
    RPAREN          reduce using rule 49 (ExpressionBotList -> ExpressionBotList COMMA Expression .)
    COLON           reduce using rule 49 (ExpressionBotList -> ExpressionBotList COMMA Expression .)
    ASSIGN          reduce using rule 49 (ExpressionBotList -> ExpressionBotList COMMA Expression .)
    LOR             shift and go to state 177
    LAND            shift and go to state 178
    EQL             shift and go to state 182
    NEQ             shift and go to state 183
    LSS             shift and go to state 184
    LEQ             shift and go to state 185
    GTR             shift and go to state 186
    GEQ             shift and go to state 187
    ADD             shift and go to state 188
    SUB             shift and go to state 189
    OR              shift and go to state 190
    XOR             shift and go to state 191
    MUL             shift and go to state 192
    QUO             shift and go to state 193
    REM             shift and go to state 194
    SHL             shift and go to state 195
    SHR             shift and go to state 196
    AND             shift and go to state 197
    AND_NOT         shift and go to state 198

  ! ADD             [ reduce using rule 49 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]
  ! SUB             [ reduce using rule 49 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]
  ! OR              [ reduce using rule 49 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]
  ! XOR             [ reduce using rule 49 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]
  ! MUL             [ reduce using rule 49 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]
  ! QUO             [ reduce using rule 49 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]
  ! REM             [ reduce using rule 49 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]
  ! SHL             [ reduce using rule 49 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]
  ! SHR             [ reduce using rule 49 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]
  ! AND             [ reduce using rule 49 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]
  ! AND_NOT         [ reduce using rule 49 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]

    binary_op                      shift and go to state 176
    rel_op                         shift and go to state 179
    add_op                         shift and go to state 180
    mul_op                         shift and go to state 181

state 303

    (130) IfStmt -> IF SimpleStmtBot Expression . Block elseBot
    (151) Expression -> Expression . binary_op Expression
    (21) Block -> . LBRACE StatementList RBRACE
    (154) binary_op -> . LOR
    (155) binary_op -> . LAND
    (156) binary_op -> . rel_op
    (157) binary_op -> . add_op
    (158) binary_op -> . mul_op
    (159) rel_op -> . EQL
    (160) rel_op -> . NEQ
    (161) rel_op -> . LSS
    (162) rel_op -> . LEQ
    (163) rel_op -> . GTR
    (164) rel_op -> . GEQ
    (165) add_op -> . ADD
    (166) add_op -> . SUB
    (167) add_op -> . OR
    (168) add_op -> . XOR
    (169) mul_op -> . MUL
    (170) mul_op -> . QUO
    (171) mul_op -> . REM
    (172) mul_op -> . SHL
    (173) mul_op -> . SHR
    (174) mul_op -> . AND
    (175) mul_op -> . AND_NOT

    LBRACE          shift and go to state 101
    LOR             shift and go to state 177
    LAND            shift and go to state 178
    EQL             shift and go to state 182
    NEQ             shift and go to state 183
    LSS             shift and go to state 184
    LEQ             shift and go to state 185
    GTR             shift and go to state 186
    GEQ             shift and go to state 187
    ADD             shift and go to state 188
    SUB             shift and go to state 189
    OR              shift and go to state 190
    XOR             shift and go to state 191
    MUL             shift and go to state 192
    QUO             shift and go to state 193
    REM             shift and go to state 194
    SHL             shift and go to state 195
    SHR             shift and go to state 196
    AND             shift and go to state 197
    AND_NOT         shift and go to state 198

    Block                          shift and go to state 312
    binary_op                      shift and go to state 176
    rel_op                         shift and go to state 179
    add_op                         shift and go to state 180
    mul_op                         shift and go to state 181

state 304

    (132) SimpleStmtBot -> SimpleStmt SEMICOLON .

    +               reduce using rule 132 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    -               reduce using rule 132 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    !               reduce using rule 132 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    ^               reduce using rule 132 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    *               reduce using rule 132 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    &               reduce using rule 132 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    CHAN            reduce using rule 132 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    LPAREN          reduce using rule 132 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    IDENT           reduce using rule 132 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    FUNC            reduce using rule 132 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    INT             reduce using rule 132 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    FLOAT           reduce using rule 132 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    STRING          reduce using rule 132 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    LBRACE          reduce using rule 132 (SimpleStmtBot -> SimpleStmt SEMICOLON .)


state 305

    (144) ForStmt -> FOR ExpressionBot Block .

    SEMICOLON       reduce using rule 144 (ForStmt -> FOR ExpressionBot Block .)


state 306

    (125) Assignment -> ExpressionList assign_op ExpressionList .

    SEMICOLON       reduce using rule 125 (Assignment -> ExpressionList assign_op ExpressionList .)


state 307

    (126) assign_op -> addmul_op ASSIGN .

    +               reduce using rule 126 (assign_op -> addmul_op ASSIGN .)
    -               reduce using rule 126 (assign_op -> addmul_op ASSIGN .)
    !               reduce using rule 126 (assign_op -> addmul_op ASSIGN .)
    ^               reduce using rule 126 (assign_op -> addmul_op ASSIGN .)
    *               reduce using rule 126 (assign_op -> addmul_op ASSIGN .)
    &               reduce using rule 126 (assign_op -> addmul_op ASSIGN .)
    CHAN            reduce using rule 126 (assign_op -> addmul_op ASSIGN .)
    LPAREN          reduce using rule 126 (assign_op -> addmul_op ASSIGN .)
    IDENT           reduce using rule 126 (assign_op -> addmul_op ASSIGN .)
    FUNC            reduce using rule 126 (assign_op -> addmul_op ASSIGN .)
    INT             reduce using rule 126 (assign_op -> addmul_op ASSIGN .)
    FLOAT           reduce using rule 126 (assign_op -> addmul_op ASSIGN .)
    STRING          reduce using rule 126 (assign_op -> addmul_op ASSIGN .)


state 308

    (124) ShortVarDecl -> IdentifierList DEFINE ExpressionList .

    SEMICOLON       reduce using rule 124 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)


state 309

    (138) ExprSwitchStmt -> SWITCH SimpleStmtBot ExpressionBot . LBRACE ExprCaseClauseList RBRACE

    LBRACE          shift and go to state 313


state 310

    (210) ArgumentsHead -> ArgumentsHeadMid tripledotTop commaTop .

    RPAREN          reduce using rule 210 (ArgumentsHead -> ArgumentsHeadMid tripledotTop commaTop .)


state 311

    (212) ArgumentsHeadMid -> Type COMMA ExpressionList .

    ELLIPSIS        reduce using rule 212 (ArgumentsHeadMid -> Type COMMA ExpressionList .)
    COMMA           reduce using rule 212 (ArgumentsHeadMid -> Type COMMA ExpressionList .)
    RPAREN          reduce using rule 212 (ArgumentsHeadMid -> Type COMMA ExpressionList .)


state 312

    (130) IfStmt -> IF SimpleStmtBot Expression Block . elseBot
    (133) elseBot -> . empty
    (134) elseBot -> . ELSE elseTail
    (214) empty -> .

    ELSE            shift and go to state 316
    SEMICOLON       reduce using rule 214 (empty -> .)

    elseBot                        shift and go to state 314
    empty                          shift and go to state 315

state 313

    (138) ExprSwitchStmt -> SWITCH SimpleStmtBot ExpressionBot LBRACE . ExprCaseClauseList RBRACE
    (139) ExprCaseClauseList -> . empty
    (140) ExprCaseClauseList -> . ExprCaseClauseList ExprCaseClause
    (214) empty -> .

    RBRACE          reduce using rule 214 (empty -> .)
    CASE            reduce using rule 214 (empty -> .)
    DEFAULT         reduce using rule 214 (empty -> .)

    ExprCaseClauseList             shift and go to state 317
    empty                          shift and go to state 318

state 314

    (130) IfStmt -> IF SimpleStmtBot Expression Block elseBot .

    SEMICOLON       reduce using rule 130 (IfStmt -> IF SimpleStmtBot Expression Block elseBot .)


state 315

    (133) elseBot -> empty .

    SEMICOLON       reduce using rule 133 (elseBot -> empty .)


state 316

    (134) elseBot -> ELSE . elseTail
    (135) elseTail -> . IfStmt
    (136) elseTail -> . Block
    (130) IfStmt -> . IF SimpleStmtBot Expression Block elseBot
    (21) Block -> . LBRACE StatementList RBRACE

    IF              shift and go to state 235
    LBRACE          shift and go to state 101

    elseTail                       shift and go to state 319
    IfStmt                         shift and go to state 320
    Block                          shift and go to state 321

state 317

    (138) ExprSwitchStmt -> SWITCH SimpleStmtBot ExpressionBot LBRACE ExprCaseClauseList . RBRACE
    (140) ExprCaseClauseList -> ExprCaseClauseList . ExprCaseClause
    (141) ExprCaseClause -> . ExprSwitchCase COLON StatementList
    (142) ExprSwitchCase -> . CASE ExpressionList
    (143) ExprSwitchCase -> . DEFAULT

    RBRACE          shift and go to state 322
    CASE            shift and go to state 325
    DEFAULT         shift and go to state 326

    ExprCaseClause                 shift and go to state 323
    ExprSwitchCase                 shift and go to state 324

state 318

    (139) ExprCaseClauseList -> empty .

    RBRACE          reduce using rule 139 (ExprCaseClauseList -> empty .)
    CASE            reduce using rule 139 (ExprCaseClauseList -> empty .)
    DEFAULT         reduce using rule 139 (ExprCaseClauseList -> empty .)


state 319

    (134) elseBot -> ELSE elseTail .

    SEMICOLON       reduce using rule 134 (elseBot -> ELSE elseTail .)


state 320

    (135) elseTail -> IfStmt .

    SEMICOLON       reduce using rule 135 (elseTail -> IfStmt .)


state 321

    (136) elseTail -> Block .

    SEMICOLON       reduce using rule 136 (elseTail -> Block .)


state 322

    (138) ExprSwitchStmt -> SWITCH SimpleStmtBot ExpressionBot LBRACE ExprCaseClauseList RBRACE .

    SEMICOLON       reduce using rule 138 (ExprSwitchStmt -> SWITCH SimpleStmtBot ExpressionBot LBRACE ExprCaseClauseList RBRACE .)


state 323

    (140) ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause .

    RBRACE          reduce using rule 140 (ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause .)
    CASE            reduce using rule 140 (ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause .)
    DEFAULT         reduce using rule 140 (ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause .)


state 324

    (141) ExprCaseClause -> ExprSwitchCase . COLON StatementList

    COLON           shift and go to state 327


state 325

    (142) ExprSwitchCase -> CASE . ExpressionList
    (47) ExpressionList -> . Expression ExpressionBotList
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    LPAREN          shift and go to state 139
    IDENT           shift and go to state 142
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    ExpressionList                 shift and go to state 328
    Expression                     shift and go to state 164
    UnaryExpr                      shift and go to state 125
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146
    TypeName                       shift and go to state 148
    QualifiedIdent                 shift and go to state 79

state 326

    (143) ExprSwitchCase -> DEFAULT .

    COLON           reduce using rule 143 (ExprSwitchCase -> DEFAULT .)


state 327

    (141) ExprCaseClause -> ExprSwitchCase COLON . StatementList
    (22) StatementList -> . empty
    (23) StatementList -> . StatementList Statement SEMICOLON
    (214) empty -> .

    RETURN          reduce using rule 214 (empty -> .)
    LBRACE          reduce using rule 214 (empty -> .)
    IF              reduce using rule 214 (empty -> .)
    FOR             reduce using rule 214 (empty -> .)
    CONST           reduce using rule 214 (empty -> .)
    TYPE            reduce using rule 214 (empty -> .)
    VAR             reduce using rule 214 (empty -> .)
    SWITCH          reduce using rule 214 (empty -> .)
    IDENT           reduce using rule 214 (empty -> .)
    +               reduce using rule 214 (empty -> .)
    -               reduce using rule 214 (empty -> .)
    !               reduce using rule 214 (empty -> .)
    ^               reduce using rule 214 (empty -> .)
    *               reduce using rule 214 (empty -> .)
    &               reduce using rule 214 (empty -> .)
    CHAN            reduce using rule 214 (empty -> .)
    LPAREN          reduce using rule 214 (empty -> .)
    FUNC            reduce using rule 214 (empty -> .)
    INT             reduce using rule 214 (empty -> .)
    FLOAT           reduce using rule 214 (empty -> .)
    STRING          reduce using rule 214 (empty -> .)
    RBRACE          reduce using rule 214 (empty -> .)
    CASE            reduce using rule 214 (empty -> .)
    DEFAULT         reduce using rule 214 (empty -> .)

    StatementList                  shift and go to state 329
    empty                          shift and go to state 167

state 328

    (142) ExprSwitchCase -> CASE ExpressionList .

    COLON           reduce using rule 142 (ExprSwitchCase -> CASE ExpressionList .)


state 329

    (141) ExprCaseClause -> ExprSwitchCase COLON StatementList .
    (23) StatementList -> StatementList . Statement SEMICOLON
    (24) Statement -> . Declaration
    (25) Statement -> . SimpleStmt
    (26) Statement -> . ReturnStmt
    (27) Statement -> . Block
    (28) Statement -> . IfStmt
    (29) Statement -> . SwitchStmt
    (30) Statement -> . ForStmt
    (31) Declaration -> . ConstDecl
    (32) Declaration -> . TypeDecl
    (33) Declaration -> . VarDecl
    (120) SimpleStmt -> . ExpressionStmt
    (121) SimpleStmt -> . Assignment
    (122) SimpleStmt -> . ShortVarDecl
    (147) ReturnStmt -> . RETURN ExpressionListBot
    (21) Block -> . LBRACE StatementList RBRACE
    (130) IfStmt -> . IF SimpleStmtBot Expression Block elseBot
    (137) SwitchStmt -> . ExprSwitchStmt
    (144) ForStmt -> . FOR ExpressionBot Block
    (34) ConstDecl -> . CONST ConstSpecTopList
    (50) TypeDecl -> . TYPE TypeSpecTopList
    (102) VarDecl -> . VAR VarSpecTopList
    (123) ExpressionStmt -> . Expression
    (125) Assignment -> . ExpressionList assign_op ExpressionList
    (124) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (138) ExprSwitchStmt -> . SWITCH SimpleStmtBot ExpressionBot LBRACE ExprCaseClauseList RBRACE
    (150) Expression -> . UnaryExpr
    (151) Expression -> . Expression binary_op Expression
    (47) ExpressionList -> . Expression ExpressionBotList
    (44) IdentifierList -> . IDENT IdentifierBotList
    (152) UnaryExpr -> . PrimaryExpr
    (153) UnaryExpr -> . unary_op UnaryExpr
    (183) PrimaryExpr -> . Operand
    (184) PrimaryExpr -> . PrimaryExpr Selector
    (185) PrimaryExpr -> . PrimaryExpr Index
    (186) PrimaryExpr -> . PrimaryExpr Arguments
    (176) unary_op -> . +
    (177) unary_op -> . -
    (178) unary_op -> . !
    (179) unary_op -> . ^
    (180) unary_op -> . *
    (181) unary_op -> . &
    (182) unary_op -> . CHAN
    (187) Operand -> . Literal
    (188) Operand -> . OperandName
    (189) Operand -> . MethodExpr
    (190) Operand -> . LPAREN Expression RPAREN
    (191) Literal -> . BasicLit
    (192) Literal -> . FunctionLit
    (199) OperandName -> . IDENT
    (201) MethodExpr -> . ReceiverType PERIOD MethodName
    (193) BasicLit -> . int_lit
    (194) BasicLit -> . float_lit
    (195) BasicLit -> . string_lit
    (200) FunctionLit -> . FUNC Function
    (203) ReceiverType -> . TypeName
    (204) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (205) ReceiverType -> . LPAREN ReceiverType RPAREN
    (196) int_lit -> . INT
    (197) float_lit -> . FLOAT
    (198) string_lit -> . STRING
    (62) TypeName -> . IDENT
    (63) TypeName -> . QualifiedIdent
    (64) QualifiedIdent -> . IDENT PERIOD IDENT

    RBRACE          reduce using rule 141 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    CASE            reduce using rule 141 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 141 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    RETURN          shift and go to state 234
    LBRACE          shift and go to state 101
    IF              shift and go to state 235
    FOR             shift and go to state 238
    CONST           shift and go to state 21
    TYPE            shift and go to state 22
    VAR             shift and go to state 23
    SWITCH          shift and go to state 241
    IDENT           shift and go to state 242
    +               shift and go to state 129
    -               shift and go to state 130
    !               shift and go to state 131
    ^               shift and go to state 132
    *               shift and go to state 133
    &               shift and go to state 134
    CHAN            shift and go to state 135
    LPAREN          shift and go to state 139
    FUNC            shift and go to state 147
    INT             shift and go to state 149
    FLOAT           shift and go to state 150
    STRING          shift and go to state 151

    Statement                      shift and go to state 223
    Declaration                    shift and go to state 224
    SimpleStmt                     shift and go to state 225
    ReturnStmt                     shift and go to state 226
    Block                          shift and go to state 227
    IfStmt                         shift and go to state 228
    SwitchStmt                     shift and go to state 229
    ForStmt                        shift and go to state 230
    ConstDecl                      shift and go to state 17
    TypeDecl                       shift and go to state 18
    VarDecl                        shift and go to state 19
    ExpressionStmt                 shift and go to state 231
    Assignment                     shift and go to state 232
    ShortVarDecl                   shift and go to state 233
    Expression                     shift and go to state 236
    ExprSwitchStmt                 shift and go to state 237
    ExpressionList                 shift and go to state 239
    IdentifierList                 shift and go to state 240
    UnaryExpr                      shift and go to state 125
    PrimaryExpr                    shift and go to state 126
    unary_op                       shift and go to state 127
    Operand                        shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    MethodExpr                     shift and go to state 138
    BasicLit                       shift and go to state 140
    FunctionLit                    shift and go to state 141
    ReceiverType                   shift and go to state 143
    int_lit                        shift and go to state 144
    float_lit                      shift and go to state 145
    string_lit                     shift and go to state 146
    TypeName                       shift and go to state 148
    QualifiedIdent                 shift and go to state 79
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDENT in state 37 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 107 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 107 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 107 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 107 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 107 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 113 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 142 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 169 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 210 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 210 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 214 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 220 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 235 resolved as shift
WARNING: shift/reduce conflict for + in state 235 resolved as shift
WARNING: shift/reduce conflict for - in state 235 resolved as shift
WARNING: shift/reduce conflict for ! in state 235 resolved as shift
WARNING: shift/reduce conflict for ^ in state 235 resolved as shift
WARNING: shift/reduce conflict for * in state 235 resolved as shift
WARNING: shift/reduce conflict for & in state 235 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 235 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 235 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 235 resolved as shift
WARNING: shift/reduce conflict for INT in state 235 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 235 resolved as shift
WARNING: shift/reduce conflict for STRING in state 235 resolved as shift
WARNING: shift/reduce conflict for ADD in state 236 resolved as shift
WARNING: shift/reduce conflict for SUB in state 236 resolved as shift
WARNING: shift/reduce conflict for OR in state 236 resolved as shift
WARNING: shift/reduce conflict for XOR in state 236 resolved as shift
WARNING: shift/reduce conflict for MUL in state 236 resolved as shift
WARNING: shift/reduce conflict for QUO in state 236 resolved as shift
WARNING: shift/reduce conflict for REM in state 236 resolved as shift
WARNING: shift/reduce conflict for SHL in state 236 resolved as shift
WARNING: shift/reduce conflict for SHR in state 236 resolved as shift
WARNING: shift/reduce conflict for AND in state 236 resolved as shift
WARNING: shift/reduce conflict for AND_NOT in state 236 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 241 resolved as shift
WARNING: shift/reduce conflict for + in state 241 resolved as shift
WARNING: shift/reduce conflict for - in state 241 resolved as shift
WARNING: shift/reduce conflict for ! in state 241 resolved as shift
WARNING: shift/reduce conflict for ^ in state 241 resolved as shift
WARNING: shift/reduce conflict for * in state 241 resolved as shift
WARNING: shift/reduce conflict for & in state 241 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 241 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 241 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 241 resolved as shift
WARNING: shift/reduce conflict for INT in state 241 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 241 resolved as shift
WARNING: shift/reduce conflict for STRING in state 241 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 242 resolved as shift
WARNING: shift/reduce conflict for LOR in state 247 resolved as shift
WARNING: shift/reduce conflict for LAND in state 247 resolved as shift
WARNING: shift/reduce conflict for EQL in state 247 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 247 resolved as shift
WARNING: shift/reduce conflict for LSS in state 247 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 247 resolved as shift
WARNING: shift/reduce conflict for GTR in state 247 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 247 resolved as shift
WARNING: shift/reduce conflict for ADD in state 247 resolved as shift
WARNING: shift/reduce conflict for SUB in state 247 resolved as shift
WARNING: shift/reduce conflict for OR in state 247 resolved as shift
WARNING: shift/reduce conflict for XOR in state 247 resolved as shift
WARNING: shift/reduce conflict for MUL in state 247 resolved as shift
WARNING: shift/reduce conflict for QUO in state 247 resolved as shift
WARNING: shift/reduce conflict for REM in state 247 resolved as shift
WARNING: shift/reduce conflict for SHL in state 247 resolved as shift
WARNING: shift/reduce conflict for SHR in state 247 resolved as shift
WARNING: shift/reduce conflict for AND in state 247 resolved as shift
WARNING: shift/reduce conflict for AND_NOT in state 247 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 255 resolved as shift
WARNING: shift/reduce conflict for ADD in state 302 resolved as shift
WARNING: shift/reduce conflict for SUB in state 302 resolved as shift
WARNING: shift/reduce conflict for OR in state 302 resolved as shift
WARNING: shift/reduce conflict for XOR in state 302 resolved as shift
WARNING: shift/reduce conflict for MUL in state 302 resolved as shift
WARNING: shift/reduce conflict for QUO in state 302 resolved as shift
WARNING: shift/reduce conflict for REM in state 302 resolved as shift
WARNING: shift/reduce conflict for SHL in state 302 resolved as shift
WARNING: shift/reduce conflict for SHR in state 302 resolved as shift
WARNING: shift/reduce conflict for AND in state 302 resolved as shift
WARNING: shift/reduce conflict for AND_NOT in state 302 resolved as shift
WARNING: reduce/reduce conflict in state 142 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 142
WARNING: reduce/reduce conflict in state 210 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 210
WARNING: reduce/reduce conflict in state 242 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 242
WARNING: reduce/reduce conflict in state 242 resolved using rule (OperandName -> IDENT)
WARNING: rejected rule (empty -> <empty>) in state 242
WARNING: reduce/reduce conflict in state 256 resolved using rule (Type -> TypeName)
WARNING: rejected rule (ReceiverType -> TypeName) in state 256

Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADD_ASSIGN
    AND_ASSIGN
    AND_NOT_ASSIGN
    ARROW
    BREAK
    CHAR
    CONTINUE
    DEC
    DEFER
    FALLTHROUGH
    GO
    GOTO
    IMAG
    INC
    INTERFACE
    MAP
    MUL_ASSIGN
    NOT
    OR_ASSIGN
    QUO_ASSIGN
    RANGE
    REM_ASSIGN
    SELECT
    SHL_ASSIGN
    SHR_ASSIGN
    SUB_ASSIGN
    XOR_ASSIGN

Grammar

Rule 0     S' -> SourceFile
Rule 1     SourceFile -> PackageClause SEMICOLON ImportDeclList TopLevelDeclList
Rule 2     ImportDeclList -> empty
Rule 3     ImportDeclList -> ImportDeclList ImportDecl SEMICOLON
Rule 4     TopLevelDeclList -> empty
Rule 5     TopLevelDeclList -> TopLevelDeclList TopLevelDecl SEMICOLON
Rule 6     PackageClause -> PACKAGE IDENT
Rule 7     TopLevelDecl -> Declaration
Rule 8     TopLevelDecl -> FunctionDecl
Rule 9     TopLevelDecl -> MethodDecl
Rule 10    ImportDecl -> IMPORT ImportSpecTopList
Rule 11    ImportSpecTopList -> ImportSpec
Rule 12    ImportSpecTopList -> LPAREN ImportSpecList RPAREN
Rule 13    ImportSpecList -> empty
Rule 14    ImportSpecList -> ImportSpecList ImportSpec SEMICOLON
Rule 15    ImportSpec -> ImportSpecInit ImportPath
Rule 16    ImportSpecInit -> empty
Rule 17    ImportSpecInit -> PERIOD
Rule 18    ImportSpecInit -> IDENT
Rule 19    ImportPath -> STRING
Rule 20    Block -> LBRACE StatementList RBRACE
Rule 21    StatementList -> empty
Rule 22    StatementList -> StatementList Statement SEMICOLON
Rule 23    Statement -> Declaration
Rule 24    Statement -> SimpleStmt
Rule 25    Statement -> ReturnStmt
Rule 26    Statement -> Block
Rule 27    Statement -> IfStmt
Rule 28    Statement -> SwitchStmt
Rule 29    Statement -> ForStmt
Rule 30    Declaration -> ConstDecl
Rule 31    Declaration -> TypeDecl
Rule 32    Declaration -> VarDecl
Rule 33    ConstDecl -> CONST ConstSpecTopList
Rule 34    ConstSpecTopList -> ConstSpec
Rule 35    ConstSpecTopList -> LPAREN ConstSpecList RPAREN
Rule 36    ConstSpecList -> empty
Rule 37    ConstSpecList -> ConstSpecList ConstSpec SEMICOLON
Rule 38    ConstSpec -> IdentifierList ConstSpecTail
Rule 39    ConstSpecTail -> empty
Rule 40    ConstSpecTail -> TypeTop ASSIGN ExpressionList
Rule 41    TypeTop -> empty
Rule 42    TypeTop -> Type
Rule 43    IdentifierList -> IDENT IdentifierBotList
Rule 44    IdentifierBotList -> empty
Rule 45    IdentifierBotList -> IdentifierBotList COMMA IDENT
Rule 46    ExpressionList -> Expression ExpressionBotList
Rule 47    ExpressionBotList -> empty
Rule 48    ExpressionBotList -> ExpressionBotList COMMA Expression
Rule 49    TypeDecl -> TYPE TypeSpecTopList
Rule 50    TypeSpecTopList -> TypeSpec
Rule 51    TypeSpecTopList -> LPAREN TypeSpecList RPAREN
Rule 52    TypeSpecList -> empty
Rule 53    TypeSpecList -> TypeSpecList TypeSpec SEMICOLON
Rule 54    TypeSpec -> AliasDecl
Rule 55    TypeSpec -> TypeDef
Rule 56    AliasDecl -> IDENT ASSIGN Type
Rule 57    TypeDef -> IDENT Type
Rule 58    Type -> TypeName
Rule 59    Type -> TypeLit
Rule 60    Type -> LPAREN Type RPAREN
Rule 61    TypeName -> IDENT
Rule 62    TypeName -> QualifiedIdent
Rule 63    QualifiedIdent -> IDENT PERIOD IDENT
Rule 64    TypeLit -> ArrayType
Rule 65    TypeLit -> StructType
Rule 66    TypeLit -> FunctionType
Rule 67    ArrayType -> LBRACK ArrayLength RBRACK ElementType
Rule 68    ArrayLength -> Expression
Rule 69    ElementType -> Type
Rule 70    StructType -> STRUCT LBRACE FieldDeclList RBRACE
Rule 71    FieldDeclList -> empty
Rule 72    FieldDeclList -> FieldDeclList FieldDecl SEMICOLON
Rule 73    FieldDecl -> FieldDeclHead TagTop
Rule 74    TagTop -> empty
Rule 75    TagTop -> Tag
Rule 76    FieldDeclHead -> IdentifierList Type
Rule 77    FieldDeclHead -> EmbeddedField
Rule 78    EmbeddedField -> starTop TypeName
Rule 79    starTop -> empty
Rule 80    starTop -> MUL
Rule 81    Tag -> string_lit
Rule 82    FunctionType -> FUNC Signature
Rule 83    Signature -> Parameters ResultTop
Rule 84    ResultTop -> empty
Rule 85    ResultTop -> Result
Rule 86    Result -> Parameters
Rule 87    Result -> Type
Rule 88    Parameters -> LPAREN ParameterListTop RPAREN
Rule 89    ParameterListTop -> empty
Rule 90    ParameterListTop -> ParameterList commaTop
Rule 91    commaTop -> empty
Rule 92    commaTop -> COMMA
Rule 93    ParameterList -> ParameterDecl ParameterDeclList
Rule 94    ParameterDeclList -> empty
Rule 95    ParameterDeclList -> ParameterDeclList COMMA ParameterDecl
Rule 96    ParameterDecl -> ParameterDeclHead tripledotTop Type
Rule 97    tripledotTop -> empty
Rule 98    tripledotTop -> ELLIPSIS
Rule 99    ParameterDeclHead -> empty
Rule 100   ParameterDeclHead -> IdentifierList
Rule 101   VarDecl -> VAR VarSpecTopList
Rule 102   VarSpecTopList -> VarSpec
Rule 103   VarSpecTopList -> LPAREN VarSpecList RPAREN
Rule 104   VarSpecList -> empty
Rule 105   VarSpecList -> VarSpecList VarSpec SEMICOLON
Rule 106   VarSpec -> IdentifierList VarSpecTail
Rule 107   VarSpecTail -> Type VarSpecMid
Rule 108   VarSpecTail -> ASSIGN ExpressionList
Rule 109   VarSpecMid -> empty
Rule 110   VarSpecMid -> ASSIGN ExpressionList
Rule 111   FunctionDecl -> FUNC FunctionName FunctionDeclTail
Rule 112   FunctionDeclTail -> Function
Rule 113   FunctionDeclTail -> Signature
Rule 114   FunctionName -> IDENT
Rule 115   Function -> Signature FunctionBody
Rule 116   FunctionBody -> Block
Rule 117   MethodDecl -> FUNC Receiver MethodName FunctionDeclTail
Rule 118   Receiver -> Parameters
Rule 119   SimpleStmt -> ExpressionStmt
Rule 120   SimpleStmt -> Assignment
Rule 121   SimpleStmt -> ShortVarDecl
Rule 122   ExpressionStmt -> Expression
Rule 123   ShortVarDecl -> IdentifierList DEFINE ExpressionList
Rule 124   Assignment -> ExpressionList assign_op ExpressionList
Rule 125   assign_op -> addmul_op ASSIGN
Rule 126   addmul_op -> empty
Rule 127   addmul_op -> add_op
Rule 128   addmul_op -> mul_op
Rule 129   IfStmt -> IF SimpleStmtBot Expression Block elseBot
Rule 130   SimpleStmtBot -> empty
Rule 131   SimpleStmtBot -> SimpleStmt SEMICOLON
Rule 132   elseBot -> empty
Rule 133   elseBot -> ELSE elseTail
Rule 134   elseTail -> IfStmt
Rule 135   elseTail -> Block
Rule 136   SwitchStmt -> ExprSwitchStmt
Rule 137   ExprSwitchStmt -> SWITCH SimpleStmtBot ExpressionBot LBRACE ExprCaseClauseList RBRACE
Rule 138   ExprCaseClauseList -> empty
Rule 139   ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause
Rule 140   ExprCaseClause -> ExprSwitchCase COLON StatementList
Rule 141   ExprSwitchCase -> CASE ExpressionList
Rule 142   ExprSwitchCase -> DEFAULT
Rule 143   ForStmt -> FOR ExpressionBot Block
Rule 144   ExpressionBot -> empty
Rule 145   ExpressionBot -> Expression
Rule 146   ReturnStmt -> RETURN ExpressionListBot
Rule 147   ExpressionListBot -> empty
Rule 148   ExpressionListBot -> ExpressionList
Rule 149   Expression -> UnaryExpr
Rule 150   Expression -> Expression binary_op Expression
Rule 151   UnaryExpr -> PrimaryExpr
Rule 152   UnaryExpr -> unary_op UnaryExpr
Rule 153   binary_op -> LOR
Rule 154   binary_op -> LAND
Rule 155   binary_op -> rel_op
Rule 156   binary_op -> add_op
Rule 157   binary_op -> mul_op
Rule 158   rel_op -> EQL
Rule 159   rel_op -> NEQ
Rule 160   rel_op -> LSS
Rule 161   rel_op -> LEQ
Rule 162   rel_op -> GTR
Rule 163   rel_op -> GEQ
Rule 164   add_op -> ADD
Rule 165   add_op -> SUB
Rule 166   add_op -> OR
Rule 167   add_op -> XOR
Rule 168   mul_op -> MUL
Rule 169   mul_op -> QUO
Rule 170   mul_op -> REM
Rule 171   mul_op -> SHL
Rule 172   mul_op -> SHR
Rule 173   mul_op -> AND
Rule 174   mul_op -> AND_NOT
Rule 175   unary_op -> +
Rule 176   unary_op -> -
Rule 177   unary_op -> !
Rule 178   unary_op -> ^
Rule 179   unary_op -> *
Rule 180   unary_op -> &
Rule 181   unary_op -> CHAN
Rule 182   PrimaryExpr -> Operand
Rule 183   PrimaryExpr -> PrimaryExpr Selector
Rule 184   PrimaryExpr -> PrimaryExpr Index
Rule 185   PrimaryExpr -> PrimaryExpr Arguments
Rule 186   Operand -> Literal
Rule 187   Operand -> OperandName
Rule 188   Operand -> MethodExpr
Rule 189   Operand -> LPAREN Expression RPAREN
Rule 190   Literal -> BasicLit
Rule 191   Literal -> FunctionLit
Rule 192   BasicLit -> int_lit
Rule 193   BasicLit -> float_lit
Rule 194   BasicLit -> string_lit
Rule 195   int_lit -> INT
Rule 196   float_lit -> FLOAT
Rule 197   string_lit -> STRING
Rule 198   OperandName -> IDENT
Rule 199   FunctionLit -> FUNC Function
Rule 200   MethodExpr -> ReceiverType PERIOD MethodName
Rule 201   MethodName -> IDENT
Rule 202   ReceiverType -> TypeName
Rule 203   ReceiverType -> LPAREN MUL TypeName RPAREN
Rule 204   ReceiverType -> LPAREN ReceiverType RPAREN
Rule 205   Selector -> PERIOD IDENT
Rule 206   Index -> LBRACK Expression RBRACK
Rule 207   Arguments -> LPAREN ArgumentsHead RPAREN
Rule 208   ArgumentsHead -> empty
Rule 209   ArgumentsHead -> ArgumentsHeadMid tripledotTop commaTop
Rule 210   ArgumentsHeadMid -> ExpressionList
Rule 211   ArgumentsHeadMid -> Type COMMA ExpressionList
Rule 212   ArgumentsHeadMid -> Type
Rule 213   empty -> <empty>

Terminals, with rules where they appear

!                    : 177
&                    : 180
*                    : 179
+                    : 175
-                    : 176
ADD                  : 164
ADD_ASSIGN           : 
AND                  : 173
AND_ASSIGN           : 
AND_NOT              : 174
AND_NOT_ASSIGN       : 
ARROW                : 
ASSIGN               : 40 56 108 110 125
BREAK                : 
CASE                 : 141
CHAN                 : 181
CHAR                 : 
COLON                : 140
COMMA                : 45 48 92 95 211
CONST                : 33
CONTINUE             : 
DEC                  : 
DEFAULT              : 142
DEFER                : 
DEFINE               : 123
ELLIPSIS             : 98
ELSE                 : 133
EQL                  : 158
FALLTHROUGH          : 
FLOAT                : 196
FOR                  : 143
FUNC                 : 82 111 117 199
GEQ                  : 163
GO                   : 
GOTO                 : 
GTR                  : 162
IDENT                : 6 18 43 45 56 57 61 63 63 114 198 201 205
IF                   : 129
IMAG                 : 
IMPORT               : 10
INC                  : 
INT                  : 195
INTERFACE            : 
LAND                 : 154
LBRACE               : 20 70 137
LBRACK               : 67 206
LEQ                  : 161
LOR                  : 153
LPAREN               : 12 35 51 60 88 103 189 203 204 207
LSS                  : 160
MAP                  : 
MUL                  : 80 168 203
MUL_ASSIGN           : 
NEQ                  : 159
NOT                  : 
OR                   : 166
OR_ASSIGN            : 
PACKAGE              : 6
PERIOD               : 17 63 200 205
QUO                  : 169
QUO_ASSIGN           : 
RANGE                : 
RBRACE               : 20 70 137
RBRACK               : 67 206
REM                  : 170
REM_ASSIGN           : 
RETURN               : 146
RPAREN               : 12 35 51 60 88 103 189 203 204 207
SELECT               : 
SEMICOLON            : 1 3 5 14 22 37 53 72 105 131
SHL                  : 171
SHL_ASSIGN           : 
SHR                  : 172
SHR_ASSIGN           : 
STRING               : 19 197
STRUCT               : 70
SUB                  : 165
SUB_ASSIGN           : 
SWITCH               : 137
TYPE                 : 49
VAR                  : 101
XOR                  : 167
XOR_ASSIGN           : 
^                    : 178
error                : 

Nonterminals, with rules where they appear

AliasDecl            : 54
Arguments            : 185
ArgumentsHead        : 207
ArgumentsHeadMid     : 209
ArrayLength          : 67
ArrayType            : 64
Assignment           : 120
BasicLit             : 190
Block                : 26 116 129 135 143
ConstDecl            : 30
ConstSpec            : 34 37
ConstSpecList        : 35 37
ConstSpecTail        : 38
ConstSpecTopList     : 33
Declaration          : 7 23
ElementType          : 67
EmbeddedField        : 77
ExprCaseClause       : 139
ExprCaseClauseList   : 137 139
ExprSwitchCase       : 140
ExprSwitchStmt       : 136
Expression           : 46 48 68 122 129 145 150 150 189 206
ExpressionBot        : 137 143
ExpressionBotList    : 46 48
ExpressionList       : 40 108 110 123 124 124 141 148 210 211
ExpressionListBot    : 146
ExpressionStmt       : 119
FieldDecl            : 72
FieldDeclHead        : 73
FieldDeclList        : 70 72
ForStmt              : 29
Function             : 112 199
FunctionBody         : 115
FunctionDecl         : 8
FunctionDeclTail     : 111 117
FunctionLit          : 191
FunctionName         : 111
FunctionType         : 66
IdentifierBotList    : 43 45
IdentifierList       : 38 76 100 106 123
IfStmt               : 27 134
ImportDecl           : 3
ImportDeclList       : 1 3
ImportPath           : 15
ImportSpec           : 11 14
ImportSpecInit       : 15
ImportSpecList       : 12 14
ImportSpecTopList    : 10
Index                : 184
Literal              : 186
MethodDecl           : 9
MethodExpr           : 188
MethodName           : 117 200
Operand              : 182
OperandName          : 187
PackageClause        : 1
ParameterDecl        : 93 95
ParameterDeclHead    : 96
ParameterDeclList    : 93 95
ParameterList        : 90
ParameterListTop     : 88
Parameters           : 83 86 118
PrimaryExpr          : 151 183 184 185
QualifiedIdent       : 62
Receiver             : 117
ReceiverType         : 200 204
Result               : 85
ResultTop            : 83
ReturnStmt           : 25
Selector             : 183
ShortVarDecl         : 121
Signature            : 82 113 115
SimpleStmt           : 24 131
SimpleStmtBot        : 129 137
SourceFile           : 0
Statement            : 22
StatementList        : 20 22 140
StructType           : 65
SwitchStmt           : 28
Tag                  : 75
TagTop               : 73
TopLevelDecl         : 5
TopLevelDeclList     : 1 5
Type                 : 42 56 57 60 69 76 87 96 107 211 212
TypeDecl             : 31
TypeDef              : 55
TypeLit              : 59
TypeName             : 58 78 202 203
TypeSpec             : 50 53
TypeSpecList         : 51 53
TypeSpecTopList      : 49
TypeTop              : 40
UnaryExpr            : 149 152
VarDecl              : 32
VarSpec              : 102 105
VarSpecList          : 103 105
VarSpecMid           : 107
VarSpecTail          : 106
VarSpecTopList       : 101
add_op               : 127 156
addmul_op            : 125
assign_op            : 124
binary_op            : 150
commaTop             : 90 209
elseBot              : 129
elseTail             : 133
empty                : 2 4 13 16 21 36 39 41 44 47 52 71 74 79 84 89 91 94 97 99 104 109 126 130 132 138 144 147 208
float_lit            : 193
int_lit              : 192
mul_op               : 128 157
rel_op               : 155
starTop              : 78
string_lit           : 81 194
tripledotTop         : 96 209
unary_op             : 152

Parsing method: LALR

state 0

    (0) S' -> . SourceFile
    (1) SourceFile -> . PackageClause SEMICOLON ImportDeclList TopLevelDeclList
    (6) PackageClause -> . PACKAGE IDENT

    PACKAGE         shift and go to state 3

    SourceFile                     shift and go to state 1
    PackageClause                  shift and go to state 2

state 1

    (0) S' -> SourceFile .



state 2

    (1) SourceFile -> PackageClause . SEMICOLON ImportDeclList TopLevelDeclList

    SEMICOLON       shift and go to state 4


state 3

    (6) PackageClause -> PACKAGE . IDENT

    IDENT           shift and go to state 5


state 4

    (1) SourceFile -> PackageClause SEMICOLON . ImportDeclList TopLevelDeclList
    (2) ImportDeclList -> . empty
    (3) ImportDeclList -> . ImportDeclList ImportDecl SEMICOLON
    (213) empty -> .

    IMPORT          reduce using rule 213 (empty -> .)
    FUNC            reduce using rule 213 (empty -> .)
    CONST           reduce using rule 213 (empty -> .)
    TYPE            reduce using rule 213 (empty -> .)
    VAR             reduce using rule 213 (empty -> .)
    $end            reduce using rule 213 (empty -> .)

    ImportDeclList                 shift and go to state 6
    empty                          shift and go to state 7

state 5

    (6) PackageClause -> PACKAGE IDENT .

    SEMICOLON       reduce using rule 6 (PackageClause -> PACKAGE IDENT .)


state 6

    (1) SourceFile -> PackageClause SEMICOLON ImportDeclList . TopLevelDeclList
    (3) ImportDeclList -> ImportDeclList . ImportDecl SEMICOLON
    (4) TopLevelDeclList -> . empty
    (5) TopLevelDeclList -> . TopLevelDeclList TopLevelDecl SEMICOLON
    (10) ImportDecl -> . IMPORT ImportSpecTopList
    (213) empty -> .

    IMPORT          shift and go to state 11
    FUNC            reduce using rule 213 (empty -> .)
    CONST           reduce using rule 213 (empty -> .)
    TYPE            reduce using rule 213 (empty -> .)
    VAR             reduce using rule 213 (empty -> .)
    $end            reduce using rule 213 (empty -> .)

    TopLevelDeclList               shift and go to state 8
    ImportDecl                     shift and go to state 9
    empty                          shift and go to state 10

state 7

    (2) ImportDeclList -> empty .

    IMPORT          reduce using rule 2 (ImportDeclList -> empty .)
    FUNC            reduce using rule 2 (ImportDeclList -> empty .)
    CONST           reduce using rule 2 (ImportDeclList -> empty .)
    TYPE            reduce using rule 2 (ImportDeclList -> empty .)
    VAR             reduce using rule 2 (ImportDeclList -> empty .)
    $end            reduce using rule 2 (ImportDeclList -> empty .)


state 8

    (1) SourceFile -> PackageClause SEMICOLON ImportDeclList TopLevelDeclList .
    (5) TopLevelDeclList -> TopLevelDeclList . TopLevelDecl SEMICOLON
    (7) TopLevelDecl -> . Declaration
    (8) TopLevelDecl -> . FunctionDecl
    (9) TopLevelDecl -> . MethodDecl
    (30) Declaration -> . ConstDecl
    (31) Declaration -> . TypeDecl
    (32) Declaration -> . VarDecl
    (111) FunctionDecl -> . FUNC FunctionName FunctionDeclTail
    (117) MethodDecl -> . FUNC Receiver MethodName FunctionDeclTail
    (33) ConstDecl -> . CONST ConstSpecTopList
    (49) TypeDecl -> . TYPE TypeSpecTopList
    (101) VarDecl -> . VAR VarSpecTopList

    $end            reduce using rule 1 (SourceFile -> PackageClause SEMICOLON ImportDeclList TopLevelDeclList .)
    FUNC            shift and go to state 19
    CONST           shift and go to state 20
    TYPE            shift and go to state 21
    VAR             shift and go to state 22

    TopLevelDecl                   shift and go to state 12
    Declaration                    shift and go to state 13
    FunctionDecl                   shift and go to state 14
    MethodDecl                     shift and go to state 15
    ConstDecl                      shift and go to state 16
    TypeDecl                       shift and go to state 17
    VarDecl                        shift and go to state 18

state 9

    (3) ImportDeclList -> ImportDeclList ImportDecl . SEMICOLON

    SEMICOLON       shift and go to state 23


state 10

    (4) TopLevelDeclList -> empty .

    FUNC            reduce using rule 4 (TopLevelDeclList -> empty .)
    CONST           reduce using rule 4 (TopLevelDeclList -> empty .)
    TYPE            reduce using rule 4 (TopLevelDeclList -> empty .)
    VAR             reduce using rule 4 (TopLevelDeclList -> empty .)
    $end            reduce using rule 4 (TopLevelDeclList -> empty .)


state 11

    (10) ImportDecl -> IMPORT . ImportSpecTopList
    (11) ImportSpecTopList -> . ImportSpec
    (12) ImportSpecTopList -> . LPAREN ImportSpecList RPAREN
    (15) ImportSpec -> . ImportSpecInit ImportPath
    (16) ImportSpecInit -> . empty
    (17) ImportSpecInit -> . PERIOD
    (18) ImportSpecInit -> . IDENT
    (213) empty -> .

    LPAREN          shift and go to state 26
    PERIOD          shift and go to state 29
    IDENT           shift and go to state 30
    STRING          reduce using rule 213 (empty -> .)

    ImportSpecTopList              shift and go to state 24
    ImportSpec                     shift and go to state 25
    ImportSpecInit                 shift and go to state 27
    empty                          shift and go to state 28

state 12

    (5) TopLevelDeclList -> TopLevelDeclList TopLevelDecl . SEMICOLON

    SEMICOLON       shift and go to state 31


state 13

    (7) TopLevelDecl -> Declaration .

    SEMICOLON       reduce using rule 7 (TopLevelDecl -> Declaration .)


state 14

    (8) TopLevelDecl -> FunctionDecl .

    SEMICOLON       reduce using rule 8 (TopLevelDecl -> FunctionDecl .)


state 15

    (9) TopLevelDecl -> MethodDecl .

    SEMICOLON       reduce using rule 9 (TopLevelDecl -> MethodDecl .)


state 16

    (30) Declaration -> ConstDecl .

    SEMICOLON       reduce using rule 30 (Declaration -> ConstDecl .)


state 17

    (31) Declaration -> TypeDecl .

    SEMICOLON       reduce using rule 31 (Declaration -> TypeDecl .)


state 18

    (32) Declaration -> VarDecl .

    SEMICOLON       reduce using rule 32 (Declaration -> VarDecl .)


state 19

    (111) FunctionDecl -> FUNC . FunctionName FunctionDeclTail
    (117) MethodDecl -> FUNC . Receiver MethodName FunctionDeclTail
    (114) FunctionName -> . IDENT
    (118) Receiver -> . Parameters
    (88) Parameters -> . LPAREN ParameterListTop RPAREN

    IDENT           shift and go to state 34
    LPAREN          shift and go to state 36

    FunctionName                   shift and go to state 32
    Receiver                       shift and go to state 33
    Parameters                     shift and go to state 35

state 20

    (33) ConstDecl -> CONST . ConstSpecTopList
    (34) ConstSpecTopList -> . ConstSpec
    (35) ConstSpecTopList -> . LPAREN ConstSpecList RPAREN
    (38) ConstSpec -> . IdentifierList ConstSpecTail
    (43) IdentifierList -> . IDENT IdentifierBotList

    LPAREN          shift and go to state 39
    IDENT           shift and go to state 41

    ConstSpecTopList               shift and go to state 37
    ConstSpec                      shift and go to state 38
    IdentifierList                 shift and go to state 40

state 21

    (49) TypeDecl -> TYPE . TypeSpecTopList
    (50) TypeSpecTopList -> . TypeSpec
    (51) TypeSpecTopList -> . LPAREN TypeSpecList RPAREN
    (54) TypeSpec -> . AliasDecl
    (55) TypeSpec -> . TypeDef
    (56) AliasDecl -> . IDENT ASSIGN Type
    (57) TypeDef -> . IDENT Type

    LPAREN          shift and go to state 44
    IDENT           shift and go to state 47

    TypeSpecTopList                shift and go to state 42
    TypeSpec                       shift and go to state 43
    AliasDecl                      shift and go to state 45
    TypeDef                        shift and go to state 46

state 22

    (101) VarDecl -> VAR . VarSpecTopList
    (102) VarSpecTopList -> . VarSpec
    (103) VarSpecTopList -> . LPAREN VarSpecList RPAREN
    (106) VarSpec -> . IdentifierList VarSpecTail
    (43) IdentifierList -> . IDENT IdentifierBotList

    LPAREN          shift and go to state 50
    IDENT           shift and go to state 41

    VarSpecTopList                 shift and go to state 48
    VarSpec                        shift and go to state 49
    IdentifierList                 shift and go to state 51

state 23

    (3) ImportDeclList -> ImportDeclList ImportDecl SEMICOLON .

    IMPORT          reduce using rule 3 (ImportDeclList -> ImportDeclList ImportDecl SEMICOLON .)
    FUNC            reduce using rule 3 (ImportDeclList -> ImportDeclList ImportDecl SEMICOLON .)
    CONST           reduce using rule 3 (ImportDeclList -> ImportDeclList ImportDecl SEMICOLON .)
    TYPE            reduce using rule 3 (ImportDeclList -> ImportDeclList ImportDecl SEMICOLON .)
    VAR             reduce using rule 3 (ImportDeclList -> ImportDeclList ImportDecl SEMICOLON .)
    $end            reduce using rule 3 (ImportDeclList -> ImportDeclList ImportDecl SEMICOLON .)


state 24

    (10) ImportDecl -> IMPORT ImportSpecTopList .

    SEMICOLON       reduce using rule 10 (ImportDecl -> IMPORT ImportSpecTopList .)


state 25

    (11) ImportSpecTopList -> ImportSpec .

    SEMICOLON       reduce using rule 11 (ImportSpecTopList -> ImportSpec .)


state 26

    (12) ImportSpecTopList -> LPAREN . ImportSpecList RPAREN
    (13) ImportSpecList -> . empty
    (14) ImportSpecList -> . ImportSpecList ImportSpec SEMICOLON
    (213) empty -> .

    RPAREN          reduce using rule 213 (empty -> .)
    PERIOD          reduce using rule 213 (empty -> .)
    IDENT           reduce using rule 213 (empty -> .)
    STRING          reduce using rule 213 (empty -> .)

    ImportSpecList                 shift and go to state 52
    empty                          shift and go to state 53

state 27

    (15) ImportSpec -> ImportSpecInit . ImportPath
    (19) ImportPath -> . STRING

    STRING          shift and go to state 55

    ImportPath                     shift and go to state 54

state 28

    (16) ImportSpecInit -> empty .

    STRING          reduce using rule 16 (ImportSpecInit -> empty .)


state 29

    (17) ImportSpecInit -> PERIOD .

    STRING          reduce using rule 17 (ImportSpecInit -> PERIOD .)


state 30

    (18) ImportSpecInit -> IDENT .

    STRING          reduce using rule 18 (ImportSpecInit -> IDENT .)


state 31

    (5) TopLevelDeclList -> TopLevelDeclList TopLevelDecl SEMICOLON .

    FUNC            reduce using rule 5 (TopLevelDeclList -> TopLevelDeclList TopLevelDecl SEMICOLON .)
    CONST           reduce using rule 5 (TopLevelDeclList -> TopLevelDeclList TopLevelDecl SEMICOLON .)
    TYPE            reduce using rule 5 (TopLevelDeclList -> TopLevelDeclList TopLevelDecl SEMICOLON .)
    VAR             reduce using rule 5 (TopLevelDeclList -> TopLevelDeclList TopLevelDecl SEMICOLON .)
    $end            reduce using rule 5 (TopLevelDeclList -> TopLevelDeclList TopLevelDecl SEMICOLON .)


state 32

    (111) FunctionDecl -> FUNC FunctionName . FunctionDeclTail
    (112) FunctionDeclTail -> . Function
    (113) FunctionDeclTail -> . Signature
    (115) Function -> . Signature FunctionBody
    (83) Signature -> . Parameters ResultTop
    (88) Parameters -> . LPAREN ParameterListTop RPAREN

    LPAREN          shift and go to state 36

    FunctionDeclTail               shift and go to state 56
    Function                       shift and go to state 57
    Signature                      shift and go to state 58
    Parameters                     shift and go to state 59

state 33

    (117) MethodDecl -> FUNC Receiver . MethodName FunctionDeclTail
    (201) MethodName -> . IDENT

    IDENT           shift and go to state 61

    MethodName                     shift and go to state 60

state 34

    (114) FunctionName -> IDENT .

    LPAREN          reduce using rule 114 (FunctionName -> IDENT .)


state 35

    (118) Receiver -> Parameters .

    IDENT           reduce using rule 118 (Receiver -> Parameters .)


state 36

    (88) Parameters -> LPAREN . ParameterListTop RPAREN
    (89) ParameterListTop -> . empty
    (90) ParameterListTop -> . ParameterList commaTop
    (213) empty -> .
    (93) ParameterList -> . ParameterDecl ParameterDeclList
    (96) ParameterDecl -> . ParameterDeclHead tripledotTop Type
    (99) ParameterDeclHead -> . empty
    (100) ParameterDeclHead -> . IdentifierList
    (43) IdentifierList -> . IDENT IdentifierBotList

  ! shift/reduce conflict for IDENT resolved as shift
    RPAREN          reduce using rule 213 (empty -> .)
    ELLIPSIS        reduce using rule 213 (empty -> .)
    LPAREN          reduce using rule 213 (empty -> .)
    LBRACK          reduce using rule 213 (empty -> .)
    STRUCT          reduce using rule 213 (empty -> .)
    FUNC            reduce using rule 213 (empty -> .)
    IDENT           shift and go to state 41

  ! IDENT           [ reduce using rule 213 (empty -> .) ]

    ParameterListTop               shift and go to state 62
    empty                          shift and go to state 63
    ParameterList                  shift and go to state 64
    ParameterDecl                  shift and go to state 65
    ParameterDeclHead              shift and go to state 66
    IdentifierList                 shift and go to state 67

state 37

    (33) ConstDecl -> CONST ConstSpecTopList .

    SEMICOLON       reduce using rule 33 (ConstDecl -> CONST ConstSpecTopList .)


state 38

    (34) ConstSpecTopList -> ConstSpec .

    SEMICOLON       reduce using rule 34 (ConstSpecTopList -> ConstSpec .)


state 39

    (35) ConstSpecTopList -> LPAREN . ConstSpecList RPAREN
    (36) ConstSpecList -> . empty
    (37) ConstSpecList -> . ConstSpecList ConstSpec SEMICOLON
    (213) empty -> .

    RPAREN          reduce using rule 213 (empty -> .)
    IDENT           reduce using rule 213 (empty -> .)

    ConstSpecList                  shift and go to state 68
    empty                          shift and go to state 69

state 40

    (38) ConstSpec -> IdentifierList . ConstSpecTail
    (39) ConstSpecTail -> . empty
    (40) ConstSpecTail -> . TypeTop ASSIGN ExpressionList
    (213) empty -> .
    (41) TypeTop -> . empty
    (42) TypeTop -> . Type
    (58) Type -> . TypeName
    (59) Type -> . TypeLit
    (60) Type -> . LPAREN Type RPAREN
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (64) TypeLit -> . ArrayType
    (65) TypeLit -> . StructType
    (66) TypeLit -> . FunctionType
    (63) QualifiedIdent -> . IDENT PERIOD IDENT
    (67) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (70) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (82) FunctionType -> . FUNC Signature

    SEMICOLON       reduce using rule 213 (empty -> .)
    ASSIGN          reduce using rule 213 (empty -> .)
    LPAREN          shift and go to state 76
    IDENT           shift and go to state 77
    LBRACK          shift and go to state 82
    STRUCT          shift and go to state 83
    FUNC            shift and go to state 84

    ConstSpecTail                  shift and go to state 70
    empty                          shift and go to state 71
    TypeTop                        shift and go to state 72
    Type                           shift and go to state 73
    TypeName                       shift and go to state 74
    TypeLit                        shift and go to state 75
    QualifiedIdent                 shift and go to state 78
    ArrayType                      shift and go to state 79
    StructType                     shift and go to state 80
    FunctionType                   shift and go to state 81

state 41

    (43) IdentifierList -> IDENT . IdentifierBotList
    (44) IdentifierBotList -> . empty
    (45) IdentifierBotList -> . IdentifierBotList COMMA IDENT
    (213) empty -> .

    COMMA           reduce using rule 213 (empty -> .)
    LPAREN          reduce using rule 213 (empty -> .)
    IDENT           reduce using rule 213 (empty -> .)
    LBRACK          reduce using rule 213 (empty -> .)
    STRUCT          reduce using rule 213 (empty -> .)
    FUNC            reduce using rule 213 (empty -> .)
    ASSIGN          reduce using rule 213 (empty -> .)
    SEMICOLON       reduce using rule 213 (empty -> .)
    ELLIPSIS        reduce using rule 213 (empty -> .)

    IdentifierBotList              shift and go to state 85
    empty                          shift and go to state 86

state 42

    (49) TypeDecl -> TYPE TypeSpecTopList .

    SEMICOLON       reduce using rule 49 (TypeDecl -> TYPE TypeSpecTopList .)


state 43

    (50) TypeSpecTopList -> TypeSpec .

    SEMICOLON       reduce using rule 50 (TypeSpecTopList -> TypeSpec .)


state 44

    (51) TypeSpecTopList -> LPAREN . TypeSpecList RPAREN
    (52) TypeSpecList -> . empty
    (53) TypeSpecList -> . TypeSpecList TypeSpec SEMICOLON
    (213) empty -> .

    RPAREN          reduce using rule 213 (empty -> .)
    IDENT           reduce using rule 213 (empty -> .)

    TypeSpecList                   shift and go to state 87
    empty                          shift and go to state 88

state 45

    (54) TypeSpec -> AliasDecl .

    SEMICOLON       reduce using rule 54 (TypeSpec -> AliasDecl .)


state 46

    (55) TypeSpec -> TypeDef .

    SEMICOLON       reduce using rule 55 (TypeSpec -> TypeDef .)


state 47

    (56) AliasDecl -> IDENT . ASSIGN Type
    (57) TypeDef -> IDENT . Type
    (58) Type -> . TypeName
    (59) Type -> . TypeLit
    (60) Type -> . LPAREN Type RPAREN
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (64) TypeLit -> . ArrayType
    (65) TypeLit -> . StructType
    (66) TypeLit -> . FunctionType
    (63) QualifiedIdent -> . IDENT PERIOD IDENT
    (67) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (70) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (82) FunctionType -> . FUNC Signature

    ASSIGN          shift and go to state 89
    LPAREN          shift and go to state 76
    IDENT           shift and go to state 77
    LBRACK          shift and go to state 82
    STRUCT          shift and go to state 83
    FUNC            shift and go to state 84

    Type                           shift and go to state 90
    TypeName                       shift and go to state 74
    TypeLit                        shift and go to state 75
    QualifiedIdent                 shift and go to state 78
    ArrayType                      shift and go to state 79
    StructType                     shift and go to state 80
    FunctionType                   shift and go to state 81

state 48

    (101) VarDecl -> VAR VarSpecTopList .

    SEMICOLON       reduce using rule 101 (VarDecl -> VAR VarSpecTopList .)


state 49

    (102) VarSpecTopList -> VarSpec .

    SEMICOLON       reduce using rule 102 (VarSpecTopList -> VarSpec .)


state 50

    (103) VarSpecTopList -> LPAREN . VarSpecList RPAREN
    (104) VarSpecList -> . empty
    (105) VarSpecList -> . VarSpecList VarSpec SEMICOLON
    (213) empty -> .

    RPAREN          reduce using rule 213 (empty -> .)
    IDENT           reduce using rule 213 (empty -> .)

    VarSpecList                    shift and go to state 91
    empty                          shift and go to state 92

state 51

    (106) VarSpec -> IdentifierList . VarSpecTail
    (107) VarSpecTail -> . Type VarSpecMid
    (108) VarSpecTail -> . ASSIGN ExpressionList
    (58) Type -> . TypeName
    (59) Type -> . TypeLit
    (60) Type -> . LPAREN Type RPAREN
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (64) TypeLit -> . ArrayType
    (65) TypeLit -> . StructType
    (66) TypeLit -> . FunctionType
    (63) QualifiedIdent -> . IDENT PERIOD IDENT
    (67) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (70) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (82) FunctionType -> . FUNC Signature

    ASSIGN          shift and go to state 95
    LPAREN          shift and go to state 76
    IDENT           shift and go to state 77
    LBRACK          shift and go to state 82
    STRUCT          shift and go to state 83
    FUNC            shift and go to state 84

    VarSpecTail                    shift and go to state 93
    Type                           shift and go to state 94
    TypeName                       shift and go to state 74
    TypeLit                        shift and go to state 75
    QualifiedIdent                 shift and go to state 78
    ArrayType                      shift and go to state 79
    StructType                     shift and go to state 80
    FunctionType                   shift and go to state 81

state 52

    (12) ImportSpecTopList -> LPAREN ImportSpecList . RPAREN
    (14) ImportSpecList -> ImportSpecList . ImportSpec SEMICOLON
    (15) ImportSpec -> . ImportSpecInit ImportPath
    (16) ImportSpecInit -> . empty
    (17) ImportSpecInit -> . PERIOD
    (18) ImportSpecInit -> . IDENT
    (213) empty -> .

    RPAREN          shift and go to state 96
    PERIOD          shift and go to state 29
    IDENT           shift and go to state 30
    STRING          reduce using rule 213 (empty -> .)

    ImportSpec                     shift and go to state 97
    ImportSpecInit                 shift and go to state 27
    empty                          shift and go to state 28

state 53

    (13) ImportSpecList -> empty .

    RPAREN          reduce using rule 13 (ImportSpecList -> empty .)
    PERIOD          reduce using rule 13 (ImportSpecList -> empty .)
    IDENT           reduce using rule 13 (ImportSpecList -> empty .)
    STRING          reduce using rule 13 (ImportSpecList -> empty .)


state 54

    (15) ImportSpec -> ImportSpecInit ImportPath .

    SEMICOLON       reduce using rule 15 (ImportSpec -> ImportSpecInit ImportPath .)


state 55

    (19) ImportPath -> STRING .

    SEMICOLON       reduce using rule 19 (ImportPath -> STRING .)


state 56

    (111) FunctionDecl -> FUNC FunctionName FunctionDeclTail .

    SEMICOLON       reduce using rule 111 (FunctionDecl -> FUNC FunctionName FunctionDeclTail .)


state 57

    (112) FunctionDeclTail -> Function .

    SEMICOLON       reduce using rule 112 (FunctionDeclTail -> Function .)


state 58

    (113) FunctionDeclTail -> Signature .
    (115) Function -> Signature . FunctionBody
    (116) FunctionBody -> . Block
    (20) Block -> . LBRACE StatementList RBRACE

    SEMICOLON       reduce using rule 113 (FunctionDeclTail -> Signature .)
    LBRACE          shift and go to state 100

    FunctionBody                   shift and go to state 98
    Block                          shift and go to state 99

state 59

    (83) Signature -> Parameters . ResultTop
    (84) ResultTop -> . empty
    (85) ResultTop -> . Result
    (213) empty -> .
    (86) Result -> . Parameters
    (87) Result -> . Type
    (88) Parameters -> . LPAREN ParameterListTop RPAREN
    (58) Type -> . TypeName
    (59) Type -> . TypeLit
    (60) Type -> . LPAREN Type RPAREN
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (64) TypeLit -> . ArrayType
    (65) TypeLit -> . StructType
    (66) TypeLit -> . FunctionType
    (63) QualifiedIdent -> . IDENT PERIOD IDENT
    (67) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (70) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (82) FunctionType -> . FUNC Signature

    LBRACE          reduce using rule 213 (empty -> .)
    SEMICOLON       reduce using rule 213 (empty -> .)
    ASSIGN          reduce using rule 213 (empty -> .)
    RPAREN          reduce using rule 213 (empty -> .)
    COMMA           reduce using rule 213 (empty -> .)
    ELLIPSIS        reduce using rule 213 (empty -> .)
    STRING          reduce using rule 213 (empty -> .)
    LPAREN          shift and go to state 106
    IDENT           shift and go to state 77
    LBRACK          shift and go to state 82
    STRUCT          shift and go to state 83
    FUNC            shift and go to state 84

    Parameters                     shift and go to state 101
    ResultTop                      shift and go to state 102
    empty                          shift and go to state 103
    Result                         shift and go to state 104
    Type                           shift and go to state 105
    TypeName                       shift and go to state 74
    TypeLit                        shift and go to state 75
    QualifiedIdent                 shift and go to state 78
    ArrayType                      shift and go to state 79
    StructType                     shift and go to state 80
    FunctionType                   shift and go to state 81

state 60

    (117) MethodDecl -> FUNC Receiver MethodName . FunctionDeclTail
    (112) FunctionDeclTail -> . Function
    (113) FunctionDeclTail -> . Signature
    (115) Function -> . Signature FunctionBody
    (83) Signature -> . Parameters ResultTop
    (88) Parameters -> . LPAREN ParameterListTop RPAREN

    LPAREN          shift and go to state 36

    FunctionDeclTail               shift and go to state 107
    Function                       shift and go to state 57
    Signature                      shift and go to state 58
    Parameters                     shift and go to state 59

state 61

    (201) MethodName -> IDENT .

    LPAREN          reduce using rule 201 (MethodName -> IDENT .)
    PERIOD          reduce using rule 201 (MethodName -> IDENT .)
    LBRACK          reduce using rule 201 (MethodName -> IDENT .)
    LOR             reduce using rule 201 (MethodName -> IDENT .)
    LAND            reduce using rule 201 (MethodName -> IDENT .)
    EQL             reduce using rule 201 (MethodName -> IDENT .)
    NEQ             reduce using rule 201 (MethodName -> IDENT .)
    LSS             reduce using rule 201 (MethodName -> IDENT .)
    LEQ             reduce using rule 201 (MethodName -> IDENT .)
    GTR             reduce using rule 201 (MethodName -> IDENT .)
    GEQ             reduce using rule 201 (MethodName -> IDENT .)
    ADD             reduce using rule 201 (MethodName -> IDENT .)
    SUB             reduce using rule 201 (MethodName -> IDENT .)
    OR              reduce using rule 201 (MethodName -> IDENT .)
    XOR             reduce using rule 201 (MethodName -> IDENT .)
    MUL             reduce using rule 201 (MethodName -> IDENT .)
    QUO             reduce using rule 201 (MethodName -> IDENT .)
    REM             reduce using rule 201 (MethodName -> IDENT .)
    SHL             reduce using rule 201 (MethodName -> IDENT .)
    SHR             reduce using rule 201 (MethodName -> IDENT .)
    AND             reduce using rule 201 (MethodName -> IDENT .)
    AND_NOT         reduce using rule 201 (MethodName -> IDENT .)
    RBRACK          reduce using rule 201 (MethodName -> IDENT .)
    COMMA           reduce using rule 201 (MethodName -> IDENT .)
    SEMICOLON       reduce using rule 201 (MethodName -> IDENT .)
    RPAREN          reduce using rule 201 (MethodName -> IDENT .)
    ASSIGN          reduce using rule 201 (MethodName -> IDENT .)
    ELLIPSIS        reduce using rule 201 (MethodName -> IDENT .)
    LBRACE          reduce using rule 201 (MethodName -> IDENT .)
    COLON           reduce using rule 201 (MethodName -> IDENT .)


state 62

    (88) Parameters -> LPAREN ParameterListTop . RPAREN

    RPAREN          shift and go to state 108


state 63

    (89) ParameterListTop -> empty .
    (99) ParameterDeclHead -> empty .

    RPAREN          reduce using rule 89 (ParameterListTop -> empty .)
    ELLIPSIS        reduce using rule 99 (ParameterDeclHead -> empty .)
    LPAREN          reduce using rule 99 (ParameterDeclHead -> empty .)
    IDENT           reduce using rule 99 (ParameterDeclHead -> empty .)
    LBRACK          reduce using rule 99 (ParameterDeclHead -> empty .)
    STRUCT          reduce using rule 99 (ParameterDeclHead -> empty .)
    FUNC            reduce using rule 99 (ParameterDeclHead -> empty .)


state 64

    (90) ParameterListTop -> ParameterList . commaTop
    (91) commaTop -> . empty
    (92) commaTop -> . COMMA
    (213) empty -> .

    COMMA           shift and go to state 111
    RPAREN          reduce using rule 213 (empty -> .)

    commaTop                       shift and go to state 109
    empty                          shift and go to state 110

state 65

    (93) ParameterList -> ParameterDecl . ParameterDeclList
    (94) ParameterDeclList -> . empty
    (95) ParameterDeclList -> . ParameterDeclList COMMA ParameterDecl
    (213) empty -> .

    COMMA           reduce using rule 213 (empty -> .)
    RPAREN          reduce using rule 213 (empty -> .)

    ParameterDeclList              shift and go to state 112
    empty                          shift and go to state 113

state 66

    (96) ParameterDecl -> ParameterDeclHead . tripledotTop Type
    (97) tripledotTop -> . empty
    (98) tripledotTop -> . ELLIPSIS
    (213) empty -> .

    ELLIPSIS        shift and go to state 116
    LPAREN          reduce using rule 213 (empty -> .)
    IDENT           reduce using rule 213 (empty -> .)
    LBRACK          reduce using rule 213 (empty -> .)
    STRUCT          reduce using rule 213 (empty -> .)
    FUNC            reduce using rule 213 (empty -> .)

    tripledotTop                   shift and go to state 114
    empty                          shift and go to state 115

state 67

    (100) ParameterDeclHead -> IdentifierList .

    ELLIPSIS        reduce using rule 100 (ParameterDeclHead -> IdentifierList .)
    LPAREN          reduce using rule 100 (ParameterDeclHead -> IdentifierList .)
    IDENT           reduce using rule 100 (ParameterDeclHead -> IdentifierList .)
    LBRACK          reduce using rule 100 (ParameterDeclHead -> IdentifierList .)
    STRUCT          reduce using rule 100 (ParameterDeclHead -> IdentifierList .)
    FUNC            reduce using rule 100 (ParameterDeclHead -> IdentifierList .)


state 68

    (35) ConstSpecTopList -> LPAREN ConstSpecList . RPAREN
    (37) ConstSpecList -> ConstSpecList . ConstSpec SEMICOLON
    (38) ConstSpec -> . IdentifierList ConstSpecTail
    (43) IdentifierList -> . IDENT IdentifierBotList

    RPAREN          shift and go to state 117
    IDENT           shift and go to state 41

    ConstSpec                      shift and go to state 118
    IdentifierList                 shift and go to state 40

state 69

    (36) ConstSpecList -> empty .

    RPAREN          reduce using rule 36 (ConstSpecList -> empty .)
    IDENT           reduce using rule 36 (ConstSpecList -> empty .)


state 70

    (38) ConstSpec -> IdentifierList ConstSpecTail .

    SEMICOLON       reduce using rule 38 (ConstSpec -> IdentifierList ConstSpecTail .)


state 71

    (39) ConstSpecTail -> empty .
    (41) TypeTop -> empty .

    SEMICOLON       reduce using rule 39 (ConstSpecTail -> empty .)
    ASSIGN          reduce using rule 41 (TypeTop -> empty .)


state 72

    (40) ConstSpecTail -> TypeTop . ASSIGN ExpressionList

    ASSIGN          shift and go to state 119


state 73

    (42) TypeTop -> Type .

    ASSIGN          reduce using rule 42 (TypeTop -> Type .)


state 74

    (58) Type -> TypeName .

    ASSIGN          reduce using rule 58 (Type -> TypeName .)
    SEMICOLON       reduce using rule 58 (Type -> TypeName .)
    LBRACE          reduce using rule 58 (Type -> TypeName .)
    RPAREN          reduce using rule 58 (Type -> TypeName .)
    COMMA           reduce using rule 58 (Type -> TypeName .)
    ELLIPSIS        reduce using rule 58 (Type -> TypeName .)
    STRING          reduce using rule 58 (Type -> TypeName .)


state 75

    (59) Type -> TypeLit .

    ASSIGN          reduce using rule 59 (Type -> TypeLit .)
    SEMICOLON       reduce using rule 59 (Type -> TypeLit .)
    LBRACE          reduce using rule 59 (Type -> TypeLit .)
    RPAREN          reduce using rule 59 (Type -> TypeLit .)
    COMMA           reduce using rule 59 (Type -> TypeLit .)
    ELLIPSIS        reduce using rule 59 (Type -> TypeLit .)
    STRING          reduce using rule 59 (Type -> TypeLit .)


state 76

    (60) Type -> LPAREN . Type RPAREN
    (58) Type -> . TypeName
    (59) Type -> . TypeLit
    (60) Type -> . LPAREN Type RPAREN
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (64) TypeLit -> . ArrayType
    (65) TypeLit -> . StructType
    (66) TypeLit -> . FunctionType
    (63) QualifiedIdent -> . IDENT PERIOD IDENT
    (67) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (70) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (82) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 76
    IDENT           shift and go to state 77
    LBRACK          shift and go to state 82
    STRUCT          shift and go to state 83
    FUNC            shift and go to state 84

    Type                           shift and go to state 120
    TypeName                       shift and go to state 74
    TypeLit                        shift and go to state 75
    QualifiedIdent                 shift and go to state 78
    ArrayType                      shift and go to state 79
    StructType                     shift and go to state 80
    FunctionType                   shift and go to state 81

state 77

    (61) TypeName -> IDENT .
    (63) QualifiedIdent -> IDENT . PERIOD IDENT

    ASSIGN          reduce using rule 61 (TypeName -> IDENT .)
    SEMICOLON       reduce using rule 61 (TypeName -> IDENT .)
    LBRACE          reduce using rule 61 (TypeName -> IDENT .)
    RPAREN          reduce using rule 61 (TypeName -> IDENT .)
    COMMA           reduce using rule 61 (TypeName -> IDENT .)
    ELLIPSIS        reduce using rule 61 (TypeName -> IDENT .)
    STRING          reduce using rule 61 (TypeName -> IDENT .)
    PERIOD          shift and go to state 121


state 78

    (62) TypeName -> QualifiedIdent .

    ASSIGN          reduce using rule 62 (TypeName -> QualifiedIdent .)
    SEMICOLON       reduce using rule 62 (TypeName -> QualifiedIdent .)
    LBRACE          reduce using rule 62 (TypeName -> QualifiedIdent .)
    RPAREN          reduce using rule 62 (TypeName -> QualifiedIdent .)
    COMMA           reduce using rule 62 (TypeName -> QualifiedIdent .)
    ELLIPSIS        reduce using rule 62 (TypeName -> QualifiedIdent .)
    STRING          reduce using rule 62 (TypeName -> QualifiedIdent .)
    PERIOD          reduce using rule 62 (TypeName -> QualifiedIdent .)


state 79

    (64) TypeLit -> ArrayType .

    ASSIGN          reduce using rule 64 (TypeLit -> ArrayType .)
    SEMICOLON       reduce using rule 64 (TypeLit -> ArrayType .)
    LBRACE          reduce using rule 64 (TypeLit -> ArrayType .)
    RPAREN          reduce using rule 64 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 64 (TypeLit -> ArrayType .)
    ELLIPSIS        reduce using rule 64 (TypeLit -> ArrayType .)
    STRING          reduce using rule 64 (TypeLit -> ArrayType .)


state 80

    (65) TypeLit -> StructType .

    ASSIGN          reduce using rule 65 (TypeLit -> StructType .)
    SEMICOLON       reduce using rule 65 (TypeLit -> StructType .)
    LBRACE          reduce using rule 65 (TypeLit -> StructType .)
    RPAREN          reduce using rule 65 (TypeLit -> StructType .)
    COMMA           reduce using rule 65 (TypeLit -> StructType .)
    ELLIPSIS        reduce using rule 65 (TypeLit -> StructType .)
    STRING          reduce using rule 65 (TypeLit -> StructType .)


state 81

    (66) TypeLit -> FunctionType .

    ASSIGN          reduce using rule 66 (TypeLit -> FunctionType .)
    SEMICOLON       reduce using rule 66 (TypeLit -> FunctionType .)
    LBRACE          reduce using rule 66 (TypeLit -> FunctionType .)
    RPAREN          reduce using rule 66 (TypeLit -> FunctionType .)
    COMMA           reduce using rule 66 (TypeLit -> FunctionType .)
    ELLIPSIS        reduce using rule 66 (TypeLit -> FunctionType .)
    STRING          reduce using rule 66 (TypeLit -> FunctionType .)


state 82

    (67) ArrayType -> LBRACK . ArrayLength RBRACK ElementType
    (68) ArrayLength -> . Expression
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    LPAREN          shift and go to state 138
    IDENT           shift and go to state 141
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    ArrayLength                    shift and go to state 122
    Expression                     shift and go to state 123
    UnaryExpr                      shift and go to state 124
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145
    TypeName                       shift and go to state 147
    QualifiedIdent                 shift and go to state 78

state 83

    (70) StructType -> STRUCT . LBRACE FieldDeclList RBRACE

    LBRACE          shift and go to state 151


state 84

    (82) FunctionType -> FUNC . Signature
    (83) Signature -> . Parameters ResultTop
    (88) Parameters -> . LPAREN ParameterListTop RPAREN

    LPAREN          shift and go to state 36

    Signature                      shift and go to state 152
    Parameters                     shift and go to state 59

state 85

    (43) IdentifierList -> IDENT IdentifierBotList .
    (45) IdentifierBotList -> IdentifierBotList . COMMA IDENT

    LPAREN          reduce using rule 43 (IdentifierList -> IDENT IdentifierBotList .)
    IDENT           reduce using rule 43 (IdentifierList -> IDENT IdentifierBotList .)
    LBRACK          reduce using rule 43 (IdentifierList -> IDENT IdentifierBotList .)
    STRUCT          reduce using rule 43 (IdentifierList -> IDENT IdentifierBotList .)
    FUNC            reduce using rule 43 (IdentifierList -> IDENT IdentifierBotList .)
    ASSIGN          reduce using rule 43 (IdentifierList -> IDENT IdentifierBotList .)
    SEMICOLON       reduce using rule 43 (IdentifierList -> IDENT IdentifierBotList .)
    ELLIPSIS        reduce using rule 43 (IdentifierList -> IDENT IdentifierBotList .)
    DEFINE          reduce using rule 43 (IdentifierList -> IDENT IdentifierBotList .)
    COMMA           shift and go to state 153


state 86

    (44) IdentifierBotList -> empty .

    COMMA           reduce using rule 44 (IdentifierBotList -> empty .)
    LPAREN          reduce using rule 44 (IdentifierBotList -> empty .)
    IDENT           reduce using rule 44 (IdentifierBotList -> empty .)
    LBRACK          reduce using rule 44 (IdentifierBotList -> empty .)
    STRUCT          reduce using rule 44 (IdentifierBotList -> empty .)
    FUNC            reduce using rule 44 (IdentifierBotList -> empty .)
    ASSIGN          reduce using rule 44 (IdentifierBotList -> empty .)
    SEMICOLON       reduce using rule 44 (IdentifierBotList -> empty .)
    ELLIPSIS        reduce using rule 44 (IdentifierBotList -> empty .)
    DEFINE          reduce using rule 44 (IdentifierBotList -> empty .)


state 87

    (51) TypeSpecTopList -> LPAREN TypeSpecList . RPAREN
    (53) TypeSpecList -> TypeSpecList . TypeSpec SEMICOLON
    (54) TypeSpec -> . AliasDecl
    (55) TypeSpec -> . TypeDef
    (56) AliasDecl -> . IDENT ASSIGN Type
    (57) TypeDef -> . IDENT Type

    RPAREN          shift and go to state 154
    IDENT           shift and go to state 47

    TypeSpec                       shift and go to state 155
    AliasDecl                      shift and go to state 45
    TypeDef                        shift and go to state 46

state 88

    (52) TypeSpecList -> empty .

    RPAREN          reduce using rule 52 (TypeSpecList -> empty .)
    IDENT           reduce using rule 52 (TypeSpecList -> empty .)


state 89

    (56) AliasDecl -> IDENT ASSIGN . Type
    (58) Type -> . TypeName
    (59) Type -> . TypeLit
    (60) Type -> . LPAREN Type RPAREN
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (64) TypeLit -> . ArrayType
    (65) TypeLit -> . StructType
    (66) TypeLit -> . FunctionType
    (63) QualifiedIdent -> . IDENT PERIOD IDENT
    (67) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (70) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (82) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 76
    IDENT           shift and go to state 77
    LBRACK          shift and go to state 82
    STRUCT          shift and go to state 83
    FUNC            shift and go to state 84

    Type                           shift and go to state 156
    TypeName                       shift and go to state 74
    TypeLit                        shift and go to state 75
    QualifiedIdent                 shift and go to state 78
    ArrayType                      shift and go to state 79
    StructType                     shift and go to state 80
    FunctionType                   shift and go to state 81

state 90

    (57) TypeDef -> IDENT Type .

    SEMICOLON       reduce using rule 57 (TypeDef -> IDENT Type .)


state 91

    (103) VarSpecTopList -> LPAREN VarSpecList . RPAREN
    (105) VarSpecList -> VarSpecList . VarSpec SEMICOLON
    (106) VarSpec -> . IdentifierList VarSpecTail
    (43) IdentifierList -> . IDENT IdentifierBotList

    RPAREN          shift and go to state 157
    IDENT           shift and go to state 41

    VarSpec                        shift and go to state 158
    IdentifierList                 shift and go to state 51

state 92

    (104) VarSpecList -> empty .

    RPAREN          reduce using rule 104 (VarSpecList -> empty .)
    IDENT           reduce using rule 104 (VarSpecList -> empty .)


state 93

    (106) VarSpec -> IdentifierList VarSpecTail .

    SEMICOLON       reduce using rule 106 (VarSpec -> IdentifierList VarSpecTail .)


state 94

    (107) VarSpecTail -> Type . VarSpecMid
    (109) VarSpecMid -> . empty
    (110) VarSpecMid -> . ASSIGN ExpressionList
    (213) empty -> .

    ASSIGN          shift and go to state 161
    SEMICOLON       reduce using rule 213 (empty -> .)

    VarSpecMid                     shift and go to state 159
    empty                          shift and go to state 160

state 95

    (108) VarSpecTail -> ASSIGN . ExpressionList
    (46) ExpressionList -> . Expression ExpressionBotList
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    LPAREN          shift and go to state 138
    IDENT           shift and go to state 141
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    ExpressionList                 shift and go to state 162
    Expression                     shift and go to state 163
    UnaryExpr                      shift and go to state 124
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145
    TypeName                       shift and go to state 147
    QualifiedIdent                 shift and go to state 78

state 96

    (12) ImportSpecTopList -> LPAREN ImportSpecList RPAREN .

    SEMICOLON       reduce using rule 12 (ImportSpecTopList -> LPAREN ImportSpecList RPAREN .)


state 97

    (14) ImportSpecList -> ImportSpecList ImportSpec . SEMICOLON

    SEMICOLON       shift and go to state 164


state 98

    (115) Function -> Signature FunctionBody .

    SEMICOLON       reduce using rule 115 (Function -> Signature FunctionBody .)
    PERIOD          reduce using rule 115 (Function -> Signature FunctionBody .)
    LBRACK          reduce using rule 115 (Function -> Signature FunctionBody .)
    LPAREN          reduce using rule 115 (Function -> Signature FunctionBody .)
    LOR             reduce using rule 115 (Function -> Signature FunctionBody .)
    LAND            reduce using rule 115 (Function -> Signature FunctionBody .)
    EQL             reduce using rule 115 (Function -> Signature FunctionBody .)
    NEQ             reduce using rule 115 (Function -> Signature FunctionBody .)
    LSS             reduce using rule 115 (Function -> Signature FunctionBody .)
    LEQ             reduce using rule 115 (Function -> Signature FunctionBody .)
    GTR             reduce using rule 115 (Function -> Signature FunctionBody .)
    GEQ             reduce using rule 115 (Function -> Signature FunctionBody .)
    ADD             reduce using rule 115 (Function -> Signature FunctionBody .)
    SUB             reduce using rule 115 (Function -> Signature FunctionBody .)
    OR              reduce using rule 115 (Function -> Signature FunctionBody .)
    XOR             reduce using rule 115 (Function -> Signature FunctionBody .)
    MUL             reduce using rule 115 (Function -> Signature FunctionBody .)
    QUO             reduce using rule 115 (Function -> Signature FunctionBody .)
    REM             reduce using rule 115 (Function -> Signature FunctionBody .)
    SHL             reduce using rule 115 (Function -> Signature FunctionBody .)
    SHR             reduce using rule 115 (Function -> Signature FunctionBody .)
    AND             reduce using rule 115 (Function -> Signature FunctionBody .)
    AND_NOT         reduce using rule 115 (Function -> Signature FunctionBody .)
    RBRACK          reduce using rule 115 (Function -> Signature FunctionBody .)
    COMMA           reduce using rule 115 (Function -> Signature FunctionBody .)
    RPAREN          reduce using rule 115 (Function -> Signature FunctionBody .)
    ASSIGN          reduce using rule 115 (Function -> Signature FunctionBody .)
    ELLIPSIS        reduce using rule 115 (Function -> Signature FunctionBody .)
    LBRACE          reduce using rule 115 (Function -> Signature FunctionBody .)
    COLON           reduce using rule 115 (Function -> Signature FunctionBody .)


state 99

    (116) FunctionBody -> Block .

    SEMICOLON       reduce using rule 116 (FunctionBody -> Block .)
    PERIOD          reduce using rule 116 (FunctionBody -> Block .)
    LBRACK          reduce using rule 116 (FunctionBody -> Block .)
    LPAREN          reduce using rule 116 (FunctionBody -> Block .)
    LOR             reduce using rule 116 (FunctionBody -> Block .)
    LAND            reduce using rule 116 (FunctionBody -> Block .)
    EQL             reduce using rule 116 (FunctionBody -> Block .)
    NEQ             reduce using rule 116 (FunctionBody -> Block .)
    LSS             reduce using rule 116 (FunctionBody -> Block .)
    LEQ             reduce using rule 116 (FunctionBody -> Block .)
    GTR             reduce using rule 116 (FunctionBody -> Block .)
    GEQ             reduce using rule 116 (FunctionBody -> Block .)
    ADD             reduce using rule 116 (FunctionBody -> Block .)
    SUB             reduce using rule 116 (FunctionBody -> Block .)
    OR              reduce using rule 116 (FunctionBody -> Block .)
    XOR             reduce using rule 116 (FunctionBody -> Block .)
    MUL             reduce using rule 116 (FunctionBody -> Block .)
    QUO             reduce using rule 116 (FunctionBody -> Block .)
    REM             reduce using rule 116 (FunctionBody -> Block .)
    SHL             reduce using rule 116 (FunctionBody -> Block .)
    SHR             reduce using rule 116 (FunctionBody -> Block .)
    AND             reduce using rule 116 (FunctionBody -> Block .)
    AND_NOT         reduce using rule 116 (FunctionBody -> Block .)
    RBRACK          reduce using rule 116 (FunctionBody -> Block .)
    COMMA           reduce using rule 116 (FunctionBody -> Block .)
    RPAREN          reduce using rule 116 (FunctionBody -> Block .)
    ASSIGN          reduce using rule 116 (FunctionBody -> Block .)
    ELLIPSIS        reduce using rule 116 (FunctionBody -> Block .)
    LBRACE          reduce using rule 116 (FunctionBody -> Block .)
    COLON           reduce using rule 116 (FunctionBody -> Block .)


state 100

    (20) Block -> LBRACE . StatementList RBRACE
    (21) StatementList -> . empty
    (22) StatementList -> . StatementList Statement SEMICOLON
    (213) empty -> .

    RBRACE          reduce using rule 213 (empty -> .)
    RETURN          reduce using rule 213 (empty -> .)
    LBRACE          reduce using rule 213 (empty -> .)
    IF              reduce using rule 213 (empty -> .)
    FOR             reduce using rule 213 (empty -> .)
    CONST           reduce using rule 213 (empty -> .)
    TYPE            reduce using rule 213 (empty -> .)
    VAR             reduce using rule 213 (empty -> .)
    SWITCH          reduce using rule 213 (empty -> .)
    IDENT           reduce using rule 213 (empty -> .)
    +               reduce using rule 213 (empty -> .)
    -               reduce using rule 213 (empty -> .)
    !               reduce using rule 213 (empty -> .)
    ^               reduce using rule 213 (empty -> .)
    *               reduce using rule 213 (empty -> .)
    &               reduce using rule 213 (empty -> .)
    CHAN            reduce using rule 213 (empty -> .)
    LPAREN          reduce using rule 213 (empty -> .)
    FUNC            reduce using rule 213 (empty -> .)
    INT             reduce using rule 213 (empty -> .)
    FLOAT           reduce using rule 213 (empty -> .)
    STRING          reduce using rule 213 (empty -> .)

    StatementList                  shift and go to state 165
    empty                          shift and go to state 166

state 101

    (86) Result -> Parameters .

    LBRACE          reduce using rule 86 (Result -> Parameters .)
    SEMICOLON       reduce using rule 86 (Result -> Parameters .)
    ASSIGN          reduce using rule 86 (Result -> Parameters .)
    RPAREN          reduce using rule 86 (Result -> Parameters .)
    COMMA           reduce using rule 86 (Result -> Parameters .)
    ELLIPSIS        reduce using rule 86 (Result -> Parameters .)
    STRING          reduce using rule 86 (Result -> Parameters .)


state 102

    (83) Signature -> Parameters ResultTop .

    LBRACE          reduce using rule 83 (Signature -> Parameters ResultTop .)
    SEMICOLON       reduce using rule 83 (Signature -> Parameters ResultTop .)
    ASSIGN          reduce using rule 83 (Signature -> Parameters ResultTop .)
    RPAREN          reduce using rule 83 (Signature -> Parameters ResultTop .)
    COMMA           reduce using rule 83 (Signature -> Parameters ResultTop .)
    ELLIPSIS        reduce using rule 83 (Signature -> Parameters ResultTop .)
    STRING          reduce using rule 83 (Signature -> Parameters ResultTop .)


state 103

    (84) ResultTop -> empty .

    LBRACE          reduce using rule 84 (ResultTop -> empty .)
    SEMICOLON       reduce using rule 84 (ResultTop -> empty .)
    ASSIGN          reduce using rule 84 (ResultTop -> empty .)
    RPAREN          reduce using rule 84 (ResultTop -> empty .)
    COMMA           reduce using rule 84 (ResultTop -> empty .)
    ELLIPSIS        reduce using rule 84 (ResultTop -> empty .)
    STRING          reduce using rule 84 (ResultTop -> empty .)


state 104

    (85) ResultTop -> Result .

    LBRACE          reduce using rule 85 (ResultTop -> Result .)
    SEMICOLON       reduce using rule 85 (ResultTop -> Result .)
    ASSIGN          reduce using rule 85 (ResultTop -> Result .)
    RPAREN          reduce using rule 85 (ResultTop -> Result .)
    COMMA           reduce using rule 85 (ResultTop -> Result .)
    ELLIPSIS        reduce using rule 85 (ResultTop -> Result .)
    STRING          reduce using rule 85 (ResultTop -> Result .)


state 105

    (87) Result -> Type .

    LBRACE          reduce using rule 87 (Result -> Type .)
    SEMICOLON       reduce using rule 87 (Result -> Type .)
    ASSIGN          reduce using rule 87 (Result -> Type .)
    RPAREN          reduce using rule 87 (Result -> Type .)
    COMMA           reduce using rule 87 (Result -> Type .)
    ELLIPSIS        reduce using rule 87 (Result -> Type .)
    STRING          reduce using rule 87 (Result -> Type .)


state 106

    (88) Parameters -> LPAREN . ParameterListTop RPAREN
    (60) Type -> LPAREN . Type RPAREN
    (89) ParameterListTop -> . empty
    (90) ParameterListTop -> . ParameterList commaTop
    (58) Type -> . TypeName
    (59) Type -> . TypeLit
    (60) Type -> . LPAREN Type RPAREN
    (213) empty -> .
    (93) ParameterList -> . ParameterDecl ParameterDeclList
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (64) TypeLit -> . ArrayType
    (65) TypeLit -> . StructType
    (66) TypeLit -> . FunctionType
    (96) ParameterDecl -> . ParameterDeclHead tripledotTop Type
    (63) QualifiedIdent -> . IDENT PERIOD IDENT
    (67) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (70) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (82) FunctionType -> . FUNC Signature
    (99) ParameterDeclHead -> . empty
    (100) ParameterDeclHead -> . IdentifierList
    (43) IdentifierList -> . IDENT IdentifierBotList

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LBRACK resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    LPAREN          shift and go to state 76
    RPAREN          reduce using rule 213 (empty -> .)
    ELLIPSIS        reduce using rule 213 (empty -> .)
    IDENT           shift and go to state 167
    LBRACK          shift and go to state 82
    STRUCT          shift and go to state 83
    FUNC            shift and go to state 84

  ! LPAREN          [ reduce using rule 213 (empty -> .) ]
  ! IDENT           [ reduce using rule 213 (empty -> .) ]
  ! LBRACK          [ reduce using rule 213 (empty -> .) ]
  ! STRUCT          [ reduce using rule 213 (empty -> .) ]
  ! FUNC            [ reduce using rule 213 (empty -> .) ]

    ParameterListTop               shift and go to state 62
    Type                           shift and go to state 120
    empty                          shift and go to state 63
    ParameterList                  shift and go to state 64
    TypeName                       shift and go to state 74
    TypeLit                        shift and go to state 75
    ParameterDecl                  shift and go to state 65
    QualifiedIdent                 shift and go to state 78
    ArrayType                      shift and go to state 79
    StructType                     shift and go to state 80
    FunctionType                   shift and go to state 81
    ParameterDeclHead              shift and go to state 66
    IdentifierList                 shift and go to state 67

state 107

    (117) MethodDecl -> FUNC Receiver MethodName FunctionDeclTail .

    SEMICOLON       reduce using rule 117 (MethodDecl -> FUNC Receiver MethodName FunctionDeclTail .)


state 108

    (88) Parameters -> LPAREN ParameterListTop RPAREN .

    IDENT           reduce using rule 88 (Parameters -> LPAREN ParameterListTop RPAREN .)
    LPAREN          reduce using rule 88 (Parameters -> LPAREN ParameterListTop RPAREN .)
    LBRACK          reduce using rule 88 (Parameters -> LPAREN ParameterListTop RPAREN .)
    STRUCT          reduce using rule 88 (Parameters -> LPAREN ParameterListTop RPAREN .)
    FUNC            reduce using rule 88 (Parameters -> LPAREN ParameterListTop RPAREN .)
    LBRACE          reduce using rule 88 (Parameters -> LPAREN ParameterListTop RPAREN .)
    SEMICOLON       reduce using rule 88 (Parameters -> LPAREN ParameterListTop RPAREN .)
    ASSIGN          reduce using rule 88 (Parameters -> LPAREN ParameterListTop RPAREN .)
    RPAREN          reduce using rule 88 (Parameters -> LPAREN ParameterListTop RPAREN .)
    COMMA           reduce using rule 88 (Parameters -> LPAREN ParameterListTop RPAREN .)
    ELLIPSIS        reduce using rule 88 (Parameters -> LPAREN ParameterListTop RPAREN .)
    STRING          reduce using rule 88 (Parameters -> LPAREN ParameterListTop RPAREN .)


state 109

    (90) ParameterListTop -> ParameterList commaTop .

    RPAREN          reduce using rule 90 (ParameterListTop -> ParameterList commaTop .)


state 110

    (91) commaTop -> empty .

    RPAREN          reduce using rule 91 (commaTop -> empty .)


state 111

    (92) commaTop -> COMMA .

    RPAREN          reduce using rule 92 (commaTop -> COMMA .)


state 112

    (93) ParameterList -> ParameterDecl ParameterDeclList .
    (95) ParameterDeclList -> ParameterDeclList . COMMA ParameterDecl

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 93 (ParameterList -> ParameterDecl ParameterDeclList .)
    COMMA           shift and go to state 168

  ! COMMA           [ reduce using rule 93 (ParameterList -> ParameterDecl ParameterDeclList .) ]


state 113

    (94) ParameterDeclList -> empty .

    COMMA           reduce using rule 94 (ParameterDeclList -> empty .)
    RPAREN          reduce using rule 94 (ParameterDeclList -> empty .)


state 114

    (96) ParameterDecl -> ParameterDeclHead tripledotTop . Type
    (58) Type -> . TypeName
    (59) Type -> . TypeLit
    (60) Type -> . LPAREN Type RPAREN
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (64) TypeLit -> . ArrayType
    (65) TypeLit -> . StructType
    (66) TypeLit -> . FunctionType
    (63) QualifiedIdent -> . IDENT PERIOD IDENT
    (67) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (70) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (82) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 76
    IDENT           shift and go to state 77
    LBRACK          shift and go to state 82
    STRUCT          shift and go to state 83
    FUNC            shift and go to state 84

    Type                           shift and go to state 169
    TypeName                       shift and go to state 74
    TypeLit                        shift and go to state 75
    QualifiedIdent                 shift and go to state 78
    ArrayType                      shift and go to state 79
    StructType                     shift and go to state 80
    FunctionType                   shift and go to state 81

state 115

    (97) tripledotTop -> empty .

    LPAREN          reduce using rule 97 (tripledotTop -> empty .)
    IDENT           reduce using rule 97 (tripledotTop -> empty .)
    LBRACK          reduce using rule 97 (tripledotTop -> empty .)
    STRUCT          reduce using rule 97 (tripledotTop -> empty .)
    FUNC            reduce using rule 97 (tripledotTop -> empty .)
    COMMA           reduce using rule 97 (tripledotTop -> empty .)
    RPAREN          reduce using rule 97 (tripledotTop -> empty .)


state 116

    (98) tripledotTop -> ELLIPSIS .

    LPAREN          reduce using rule 98 (tripledotTop -> ELLIPSIS .)
    IDENT           reduce using rule 98 (tripledotTop -> ELLIPSIS .)
    LBRACK          reduce using rule 98 (tripledotTop -> ELLIPSIS .)
    STRUCT          reduce using rule 98 (tripledotTop -> ELLIPSIS .)
    FUNC            reduce using rule 98 (tripledotTop -> ELLIPSIS .)
    COMMA           reduce using rule 98 (tripledotTop -> ELLIPSIS .)
    RPAREN          reduce using rule 98 (tripledotTop -> ELLIPSIS .)


state 117

    (35) ConstSpecTopList -> LPAREN ConstSpecList RPAREN .

    SEMICOLON       reduce using rule 35 (ConstSpecTopList -> LPAREN ConstSpecList RPAREN .)


state 118

    (37) ConstSpecList -> ConstSpecList ConstSpec . SEMICOLON

    SEMICOLON       shift and go to state 170


state 119

    (40) ConstSpecTail -> TypeTop ASSIGN . ExpressionList
    (46) ExpressionList -> . Expression ExpressionBotList
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    LPAREN          shift and go to state 138
    IDENT           shift and go to state 141
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    ExpressionList                 shift and go to state 171
    Expression                     shift and go to state 163
    UnaryExpr                      shift and go to state 124
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145
    TypeName                       shift and go to state 147
    QualifiedIdent                 shift and go to state 78

state 120

    (60) Type -> LPAREN Type . RPAREN

    RPAREN          shift and go to state 172


state 121

    (63) QualifiedIdent -> IDENT PERIOD . IDENT

    IDENT           shift and go to state 173


state 122

    (67) ArrayType -> LBRACK ArrayLength . RBRACK ElementType

    RBRACK          shift and go to state 174


state 123

    (68) ArrayLength -> Expression .
    (150) Expression -> Expression . binary_op Expression
    (153) binary_op -> . LOR
    (154) binary_op -> . LAND
    (155) binary_op -> . rel_op
    (156) binary_op -> . add_op
    (157) binary_op -> . mul_op
    (158) rel_op -> . EQL
    (159) rel_op -> . NEQ
    (160) rel_op -> . LSS
    (161) rel_op -> . LEQ
    (162) rel_op -> . GTR
    (163) rel_op -> . GEQ
    (164) add_op -> . ADD
    (165) add_op -> . SUB
    (166) add_op -> . OR
    (167) add_op -> . XOR
    (168) mul_op -> . MUL
    (169) mul_op -> . QUO
    (170) mul_op -> . REM
    (171) mul_op -> . SHL
    (172) mul_op -> . SHR
    (173) mul_op -> . AND
    (174) mul_op -> . AND_NOT

    RBRACK          reduce using rule 68 (ArrayLength -> Expression .)
    LOR             shift and go to state 176
    LAND            shift and go to state 177
    EQL             shift and go to state 181
    NEQ             shift and go to state 182
    LSS             shift and go to state 183
    LEQ             shift and go to state 184
    GTR             shift and go to state 185
    GEQ             shift and go to state 186
    ADD             shift and go to state 187
    SUB             shift and go to state 188
    OR              shift and go to state 189
    XOR             shift and go to state 190
    MUL             shift and go to state 191
    QUO             shift and go to state 192
    REM             shift and go to state 193
    SHL             shift and go to state 194
    SHR             shift and go to state 195
    AND             shift and go to state 196
    AND_NOT         shift and go to state 197

    binary_op                      shift and go to state 175
    rel_op                         shift and go to state 178
    add_op                         shift and go to state 179
    mul_op                         shift and go to state 180

state 124

    (149) Expression -> UnaryExpr .

    LOR             reduce using rule 149 (Expression -> UnaryExpr .)
    LAND            reduce using rule 149 (Expression -> UnaryExpr .)
    EQL             reduce using rule 149 (Expression -> UnaryExpr .)
    NEQ             reduce using rule 149 (Expression -> UnaryExpr .)
    LSS             reduce using rule 149 (Expression -> UnaryExpr .)
    LEQ             reduce using rule 149 (Expression -> UnaryExpr .)
    GTR             reduce using rule 149 (Expression -> UnaryExpr .)
    GEQ             reduce using rule 149 (Expression -> UnaryExpr .)
    ADD             reduce using rule 149 (Expression -> UnaryExpr .)
    SUB             reduce using rule 149 (Expression -> UnaryExpr .)
    OR              reduce using rule 149 (Expression -> UnaryExpr .)
    XOR             reduce using rule 149 (Expression -> UnaryExpr .)
    MUL             reduce using rule 149 (Expression -> UnaryExpr .)
    QUO             reduce using rule 149 (Expression -> UnaryExpr .)
    REM             reduce using rule 149 (Expression -> UnaryExpr .)
    SHL             reduce using rule 149 (Expression -> UnaryExpr .)
    SHR             reduce using rule 149 (Expression -> UnaryExpr .)
    AND             reduce using rule 149 (Expression -> UnaryExpr .)
    AND_NOT         reduce using rule 149 (Expression -> UnaryExpr .)
    RBRACK          reduce using rule 149 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 149 (Expression -> UnaryExpr .)
    SEMICOLON       reduce using rule 149 (Expression -> UnaryExpr .)
    RPAREN          reduce using rule 149 (Expression -> UnaryExpr .)
    ASSIGN          reduce using rule 149 (Expression -> UnaryExpr .)
    ELLIPSIS        reduce using rule 149 (Expression -> UnaryExpr .)
    LBRACE          reduce using rule 149 (Expression -> UnaryExpr .)
    COLON           reduce using rule 149 (Expression -> UnaryExpr .)


state 125

    (151) UnaryExpr -> PrimaryExpr .
    (183) PrimaryExpr -> PrimaryExpr . Selector
    (184) PrimaryExpr -> PrimaryExpr . Index
    (185) PrimaryExpr -> PrimaryExpr . Arguments
    (205) Selector -> . PERIOD IDENT
    (206) Index -> . LBRACK Expression RBRACK
    (207) Arguments -> . LPAREN ArgumentsHead RPAREN

    LOR             reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    LAND            reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    EQL             reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    NEQ             reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    LSS             reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    GTR             reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    ADD             reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    SUB             reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    XOR             reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    MUL             reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    QUO             reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    REM             reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    SHL             reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    SHR             reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    AND             reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    AND_NOT         reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    RBRACK          reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    SEMICOLON       reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    ASSIGN          reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    ELLIPSIS        reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 151 (UnaryExpr -> PrimaryExpr .)
    PERIOD          shift and go to state 201
    LBRACK          shift and go to state 202
    LPAREN          shift and go to state 203

    Selector                       shift and go to state 198
    Index                          shift and go to state 199
    Arguments                      shift and go to state 200

state 126

    (152) UnaryExpr -> unary_op . UnaryExpr
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    LPAREN          shift and go to state 138
    IDENT           shift and go to state 141
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    unary_op                       shift and go to state 126
    UnaryExpr                      shift and go to state 204
    PrimaryExpr                    shift and go to state 125
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145
    TypeName                       shift and go to state 147
    QualifiedIdent                 shift and go to state 78

state 127

    (182) PrimaryExpr -> Operand .

    PERIOD          reduce using rule 182 (PrimaryExpr -> Operand .)
    LBRACK          reduce using rule 182 (PrimaryExpr -> Operand .)
    LPAREN          reduce using rule 182 (PrimaryExpr -> Operand .)
    LOR             reduce using rule 182 (PrimaryExpr -> Operand .)
    LAND            reduce using rule 182 (PrimaryExpr -> Operand .)
    EQL             reduce using rule 182 (PrimaryExpr -> Operand .)
    NEQ             reduce using rule 182 (PrimaryExpr -> Operand .)
    LSS             reduce using rule 182 (PrimaryExpr -> Operand .)
    LEQ             reduce using rule 182 (PrimaryExpr -> Operand .)
    GTR             reduce using rule 182 (PrimaryExpr -> Operand .)
    GEQ             reduce using rule 182 (PrimaryExpr -> Operand .)
    ADD             reduce using rule 182 (PrimaryExpr -> Operand .)
    SUB             reduce using rule 182 (PrimaryExpr -> Operand .)
    OR              reduce using rule 182 (PrimaryExpr -> Operand .)
    XOR             reduce using rule 182 (PrimaryExpr -> Operand .)
    MUL             reduce using rule 182 (PrimaryExpr -> Operand .)
    QUO             reduce using rule 182 (PrimaryExpr -> Operand .)
    REM             reduce using rule 182 (PrimaryExpr -> Operand .)
    SHL             reduce using rule 182 (PrimaryExpr -> Operand .)
    SHR             reduce using rule 182 (PrimaryExpr -> Operand .)
    AND             reduce using rule 182 (PrimaryExpr -> Operand .)
    AND_NOT         reduce using rule 182 (PrimaryExpr -> Operand .)
    RBRACK          reduce using rule 182 (PrimaryExpr -> Operand .)
    COMMA           reduce using rule 182 (PrimaryExpr -> Operand .)
    SEMICOLON       reduce using rule 182 (PrimaryExpr -> Operand .)
    RPAREN          reduce using rule 182 (PrimaryExpr -> Operand .)
    ASSIGN          reduce using rule 182 (PrimaryExpr -> Operand .)
    ELLIPSIS        reduce using rule 182 (PrimaryExpr -> Operand .)
    LBRACE          reduce using rule 182 (PrimaryExpr -> Operand .)
    COLON           reduce using rule 182 (PrimaryExpr -> Operand .)


state 128

    (175) unary_op -> + .

    +               reduce using rule 175 (unary_op -> + .)
    -               reduce using rule 175 (unary_op -> + .)
    !               reduce using rule 175 (unary_op -> + .)
    ^               reduce using rule 175 (unary_op -> + .)
    *               reduce using rule 175 (unary_op -> + .)
    &               reduce using rule 175 (unary_op -> + .)
    CHAN            reduce using rule 175 (unary_op -> + .)
    LPAREN          reduce using rule 175 (unary_op -> + .)
    IDENT           reduce using rule 175 (unary_op -> + .)
    FUNC            reduce using rule 175 (unary_op -> + .)
    INT             reduce using rule 175 (unary_op -> + .)
    FLOAT           reduce using rule 175 (unary_op -> + .)
    STRING          reduce using rule 175 (unary_op -> + .)


state 129

    (176) unary_op -> - .

    +               reduce using rule 176 (unary_op -> - .)
    -               reduce using rule 176 (unary_op -> - .)
    !               reduce using rule 176 (unary_op -> - .)
    ^               reduce using rule 176 (unary_op -> - .)
    *               reduce using rule 176 (unary_op -> - .)
    &               reduce using rule 176 (unary_op -> - .)
    CHAN            reduce using rule 176 (unary_op -> - .)
    LPAREN          reduce using rule 176 (unary_op -> - .)
    IDENT           reduce using rule 176 (unary_op -> - .)
    FUNC            reduce using rule 176 (unary_op -> - .)
    INT             reduce using rule 176 (unary_op -> - .)
    FLOAT           reduce using rule 176 (unary_op -> - .)
    STRING          reduce using rule 176 (unary_op -> - .)


state 130

    (177) unary_op -> ! .

    +               reduce using rule 177 (unary_op -> ! .)
    -               reduce using rule 177 (unary_op -> ! .)
    !               reduce using rule 177 (unary_op -> ! .)
    ^               reduce using rule 177 (unary_op -> ! .)
    *               reduce using rule 177 (unary_op -> ! .)
    &               reduce using rule 177 (unary_op -> ! .)
    CHAN            reduce using rule 177 (unary_op -> ! .)
    LPAREN          reduce using rule 177 (unary_op -> ! .)
    IDENT           reduce using rule 177 (unary_op -> ! .)
    FUNC            reduce using rule 177 (unary_op -> ! .)
    INT             reduce using rule 177 (unary_op -> ! .)
    FLOAT           reduce using rule 177 (unary_op -> ! .)
    STRING          reduce using rule 177 (unary_op -> ! .)


state 131

    (178) unary_op -> ^ .

    +               reduce using rule 178 (unary_op -> ^ .)
    -               reduce using rule 178 (unary_op -> ^ .)
    !               reduce using rule 178 (unary_op -> ^ .)
    ^               reduce using rule 178 (unary_op -> ^ .)
    *               reduce using rule 178 (unary_op -> ^ .)
    &               reduce using rule 178 (unary_op -> ^ .)
    CHAN            reduce using rule 178 (unary_op -> ^ .)
    LPAREN          reduce using rule 178 (unary_op -> ^ .)
    IDENT           reduce using rule 178 (unary_op -> ^ .)
    FUNC            reduce using rule 178 (unary_op -> ^ .)
    INT             reduce using rule 178 (unary_op -> ^ .)
    FLOAT           reduce using rule 178 (unary_op -> ^ .)
    STRING          reduce using rule 178 (unary_op -> ^ .)


state 132

    (179) unary_op -> * .

    +               reduce using rule 179 (unary_op -> * .)
    -               reduce using rule 179 (unary_op -> * .)
    !               reduce using rule 179 (unary_op -> * .)
    ^               reduce using rule 179 (unary_op -> * .)
    *               reduce using rule 179 (unary_op -> * .)
    &               reduce using rule 179 (unary_op -> * .)
    CHAN            reduce using rule 179 (unary_op -> * .)
    LPAREN          reduce using rule 179 (unary_op -> * .)
    IDENT           reduce using rule 179 (unary_op -> * .)
    FUNC            reduce using rule 179 (unary_op -> * .)
    INT             reduce using rule 179 (unary_op -> * .)
    FLOAT           reduce using rule 179 (unary_op -> * .)
    STRING          reduce using rule 179 (unary_op -> * .)


state 133

    (180) unary_op -> & .

    +               reduce using rule 180 (unary_op -> & .)
    -               reduce using rule 180 (unary_op -> & .)
    !               reduce using rule 180 (unary_op -> & .)
    ^               reduce using rule 180 (unary_op -> & .)
    *               reduce using rule 180 (unary_op -> & .)
    &               reduce using rule 180 (unary_op -> & .)
    CHAN            reduce using rule 180 (unary_op -> & .)
    LPAREN          reduce using rule 180 (unary_op -> & .)
    IDENT           reduce using rule 180 (unary_op -> & .)
    FUNC            reduce using rule 180 (unary_op -> & .)
    INT             reduce using rule 180 (unary_op -> & .)
    FLOAT           reduce using rule 180 (unary_op -> & .)
    STRING          reduce using rule 180 (unary_op -> & .)


state 134

    (181) unary_op -> CHAN .

    +               reduce using rule 181 (unary_op -> CHAN .)
    -               reduce using rule 181 (unary_op -> CHAN .)
    !               reduce using rule 181 (unary_op -> CHAN .)
    ^               reduce using rule 181 (unary_op -> CHAN .)
    *               reduce using rule 181 (unary_op -> CHAN .)
    &               reduce using rule 181 (unary_op -> CHAN .)
    CHAN            reduce using rule 181 (unary_op -> CHAN .)
    LPAREN          reduce using rule 181 (unary_op -> CHAN .)
    IDENT           reduce using rule 181 (unary_op -> CHAN .)
    FUNC            reduce using rule 181 (unary_op -> CHAN .)
    INT             reduce using rule 181 (unary_op -> CHAN .)
    FLOAT           reduce using rule 181 (unary_op -> CHAN .)
    STRING          reduce using rule 181 (unary_op -> CHAN .)


state 135

    (186) Operand -> Literal .

    PERIOD          reduce using rule 186 (Operand -> Literal .)
    LBRACK          reduce using rule 186 (Operand -> Literal .)
    LPAREN          reduce using rule 186 (Operand -> Literal .)
    LOR             reduce using rule 186 (Operand -> Literal .)
    LAND            reduce using rule 186 (Operand -> Literal .)
    EQL             reduce using rule 186 (Operand -> Literal .)
    NEQ             reduce using rule 186 (Operand -> Literal .)
    LSS             reduce using rule 186 (Operand -> Literal .)
    LEQ             reduce using rule 186 (Operand -> Literal .)
    GTR             reduce using rule 186 (Operand -> Literal .)
    GEQ             reduce using rule 186 (Operand -> Literal .)
    ADD             reduce using rule 186 (Operand -> Literal .)
    SUB             reduce using rule 186 (Operand -> Literal .)
    OR              reduce using rule 186 (Operand -> Literal .)
    XOR             reduce using rule 186 (Operand -> Literal .)
    MUL             reduce using rule 186 (Operand -> Literal .)
    QUO             reduce using rule 186 (Operand -> Literal .)
    REM             reduce using rule 186 (Operand -> Literal .)
    SHL             reduce using rule 186 (Operand -> Literal .)
    SHR             reduce using rule 186 (Operand -> Literal .)
    AND             reduce using rule 186 (Operand -> Literal .)
    AND_NOT         reduce using rule 186 (Operand -> Literal .)
    RBRACK          reduce using rule 186 (Operand -> Literal .)
    COMMA           reduce using rule 186 (Operand -> Literal .)
    SEMICOLON       reduce using rule 186 (Operand -> Literal .)
    RPAREN          reduce using rule 186 (Operand -> Literal .)
    ASSIGN          reduce using rule 186 (Operand -> Literal .)
    ELLIPSIS        reduce using rule 186 (Operand -> Literal .)
    LBRACE          reduce using rule 186 (Operand -> Literal .)
    COLON           reduce using rule 186 (Operand -> Literal .)


state 136

    (187) Operand -> OperandName .

    PERIOD          reduce using rule 187 (Operand -> OperandName .)
    LBRACK          reduce using rule 187 (Operand -> OperandName .)
    LPAREN          reduce using rule 187 (Operand -> OperandName .)
    LOR             reduce using rule 187 (Operand -> OperandName .)
    LAND            reduce using rule 187 (Operand -> OperandName .)
    EQL             reduce using rule 187 (Operand -> OperandName .)
    NEQ             reduce using rule 187 (Operand -> OperandName .)
    LSS             reduce using rule 187 (Operand -> OperandName .)
    LEQ             reduce using rule 187 (Operand -> OperandName .)
    GTR             reduce using rule 187 (Operand -> OperandName .)
    GEQ             reduce using rule 187 (Operand -> OperandName .)
    ADD             reduce using rule 187 (Operand -> OperandName .)
    SUB             reduce using rule 187 (Operand -> OperandName .)
    OR              reduce using rule 187 (Operand -> OperandName .)
    XOR             reduce using rule 187 (Operand -> OperandName .)
    MUL             reduce using rule 187 (Operand -> OperandName .)
    QUO             reduce using rule 187 (Operand -> OperandName .)
    REM             reduce using rule 187 (Operand -> OperandName .)
    SHL             reduce using rule 187 (Operand -> OperandName .)
    SHR             reduce using rule 187 (Operand -> OperandName .)
    AND             reduce using rule 187 (Operand -> OperandName .)
    AND_NOT         reduce using rule 187 (Operand -> OperandName .)
    RBRACK          reduce using rule 187 (Operand -> OperandName .)
    COMMA           reduce using rule 187 (Operand -> OperandName .)
    SEMICOLON       reduce using rule 187 (Operand -> OperandName .)
    RPAREN          reduce using rule 187 (Operand -> OperandName .)
    ASSIGN          reduce using rule 187 (Operand -> OperandName .)
    ELLIPSIS        reduce using rule 187 (Operand -> OperandName .)
    LBRACE          reduce using rule 187 (Operand -> OperandName .)
    COLON           reduce using rule 187 (Operand -> OperandName .)


state 137

    (188) Operand -> MethodExpr .

    PERIOD          reduce using rule 188 (Operand -> MethodExpr .)
    LBRACK          reduce using rule 188 (Operand -> MethodExpr .)
    LPAREN          reduce using rule 188 (Operand -> MethodExpr .)
    LOR             reduce using rule 188 (Operand -> MethodExpr .)
    LAND            reduce using rule 188 (Operand -> MethodExpr .)
    EQL             reduce using rule 188 (Operand -> MethodExpr .)
    NEQ             reduce using rule 188 (Operand -> MethodExpr .)
    LSS             reduce using rule 188 (Operand -> MethodExpr .)
    LEQ             reduce using rule 188 (Operand -> MethodExpr .)
    GTR             reduce using rule 188 (Operand -> MethodExpr .)
    GEQ             reduce using rule 188 (Operand -> MethodExpr .)
    ADD             reduce using rule 188 (Operand -> MethodExpr .)
    SUB             reduce using rule 188 (Operand -> MethodExpr .)
    OR              reduce using rule 188 (Operand -> MethodExpr .)
    XOR             reduce using rule 188 (Operand -> MethodExpr .)
    MUL             reduce using rule 188 (Operand -> MethodExpr .)
    QUO             reduce using rule 188 (Operand -> MethodExpr .)
    REM             reduce using rule 188 (Operand -> MethodExpr .)
    SHL             reduce using rule 188 (Operand -> MethodExpr .)
    SHR             reduce using rule 188 (Operand -> MethodExpr .)
    AND             reduce using rule 188 (Operand -> MethodExpr .)
    AND_NOT         reduce using rule 188 (Operand -> MethodExpr .)
    RBRACK          reduce using rule 188 (Operand -> MethodExpr .)
    COMMA           reduce using rule 188 (Operand -> MethodExpr .)
    SEMICOLON       reduce using rule 188 (Operand -> MethodExpr .)
    RPAREN          reduce using rule 188 (Operand -> MethodExpr .)
    ASSIGN          reduce using rule 188 (Operand -> MethodExpr .)
    ELLIPSIS        reduce using rule 188 (Operand -> MethodExpr .)
    LBRACE          reduce using rule 188 (Operand -> MethodExpr .)
    COLON           reduce using rule 188 (Operand -> MethodExpr .)


state 138

    (189) Operand -> LPAREN . Expression RPAREN
    (203) ReceiverType -> LPAREN . MUL TypeName RPAREN
    (204) ReceiverType -> LPAREN . ReceiverType RPAREN
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (63) QualifiedIdent -> . IDENT PERIOD IDENT
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING

    MUL             shift and go to state 207
    LPAREN          shift and go to state 205
    IDENT           shift and go to state 209
    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    Expression                     shift and go to state 206
    TypeName                       shift and go to state 147
    ReceiverType                   shift and go to state 208
    UnaryExpr                      shift and go to state 124
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    QualifiedIdent                 shift and go to state 78
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145

state 139

    (190) Literal -> BasicLit .

    PERIOD          reduce using rule 190 (Literal -> BasicLit .)
    LBRACK          reduce using rule 190 (Literal -> BasicLit .)
    LPAREN          reduce using rule 190 (Literal -> BasicLit .)
    LOR             reduce using rule 190 (Literal -> BasicLit .)
    LAND            reduce using rule 190 (Literal -> BasicLit .)
    EQL             reduce using rule 190 (Literal -> BasicLit .)
    NEQ             reduce using rule 190 (Literal -> BasicLit .)
    LSS             reduce using rule 190 (Literal -> BasicLit .)
    LEQ             reduce using rule 190 (Literal -> BasicLit .)
    GTR             reduce using rule 190 (Literal -> BasicLit .)
    GEQ             reduce using rule 190 (Literal -> BasicLit .)
    ADD             reduce using rule 190 (Literal -> BasicLit .)
    SUB             reduce using rule 190 (Literal -> BasicLit .)
    OR              reduce using rule 190 (Literal -> BasicLit .)
    XOR             reduce using rule 190 (Literal -> BasicLit .)
    MUL             reduce using rule 190 (Literal -> BasicLit .)
    QUO             reduce using rule 190 (Literal -> BasicLit .)
    REM             reduce using rule 190 (Literal -> BasicLit .)
    SHL             reduce using rule 190 (Literal -> BasicLit .)
    SHR             reduce using rule 190 (Literal -> BasicLit .)
    AND             reduce using rule 190 (Literal -> BasicLit .)
    AND_NOT         reduce using rule 190 (Literal -> BasicLit .)
    RBRACK          reduce using rule 190 (Literal -> BasicLit .)
    COMMA           reduce using rule 190 (Literal -> BasicLit .)
    SEMICOLON       reduce using rule 190 (Literal -> BasicLit .)
    RPAREN          reduce using rule 190 (Literal -> BasicLit .)
    ASSIGN          reduce using rule 190 (Literal -> BasicLit .)
    ELLIPSIS        reduce using rule 190 (Literal -> BasicLit .)
    LBRACE          reduce using rule 190 (Literal -> BasicLit .)
    COLON           reduce using rule 190 (Literal -> BasicLit .)


state 140

    (191) Literal -> FunctionLit .

    PERIOD          reduce using rule 191 (Literal -> FunctionLit .)
    LBRACK          reduce using rule 191 (Literal -> FunctionLit .)
    LPAREN          reduce using rule 191 (Literal -> FunctionLit .)
    LOR             reduce using rule 191 (Literal -> FunctionLit .)
    LAND            reduce using rule 191 (Literal -> FunctionLit .)
    EQL             reduce using rule 191 (Literal -> FunctionLit .)
    NEQ             reduce using rule 191 (Literal -> FunctionLit .)
    LSS             reduce using rule 191 (Literal -> FunctionLit .)
    LEQ             reduce using rule 191 (Literal -> FunctionLit .)
    GTR             reduce using rule 191 (Literal -> FunctionLit .)
    GEQ             reduce using rule 191 (Literal -> FunctionLit .)
    ADD             reduce using rule 191 (Literal -> FunctionLit .)
    SUB             reduce using rule 191 (Literal -> FunctionLit .)
    OR              reduce using rule 191 (Literal -> FunctionLit .)
    XOR             reduce using rule 191 (Literal -> FunctionLit .)
    MUL             reduce using rule 191 (Literal -> FunctionLit .)
    QUO             reduce using rule 191 (Literal -> FunctionLit .)
    REM             reduce using rule 191 (Literal -> FunctionLit .)
    SHL             reduce using rule 191 (Literal -> FunctionLit .)
    SHR             reduce using rule 191 (Literal -> FunctionLit .)
    AND             reduce using rule 191 (Literal -> FunctionLit .)
    AND_NOT         reduce using rule 191 (Literal -> FunctionLit .)
    RBRACK          reduce using rule 191 (Literal -> FunctionLit .)
    COMMA           reduce using rule 191 (Literal -> FunctionLit .)
    SEMICOLON       reduce using rule 191 (Literal -> FunctionLit .)
    RPAREN          reduce using rule 191 (Literal -> FunctionLit .)
    ASSIGN          reduce using rule 191 (Literal -> FunctionLit .)
    ELLIPSIS        reduce using rule 191 (Literal -> FunctionLit .)
    LBRACE          reduce using rule 191 (Literal -> FunctionLit .)
    COLON           reduce using rule 191 (Literal -> FunctionLit .)


state 141

    (198) OperandName -> IDENT .
    (61) TypeName -> IDENT .
    (63) QualifiedIdent -> IDENT . PERIOD IDENT

  ! reduce/reduce conflict for PERIOD resolved using rule 61 (TypeName -> IDENT .)
  ! shift/reduce conflict for PERIOD resolved as shift
    LBRACK          reduce using rule 198 (OperandName -> IDENT .)
    LPAREN          reduce using rule 198 (OperandName -> IDENT .)
    LOR             reduce using rule 198 (OperandName -> IDENT .)
    LAND            reduce using rule 198 (OperandName -> IDENT .)
    EQL             reduce using rule 198 (OperandName -> IDENT .)
    NEQ             reduce using rule 198 (OperandName -> IDENT .)
    LSS             reduce using rule 198 (OperandName -> IDENT .)
    LEQ             reduce using rule 198 (OperandName -> IDENT .)
    GTR             reduce using rule 198 (OperandName -> IDENT .)
    GEQ             reduce using rule 198 (OperandName -> IDENT .)
    ADD             reduce using rule 198 (OperandName -> IDENT .)
    SUB             reduce using rule 198 (OperandName -> IDENT .)
    OR              reduce using rule 198 (OperandName -> IDENT .)
    XOR             reduce using rule 198 (OperandName -> IDENT .)
    MUL             reduce using rule 198 (OperandName -> IDENT .)
    QUO             reduce using rule 198 (OperandName -> IDENT .)
    REM             reduce using rule 198 (OperandName -> IDENT .)
    SHL             reduce using rule 198 (OperandName -> IDENT .)
    SHR             reduce using rule 198 (OperandName -> IDENT .)
    AND             reduce using rule 198 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 198 (OperandName -> IDENT .)
    RBRACK          reduce using rule 198 (OperandName -> IDENT .)
    COMMA           reduce using rule 198 (OperandName -> IDENT .)
    SEMICOLON       reduce using rule 198 (OperandName -> IDENT .)
    RPAREN          reduce using rule 198 (OperandName -> IDENT .)
    ASSIGN          reduce using rule 198 (OperandName -> IDENT .)
    ELLIPSIS        reduce using rule 198 (OperandName -> IDENT .)
    LBRACE          reduce using rule 198 (OperandName -> IDENT .)
    COLON           reduce using rule 198 (OperandName -> IDENT .)
    PERIOD          shift and go to state 121

  ! PERIOD          [ reduce using rule 198 (OperandName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 61 (TypeName -> IDENT .) ]


state 142

    (200) MethodExpr -> ReceiverType . PERIOD MethodName

    PERIOD          shift and go to state 210


state 143

    (192) BasicLit -> int_lit .

    PERIOD          reduce using rule 192 (BasicLit -> int_lit .)
    LBRACK          reduce using rule 192 (BasicLit -> int_lit .)
    LPAREN          reduce using rule 192 (BasicLit -> int_lit .)
    LOR             reduce using rule 192 (BasicLit -> int_lit .)
    LAND            reduce using rule 192 (BasicLit -> int_lit .)
    EQL             reduce using rule 192 (BasicLit -> int_lit .)
    NEQ             reduce using rule 192 (BasicLit -> int_lit .)
    LSS             reduce using rule 192 (BasicLit -> int_lit .)
    LEQ             reduce using rule 192 (BasicLit -> int_lit .)
    GTR             reduce using rule 192 (BasicLit -> int_lit .)
    GEQ             reduce using rule 192 (BasicLit -> int_lit .)
    ADD             reduce using rule 192 (BasicLit -> int_lit .)
    SUB             reduce using rule 192 (BasicLit -> int_lit .)
    OR              reduce using rule 192 (BasicLit -> int_lit .)
    XOR             reduce using rule 192 (BasicLit -> int_lit .)
    MUL             reduce using rule 192 (BasicLit -> int_lit .)
    QUO             reduce using rule 192 (BasicLit -> int_lit .)
    REM             reduce using rule 192 (BasicLit -> int_lit .)
    SHL             reduce using rule 192 (BasicLit -> int_lit .)
    SHR             reduce using rule 192 (BasicLit -> int_lit .)
    AND             reduce using rule 192 (BasicLit -> int_lit .)
    AND_NOT         reduce using rule 192 (BasicLit -> int_lit .)
    RBRACK          reduce using rule 192 (BasicLit -> int_lit .)
    COMMA           reduce using rule 192 (BasicLit -> int_lit .)
    SEMICOLON       reduce using rule 192 (BasicLit -> int_lit .)
    RPAREN          reduce using rule 192 (BasicLit -> int_lit .)
    ASSIGN          reduce using rule 192 (BasicLit -> int_lit .)
    ELLIPSIS        reduce using rule 192 (BasicLit -> int_lit .)
    LBRACE          reduce using rule 192 (BasicLit -> int_lit .)
    COLON           reduce using rule 192 (BasicLit -> int_lit .)


state 144

    (193) BasicLit -> float_lit .

    PERIOD          reduce using rule 193 (BasicLit -> float_lit .)
    LBRACK          reduce using rule 193 (BasicLit -> float_lit .)
    LPAREN          reduce using rule 193 (BasicLit -> float_lit .)
    LOR             reduce using rule 193 (BasicLit -> float_lit .)
    LAND            reduce using rule 193 (BasicLit -> float_lit .)
    EQL             reduce using rule 193 (BasicLit -> float_lit .)
    NEQ             reduce using rule 193 (BasicLit -> float_lit .)
    LSS             reduce using rule 193 (BasicLit -> float_lit .)
    LEQ             reduce using rule 193 (BasicLit -> float_lit .)
    GTR             reduce using rule 193 (BasicLit -> float_lit .)
    GEQ             reduce using rule 193 (BasicLit -> float_lit .)
    ADD             reduce using rule 193 (BasicLit -> float_lit .)
    SUB             reduce using rule 193 (BasicLit -> float_lit .)
    OR              reduce using rule 193 (BasicLit -> float_lit .)
    XOR             reduce using rule 193 (BasicLit -> float_lit .)
    MUL             reduce using rule 193 (BasicLit -> float_lit .)
    QUO             reduce using rule 193 (BasicLit -> float_lit .)
    REM             reduce using rule 193 (BasicLit -> float_lit .)
    SHL             reduce using rule 193 (BasicLit -> float_lit .)
    SHR             reduce using rule 193 (BasicLit -> float_lit .)
    AND             reduce using rule 193 (BasicLit -> float_lit .)
    AND_NOT         reduce using rule 193 (BasicLit -> float_lit .)
    RBRACK          reduce using rule 193 (BasicLit -> float_lit .)
    COMMA           reduce using rule 193 (BasicLit -> float_lit .)
    SEMICOLON       reduce using rule 193 (BasicLit -> float_lit .)
    RPAREN          reduce using rule 193 (BasicLit -> float_lit .)
    ASSIGN          reduce using rule 193 (BasicLit -> float_lit .)
    ELLIPSIS        reduce using rule 193 (BasicLit -> float_lit .)
    LBRACE          reduce using rule 193 (BasicLit -> float_lit .)
    COLON           reduce using rule 193 (BasicLit -> float_lit .)


state 145

    (194) BasicLit -> string_lit .

    PERIOD          reduce using rule 194 (BasicLit -> string_lit .)
    LBRACK          reduce using rule 194 (BasicLit -> string_lit .)
    LPAREN          reduce using rule 194 (BasicLit -> string_lit .)
    LOR             reduce using rule 194 (BasicLit -> string_lit .)
    LAND            reduce using rule 194 (BasicLit -> string_lit .)
    EQL             reduce using rule 194 (BasicLit -> string_lit .)
    NEQ             reduce using rule 194 (BasicLit -> string_lit .)
    LSS             reduce using rule 194 (BasicLit -> string_lit .)
    LEQ             reduce using rule 194 (BasicLit -> string_lit .)
    GTR             reduce using rule 194 (BasicLit -> string_lit .)
    GEQ             reduce using rule 194 (BasicLit -> string_lit .)
    ADD             reduce using rule 194 (BasicLit -> string_lit .)
    SUB             reduce using rule 194 (BasicLit -> string_lit .)
    OR              reduce using rule 194 (BasicLit -> string_lit .)
    XOR             reduce using rule 194 (BasicLit -> string_lit .)
    MUL             reduce using rule 194 (BasicLit -> string_lit .)
    QUO             reduce using rule 194 (BasicLit -> string_lit .)
    REM             reduce using rule 194 (BasicLit -> string_lit .)
    SHL             reduce using rule 194 (BasicLit -> string_lit .)
    SHR             reduce using rule 194 (BasicLit -> string_lit .)
    AND             reduce using rule 194 (BasicLit -> string_lit .)
    AND_NOT         reduce using rule 194 (BasicLit -> string_lit .)
    RBRACK          reduce using rule 194 (BasicLit -> string_lit .)
    COMMA           reduce using rule 194 (BasicLit -> string_lit .)
    SEMICOLON       reduce using rule 194 (BasicLit -> string_lit .)
    RPAREN          reduce using rule 194 (BasicLit -> string_lit .)
    ASSIGN          reduce using rule 194 (BasicLit -> string_lit .)
    ELLIPSIS        reduce using rule 194 (BasicLit -> string_lit .)
    LBRACE          reduce using rule 194 (BasicLit -> string_lit .)
    COLON           reduce using rule 194 (BasicLit -> string_lit .)


state 146

    (199) FunctionLit -> FUNC . Function
    (115) Function -> . Signature FunctionBody
    (83) Signature -> . Parameters ResultTop
    (88) Parameters -> . LPAREN ParameterListTop RPAREN

    LPAREN          shift and go to state 36

    Function                       shift and go to state 211
    Signature                      shift and go to state 212
    Parameters                     shift and go to state 59

state 147

    (202) ReceiverType -> TypeName .

    PERIOD          reduce using rule 202 (ReceiverType -> TypeName .)
    RPAREN          reduce using rule 202 (ReceiverType -> TypeName .)


state 148

    (195) int_lit -> INT .

    PERIOD          reduce using rule 195 (int_lit -> INT .)
    LBRACK          reduce using rule 195 (int_lit -> INT .)
    LPAREN          reduce using rule 195 (int_lit -> INT .)
    LOR             reduce using rule 195 (int_lit -> INT .)
    LAND            reduce using rule 195 (int_lit -> INT .)
    EQL             reduce using rule 195 (int_lit -> INT .)
    NEQ             reduce using rule 195 (int_lit -> INT .)
    LSS             reduce using rule 195 (int_lit -> INT .)
    LEQ             reduce using rule 195 (int_lit -> INT .)
    GTR             reduce using rule 195 (int_lit -> INT .)
    GEQ             reduce using rule 195 (int_lit -> INT .)
    ADD             reduce using rule 195 (int_lit -> INT .)
    SUB             reduce using rule 195 (int_lit -> INT .)
    OR              reduce using rule 195 (int_lit -> INT .)
    XOR             reduce using rule 195 (int_lit -> INT .)
    MUL             reduce using rule 195 (int_lit -> INT .)
    QUO             reduce using rule 195 (int_lit -> INT .)
    REM             reduce using rule 195 (int_lit -> INT .)
    SHL             reduce using rule 195 (int_lit -> INT .)
    SHR             reduce using rule 195 (int_lit -> INT .)
    AND             reduce using rule 195 (int_lit -> INT .)
    AND_NOT         reduce using rule 195 (int_lit -> INT .)
    RBRACK          reduce using rule 195 (int_lit -> INT .)
    COMMA           reduce using rule 195 (int_lit -> INT .)
    SEMICOLON       reduce using rule 195 (int_lit -> INT .)
    RPAREN          reduce using rule 195 (int_lit -> INT .)
    ASSIGN          reduce using rule 195 (int_lit -> INT .)
    ELLIPSIS        reduce using rule 195 (int_lit -> INT .)
    LBRACE          reduce using rule 195 (int_lit -> INT .)
    COLON           reduce using rule 195 (int_lit -> INT .)


state 149

    (196) float_lit -> FLOAT .

    PERIOD          reduce using rule 196 (float_lit -> FLOAT .)
    LBRACK          reduce using rule 196 (float_lit -> FLOAT .)
    LPAREN          reduce using rule 196 (float_lit -> FLOAT .)
    LOR             reduce using rule 196 (float_lit -> FLOAT .)
    LAND            reduce using rule 196 (float_lit -> FLOAT .)
    EQL             reduce using rule 196 (float_lit -> FLOAT .)
    NEQ             reduce using rule 196 (float_lit -> FLOAT .)
    LSS             reduce using rule 196 (float_lit -> FLOAT .)
    LEQ             reduce using rule 196 (float_lit -> FLOAT .)
    GTR             reduce using rule 196 (float_lit -> FLOAT .)
    GEQ             reduce using rule 196 (float_lit -> FLOAT .)
    ADD             reduce using rule 196 (float_lit -> FLOAT .)
    SUB             reduce using rule 196 (float_lit -> FLOAT .)
    OR              reduce using rule 196 (float_lit -> FLOAT .)
    XOR             reduce using rule 196 (float_lit -> FLOAT .)
    MUL             reduce using rule 196 (float_lit -> FLOAT .)
    QUO             reduce using rule 196 (float_lit -> FLOAT .)
    REM             reduce using rule 196 (float_lit -> FLOAT .)
    SHL             reduce using rule 196 (float_lit -> FLOAT .)
    SHR             reduce using rule 196 (float_lit -> FLOAT .)
    AND             reduce using rule 196 (float_lit -> FLOAT .)
    AND_NOT         reduce using rule 196 (float_lit -> FLOAT .)
    RBRACK          reduce using rule 196 (float_lit -> FLOAT .)
    COMMA           reduce using rule 196 (float_lit -> FLOAT .)
    SEMICOLON       reduce using rule 196 (float_lit -> FLOAT .)
    RPAREN          reduce using rule 196 (float_lit -> FLOAT .)
    ASSIGN          reduce using rule 196 (float_lit -> FLOAT .)
    ELLIPSIS        reduce using rule 196 (float_lit -> FLOAT .)
    LBRACE          reduce using rule 196 (float_lit -> FLOAT .)
    COLON           reduce using rule 196 (float_lit -> FLOAT .)


state 150

    (197) string_lit -> STRING .

    PERIOD          reduce using rule 197 (string_lit -> STRING .)
    LBRACK          reduce using rule 197 (string_lit -> STRING .)
    LPAREN          reduce using rule 197 (string_lit -> STRING .)
    LOR             reduce using rule 197 (string_lit -> STRING .)
    LAND            reduce using rule 197 (string_lit -> STRING .)
    EQL             reduce using rule 197 (string_lit -> STRING .)
    NEQ             reduce using rule 197 (string_lit -> STRING .)
    LSS             reduce using rule 197 (string_lit -> STRING .)
    LEQ             reduce using rule 197 (string_lit -> STRING .)
    GTR             reduce using rule 197 (string_lit -> STRING .)
    GEQ             reduce using rule 197 (string_lit -> STRING .)
    ADD             reduce using rule 197 (string_lit -> STRING .)
    SUB             reduce using rule 197 (string_lit -> STRING .)
    OR              reduce using rule 197 (string_lit -> STRING .)
    XOR             reduce using rule 197 (string_lit -> STRING .)
    MUL             reduce using rule 197 (string_lit -> STRING .)
    QUO             reduce using rule 197 (string_lit -> STRING .)
    REM             reduce using rule 197 (string_lit -> STRING .)
    SHL             reduce using rule 197 (string_lit -> STRING .)
    SHR             reduce using rule 197 (string_lit -> STRING .)
    AND             reduce using rule 197 (string_lit -> STRING .)
    AND_NOT         reduce using rule 197 (string_lit -> STRING .)
    RBRACK          reduce using rule 197 (string_lit -> STRING .)
    COMMA           reduce using rule 197 (string_lit -> STRING .)
    SEMICOLON       reduce using rule 197 (string_lit -> STRING .)
    RPAREN          reduce using rule 197 (string_lit -> STRING .)
    ASSIGN          reduce using rule 197 (string_lit -> STRING .)
    ELLIPSIS        reduce using rule 197 (string_lit -> STRING .)
    LBRACE          reduce using rule 197 (string_lit -> STRING .)
    COLON           reduce using rule 197 (string_lit -> STRING .)


state 151

    (70) StructType -> STRUCT LBRACE . FieldDeclList RBRACE
    (71) FieldDeclList -> . empty
    (72) FieldDeclList -> . FieldDeclList FieldDecl SEMICOLON
    (213) empty -> .

    RBRACE          reduce using rule 213 (empty -> .)
    IDENT           reduce using rule 213 (empty -> .)
    MUL             reduce using rule 213 (empty -> .)

    FieldDeclList                  shift and go to state 213
    empty                          shift and go to state 214

state 152

    (82) FunctionType -> FUNC Signature .

    ASSIGN          reduce using rule 82 (FunctionType -> FUNC Signature .)
    SEMICOLON       reduce using rule 82 (FunctionType -> FUNC Signature .)
    LBRACE          reduce using rule 82 (FunctionType -> FUNC Signature .)
    RPAREN          reduce using rule 82 (FunctionType -> FUNC Signature .)
    COMMA           reduce using rule 82 (FunctionType -> FUNC Signature .)
    ELLIPSIS        reduce using rule 82 (FunctionType -> FUNC Signature .)
    STRING          reduce using rule 82 (FunctionType -> FUNC Signature .)


state 153

    (45) IdentifierBotList -> IdentifierBotList COMMA . IDENT

    IDENT           shift and go to state 215


state 154

    (51) TypeSpecTopList -> LPAREN TypeSpecList RPAREN .

    SEMICOLON       reduce using rule 51 (TypeSpecTopList -> LPAREN TypeSpecList RPAREN .)


state 155

    (53) TypeSpecList -> TypeSpecList TypeSpec . SEMICOLON

    SEMICOLON       shift and go to state 216


state 156

    (56) AliasDecl -> IDENT ASSIGN Type .

    SEMICOLON       reduce using rule 56 (AliasDecl -> IDENT ASSIGN Type .)


state 157

    (103) VarSpecTopList -> LPAREN VarSpecList RPAREN .

    SEMICOLON       reduce using rule 103 (VarSpecTopList -> LPAREN VarSpecList RPAREN .)


state 158

    (105) VarSpecList -> VarSpecList VarSpec . SEMICOLON

    SEMICOLON       shift and go to state 217


state 159

    (107) VarSpecTail -> Type VarSpecMid .

    SEMICOLON       reduce using rule 107 (VarSpecTail -> Type VarSpecMid .)


state 160

    (109) VarSpecMid -> empty .

    SEMICOLON       reduce using rule 109 (VarSpecMid -> empty .)


state 161

    (110) VarSpecMid -> ASSIGN . ExpressionList
    (46) ExpressionList -> . Expression ExpressionBotList
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    LPAREN          shift and go to state 138
    IDENT           shift and go to state 141
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    ExpressionList                 shift and go to state 218
    Expression                     shift and go to state 163
    UnaryExpr                      shift and go to state 124
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145
    TypeName                       shift and go to state 147
    QualifiedIdent                 shift and go to state 78

state 162

    (108) VarSpecTail -> ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 108 (VarSpecTail -> ASSIGN ExpressionList .)


state 163

    (46) ExpressionList -> Expression . ExpressionBotList
    (150) Expression -> Expression . binary_op Expression
    (47) ExpressionBotList -> . empty
    (48) ExpressionBotList -> . ExpressionBotList COMMA Expression
    (153) binary_op -> . LOR
    (154) binary_op -> . LAND
    (155) binary_op -> . rel_op
    (156) binary_op -> . add_op
    (157) binary_op -> . mul_op
    (213) empty -> .
    (158) rel_op -> . EQL
    (159) rel_op -> . NEQ
    (160) rel_op -> . LSS
    (161) rel_op -> . LEQ
    (162) rel_op -> . GTR
    (163) rel_op -> . GEQ
    (164) add_op -> . ADD
    (165) add_op -> . SUB
    (166) add_op -> . OR
    (167) add_op -> . XOR
    (168) mul_op -> . MUL
    (169) mul_op -> . QUO
    (170) mul_op -> . REM
    (171) mul_op -> . SHL
    (172) mul_op -> . SHR
    (173) mul_op -> . AND
    (174) mul_op -> . AND_NOT

    LOR             shift and go to state 176
    LAND            shift and go to state 177
    COMMA           reduce using rule 213 (empty -> .)
    SEMICOLON       reduce using rule 213 (empty -> .)
    ELLIPSIS        reduce using rule 213 (empty -> .)
    RPAREN          reduce using rule 213 (empty -> .)
    COLON           reduce using rule 213 (empty -> .)
    EQL             shift and go to state 181
    NEQ             shift and go to state 182
    LSS             shift and go to state 183
    LEQ             shift and go to state 184
    GTR             shift and go to state 185
    GEQ             shift and go to state 186
    ADD             shift and go to state 187
    SUB             shift and go to state 188
    OR              shift and go to state 189
    XOR             shift and go to state 190
    MUL             shift and go to state 191
    QUO             shift and go to state 192
    REM             shift and go to state 193
    SHL             shift and go to state 194
    SHR             shift and go to state 195
    AND             shift and go to state 196
    AND_NOT         shift and go to state 197

    ExpressionBotList              shift and go to state 219
    binary_op                      shift and go to state 175
    empty                          shift and go to state 220
    rel_op                         shift and go to state 178
    add_op                         shift and go to state 179
    mul_op                         shift and go to state 180

state 164

    (14) ImportSpecList -> ImportSpecList ImportSpec SEMICOLON .

    RPAREN          reduce using rule 14 (ImportSpecList -> ImportSpecList ImportSpec SEMICOLON .)
    PERIOD          reduce using rule 14 (ImportSpecList -> ImportSpecList ImportSpec SEMICOLON .)
    IDENT           reduce using rule 14 (ImportSpecList -> ImportSpecList ImportSpec SEMICOLON .)
    STRING          reduce using rule 14 (ImportSpecList -> ImportSpecList ImportSpec SEMICOLON .)


state 165

    (20) Block -> LBRACE StatementList . RBRACE
    (22) StatementList -> StatementList . Statement SEMICOLON
    (23) Statement -> . Declaration
    (24) Statement -> . SimpleStmt
    (25) Statement -> . ReturnStmt
    (26) Statement -> . Block
    (27) Statement -> . IfStmt
    (28) Statement -> . SwitchStmt
    (29) Statement -> . ForStmt
    (30) Declaration -> . ConstDecl
    (31) Declaration -> . TypeDecl
    (32) Declaration -> . VarDecl
    (119) SimpleStmt -> . ExpressionStmt
    (120) SimpleStmt -> . Assignment
    (121) SimpleStmt -> . ShortVarDecl
    (146) ReturnStmt -> . RETURN ExpressionListBot
    (20) Block -> . LBRACE StatementList RBRACE
    (129) IfStmt -> . IF SimpleStmtBot Expression Block elseBot
    (136) SwitchStmt -> . ExprSwitchStmt
    (143) ForStmt -> . FOR ExpressionBot Block
    (33) ConstDecl -> . CONST ConstSpecTopList
    (49) TypeDecl -> . TYPE TypeSpecTopList
    (101) VarDecl -> . VAR VarSpecTopList
    (122) ExpressionStmt -> . Expression
    (124) Assignment -> . ExpressionList assign_op ExpressionList
    (123) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (137) ExprSwitchStmt -> . SWITCH SimpleStmtBot ExpressionBot LBRACE ExprCaseClauseList RBRACE
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (46) ExpressionList -> . Expression ExpressionBotList
    (43) IdentifierList -> . IDENT IdentifierBotList
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

    RBRACE          shift and go to state 221
    RETURN          shift and go to state 233
    LBRACE          shift and go to state 100
    IF              shift and go to state 234
    FOR             shift and go to state 237
    CONST           shift and go to state 20
    TYPE            shift and go to state 21
    VAR             shift and go to state 22
    SWITCH          shift and go to state 240
    IDENT           shift and go to state 241
    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    LPAREN          shift and go to state 138
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    Statement                      shift and go to state 222
    Declaration                    shift and go to state 223
    SimpleStmt                     shift and go to state 224
    ReturnStmt                     shift and go to state 225
    Block                          shift and go to state 226
    IfStmt                         shift and go to state 227
    SwitchStmt                     shift and go to state 228
    ForStmt                        shift and go to state 229
    ConstDecl                      shift and go to state 16
    TypeDecl                       shift and go to state 17
    VarDecl                        shift and go to state 18
    ExpressionStmt                 shift and go to state 230
    Assignment                     shift and go to state 231
    ShortVarDecl                   shift and go to state 232
    Expression                     shift and go to state 235
    ExprSwitchStmt                 shift and go to state 236
    ExpressionList                 shift and go to state 238
    IdentifierList                 shift and go to state 239
    UnaryExpr                      shift and go to state 124
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145
    TypeName                       shift and go to state 147
    QualifiedIdent                 shift and go to state 78

state 166

    (21) StatementList -> empty .

    RBRACE          reduce using rule 21 (StatementList -> empty .)
    RETURN          reduce using rule 21 (StatementList -> empty .)
    LBRACE          reduce using rule 21 (StatementList -> empty .)
    IF              reduce using rule 21 (StatementList -> empty .)
    FOR             reduce using rule 21 (StatementList -> empty .)
    CONST           reduce using rule 21 (StatementList -> empty .)
    TYPE            reduce using rule 21 (StatementList -> empty .)
    VAR             reduce using rule 21 (StatementList -> empty .)
    SWITCH          reduce using rule 21 (StatementList -> empty .)
    IDENT           reduce using rule 21 (StatementList -> empty .)
    +               reduce using rule 21 (StatementList -> empty .)
    -               reduce using rule 21 (StatementList -> empty .)
    !               reduce using rule 21 (StatementList -> empty .)
    ^               reduce using rule 21 (StatementList -> empty .)
    *               reduce using rule 21 (StatementList -> empty .)
    &               reduce using rule 21 (StatementList -> empty .)
    CHAN            reduce using rule 21 (StatementList -> empty .)
    LPAREN          reduce using rule 21 (StatementList -> empty .)
    FUNC            reduce using rule 21 (StatementList -> empty .)
    INT             reduce using rule 21 (StatementList -> empty .)
    FLOAT           reduce using rule 21 (StatementList -> empty .)
    STRING          reduce using rule 21 (StatementList -> empty .)
    CASE            reduce using rule 21 (StatementList -> empty .)
    DEFAULT         reduce using rule 21 (StatementList -> empty .)


state 167

    (61) TypeName -> IDENT .
    (63) QualifiedIdent -> IDENT . PERIOD IDENT
    (43) IdentifierList -> IDENT . IdentifierBotList
    (44) IdentifierBotList -> . empty
    (45) IdentifierBotList -> . IdentifierBotList COMMA IDENT
    (213) empty -> .

    RPAREN          reduce using rule 61 (TypeName -> IDENT .)
    PERIOD          shift and go to state 121
    COMMA           reduce using rule 213 (empty -> .)
    ELLIPSIS        reduce using rule 213 (empty -> .)
    LPAREN          reduce using rule 213 (empty -> .)
    IDENT           reduce using rule 213 (empty -> .)
    LBRACK          reduce using rule 213 (empty -> .)
    STRUCT          reduce using rule 213 (empty -> .)
    FUNC            reduce using rule 213 (empty -> .)

    IdentifierBotList              shift and go to state 85
    empty                          shift and go to state 86

state 168

    (95) ParameterDeclList -> ParameterDeclList COMMA . ParameterDecl
    (96) ParameterDecl -> . ParameterDeclHead tripledotTop Type
    (99) ParameterDeclHead -> . empty
    (100) ParameterDeclHead -> . IdentifierList
    (213) empty -> .
    (43) IdentifierList -> . IDENT IdentifierBotList

  ! shift/reduce conflict for IDENT resolved as shift
    ELLIPSIS        reduce using rule 213 (empty -> .)
    LPAREN          reduce using rule 213 (empty -> .)
    LBRACK          reduce using rule 213 (empty -> .)
    STRUCT          reduce using rule 213 (empty -> .)
    FUNC            reduce using rule 213 (empty -> .)
    IDENT           shift and go to state 41

  ! IDENT           [ reduce using rule 213 (empty -> .) ]

    ParameterDecl                  shift and go to state 242
    ParameterDeclHead              shift and go to state 66
    empty                          shift and go to state 243
    IdentifierList                 shift and go to state 67

state 169

    (96) ParameterDecl -> ParameterDeclHead tripledotTop Type .

    COMMA           reduce using rule 96 (ParameterDecl -> ParameterDeclHead tripledotTop Type .)
    RPAREN          reduce using rule 96 (ParameterDecl -> ParameterDeclHead tripledotTop Type .)


state 170

    (37) ConstSpecList -> ConstSpecList ConstSpec SEMICOLON .

    RPAREN          reduce using rule 37 (ConstSpecList -> ConstSpecList ConstSpec SEMICOLON .)
    IDENT           reduce using rule 37 (ConstSpecList -> ConstSpecList ConstSpec SEMICOLON .)


state 171

    (40) ConstSpecTail -> TypeTop ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 40 (ConstSpecTail -> TypeTop ASSIGN ExpressionList .)


state 172

    (60) Type -> LPAREN Type RPAREN .

    ASSIGN          reduce using rule 60 (Type -> LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 60 (Type -> LPAREN Type RPAREN .)
    LBRACE          reduce using rule 60 (Type -> LPAREN Type RPAREN .)
    RPAREN          reduce using rule 60 (Type -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 60 (Type -> LPAREN Type RPAREN .)
    ELLIPSIS        reduce using rule 60 (Type -> LPAREN Type RPAREN .)
    STRING          reduce using rule 60 (Type -> LPAREN Type RPAREN .)


state 173

    (63) QualifiedIdent -> IDENT PERIOD IDENT .

    ASSIGN          reduce using rule 63 (QualifiedIdent -> IDENT PERIOD IDENT .)
    SEMICOLON       reduce using rule 63 (QualifiedIdent -> IDENT PERIOD IDENT .)
    LBRACE          reduce using rule 63 (QualifiedIdent -> IDENT PERIOD IDENT .)
    RPAREN          reduce using rule 63 (QualifiedIdent -> IDENT PERIOD IDENT .)
    COMMA           reduce using rule 63 (QualifiedIdent -> IDENT PERIOD IDENT .)
    ELLIPSIS        reduce using rule 63 (QualifiedIdent -> IDENT PERIOD IDENT .)
    STRING          reduce using rule 63 (QualifiedIdent -> IDENT PERIOD IDENT .)
    PERIOD          reduce using rule 63 (QualifiedIdent -> IDENT PERIOD IDENT .)


state 174

    (67) ArrayType -> LBRACK ArrayLength RBRACK . ElementType
    (69) ElementType -> . Type
    (58) Type -> . TypeName
    (59) Type -> . TypeLit
    (60) Type -> . LPAREN Type RPAREN
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (64) TypeLit -> . ArrayType
    (65) TypeLit -> . StructType
    (66) TypeLit -> . FunctionType
    (63) QualifiedIdent -> . IDENT PERIOD IDENT
    (67) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (70) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (82) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 76
    IDENT           shift and go to state 77
    LBRACK          shift and go to state 82
    STRUCT          shift and go to state 83
    FUNC            shift and go to state 84

    ElementType                    shift and go to state 244
    Type                           shift and go to state 245
    TypeName                       shift and go to state 74
    TypeLit                        shift and go to state 75
    QualifiedIdent                 shift and go to state 78
    ArrayType                      shift and go to state 79
    StructType                     shift and go to state 80
    FunctionType                   shift and go to state 81

state 175

    (150) Expression -> Expression binary_op . Expression
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    LPAREN          shift and go to state 138
    IDENT           shift and go to state 141
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    Expression                     shift and go to state 246
    UnaryExpr                      shift and go to state 124
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145
    TypeName                       shift and go to state 147
    QualifiedIdent                 shift and go to state 78

state 176

    (153) binary_op -> LOR .

    +               reduce using rule 153 (binary_op -> LOR .)
    -               reduce using rule 153 (binary_op -> LOR .)
    !               reduce using rule 153 (binary_op -> LOR .)
    ^               reduce using rule 153 (binary_op -> LOR .)
    *               reduce using rule 153 (binary_op -> LOR .)
    &               reduce using rule 153 (binary_op -> LOR .)
    CHAN            reduce using rule 153 (binary_op -> LOR .)
    LPAREN          reduce using rule 153 (binary_op -> LOR .)
    IDENT           reduce using rule 153 (binary_op -> LOR .)
    FUNC            reduce using rule 153 (binary_op -> LOR .)
    INT             reduce using rule 153 (binary_op -> LOR .)
    FLOAT           reduce using rule 153 (binary_op -> LOR .)
    STRING          reduce using rule 153 (binary_op -> LOR .)


state 177

    (154) binary_op -> LAND .

    +               reduce using rule 154 (binary_op -> LAND .)
    -               reduce using rule 154 (binary_op -> LAND .)
    !               reduce using rule 154 (binary_op -> LAND .)
    ^               reduce using rule 154 (binary_op -> LAND .)
    *               reduce using rule 154 (binary_op -> LAND .)
    &               reduce using rule 154 (binary_op -> LAND .)
    CHAN            reduce using rule 154 (binary_op -> LAND .)
    LPAREN          reduce using rule 154 (binary_op -> LAND .)
    IDENT           reduce using rule 154 (binary_op -> LAND .)
    FUNC            reduce using rule 154 (binary_op -> LAND .)
    INT             reduce using rule 154 (binary_op -> LAND .)
    FLOAT           reduce using rule 154 (binary_op -> LAND .)
    STRING          reduce using rule 154 (binary_op -> LAND .)


state 178

    (155) binary_op -> rel_op .

    +               reduce using rule 155 (binary_op -> rel_op .)
    -               reduce using rule 155 (binary_op -> rel_op .)
    !               reduce using rule 155 (binary_op -> rel_op .)
    ^               reduce using rule 155 (binary_op -> rel_op .)
    *               reduce using rule 155 (binary_op -> rel_op .)
    &               reduce using rule 155 (binary_op -> rel_op .)
    CHAN            reduce using rule 155 (binary_op -> rel_op .)
    LPAREN          reduce using rule 155 (binary_op -> rel_op .)
    IDENT           reduce using rule 155 (binary_op -> rel_op .)
    FUNC            reduce using rule 155 (binary_op -> rel_op .)
    INT             reduce using rule 155 (binary_op -> rel_op .)
    FLOAT           reduce using rule 155 (binary_op -> rel_op .)
    STRING          reduce using rule 155 (binary_op -> rel_op .)


state 179

    (156) binary_op -> add_op .

    +               reduce using rule 156 (binary_op -> add_op .)
    -               reduce using rule 156 (binary_op -> add_op .)
    !               reduce using rule 156 (binary_op -> add_op .)
    ^               reduce using rule 156 (binary_op -> add_op .)
    *               reduce using rule 156 (binary_op -> add_op .)
    &               reduce using rule 156 (binary_op -> add_op .)
    CHAN            reduce using rule 156 (binary_op -> add_op .)
    LPAREN          reduce using rule 156 (binary_op -> add_op .)
    IDENT           reduce using rule 156 (binary_op -> add_op .)
    FUNC            reduce using rule 156 (binary_op -> add_op .)
    INT             reduce using rule 156 (binary_op -> add_op .)
    FLOAT           reduce using rule 156 (binary_op -> add_op .)
    STRING          reduce using rule 156 (binary_op -> add_op .)


state 180

    (157) binary_op -> mul_op .

    +               reduce using rule 157 (binary_op -> mul_op .)
    -               reduce using rule 157 (binary_op -> mul_op .)
    !               reduce using rule 157 (binary_op -> mul_op .)
    ^               reduce using rule 157 (binary_op -> mul_op .)
    *               reduce using rule 157 (binary_op -> mul_op .)
    &               reduce using rule 157 (binary_op -> mul_op .)
    CHAN            reduce using rule 157 (binary_op -> mul_op .)
    LPAREN          reduce using rule 157 (binary_op -> mul_op .)
    IDENT           reduce using rule 157 (binary_op -> mul_op .)
    FUNC            reduce using rule 157 (binary_op -> mul_op .)
    INT             reduce using rule 157 (binary_op -> mul_op .)
    FLOAT           reduce using rule 157 (binary_op -> mul_op .)
    STRING          reduce using rule 157 (binary_op -> mul_op .)


state 181

    (158) rel_op -> EQL .

    +               reduce using rule 158 (rel_op -> EQL .)
    -               reduce using rule 158 (rel_op -> EQL .)
    !               reduce using rule 158 (rel_op -> EQL .)
    ^               reduce using rule 158 (rel_op -> EQL .)
    *               reduce using rule 158 (rel_op -> EQL .)
    &               reduce using rule 158 (rel_op -> EQL .)
    CHAN            reduce using rule 158 (rel_op -> EQL .)
    LPAREN          reduce using rule 158 (rel_op -> EQL .)
    IDENT           reduce using rule 158 (rel_op -> EQL .)
    FUNC            reduce using rule 158 (rel_op -> EQL .)
    INT             reduce using rule 158 (rel_op -> EQL .)
    FLOAT           reduce using rule 158 (rel_op -> EQL .)
    STRING          reduce using rule 158 (rel_op -> EQL .)


state 182

    (159) rel_op -> NEQ .

    +               reduce using rule 159 (rel_op -> NEQ .)
    -               reduce using rule 159 (rel_op -> NEQ .)
    !               reduce using rule 159 (rel_op -> NEQ .)
    ^               reduce using rule 159 (rel_op -> NEQ .)
    *               reduce using rule 159 (rel_op -> NEQ .)
    &               reduce using rule 159 (rel_op -> NEQ .)
    CHAN            reduce using rule 159 (rel_op -> NEQ .)
    LPAREN          reduce using rule 159 (rel_op -> NEQ .)
    IDENT           reduce using rule 159 (rel_op -> NEQ .)
    FUNC            reduce using rule 159 (rel_op -> NEQ .)
    INT             reduce using rule 159 (rel_op -> NEQ .)
    FLOAT           reduce using rule 159 (rel_op -> NEQ .)
    STRING          reduce using rule 159 (rel_op -> NEQ .)


state 183

    (160) rel_op -> LSS .

    +               reduce using rule 160 (rel_op -> LSS .)
    -               reduce using rule 160 (rel_op -> LSS .)
    !               reduce using rule 160 (rel_op -> LSS .)
    ^               reduce using rule 160 (rel_op -> LSS .)
    *               reduce using rule 160 (rel_op -> LSS .)
    &               reduce using rule 160 (rel_op -> LSS .)
    CHAN            reduce using rule 160 (rel_op -> LSS .)
    LPAREN          reduce using rule 160 (rel_op -> LSS .)
    IDENT           reduce using rule 160 (rel_op -> LSS .)
    FUNC            reduce using rule 160 (rel_op -> LSS .)
    INT             reduce using rule 160 (rel_op -> LSS .)
    FLOAT           reduce using rule 160 (rel_op -> LSS .)
    STRING          reduce using rule 160 (rel_op -> LSS .)


state 184

    (161) rel_op -> LEQ .

    +               reduce using rule 161 (rel_op -> LEQ .)
    -               reduce using rule 161 (rel_op -> LEQ .)
    !               reduce using rule 161 (rel_op -> LEQ .)
    ^               reduce using rule 161 (rel_op -> LEQ .)
    *               reduce using rule 161 (rel_op -> LEQ .)
    &               reduce using rule 161 (rel_op -> LEQ .)
    CHAN            reduce using rule 161 (rel_op -> LEQ .)
    LPAREN          reduce using rule 161 (rel_op -> LEQ .)
    IDENT           reduce using rule 161 (rel_op -> LEQ .)
    FUNC            reduce using rule 161 (rel_op -> LEQ .)
    INT             reduce using rule 161 (rel_op -> LEQ .)
    FLOAT           reduce using rule 161 (rel_op -> LEQ .)
    STRING          reduce using rule 161 (rel_op -> LEQ .)


state 185

    (162) rel_op -> GTR .

    +               reduce using rule 162 (rel_op -> GTR .)
    -               reduce using rule 162 (rel_op -> GTR .)
    !               reduce using rule 162 (rel_op -> GTR .)
    ^               reduce using rule 162 (rel_op -> GTR .)
    *               reduce using rule 162 (rel_op -> GTR .)
    &               reduce using rule 162 (rel_op -> GTR .)
    CHAN            reduce using rule 162 (rel_op -> GTR .)
    LPAREN          reduce using rule 162 (rel_op -> GTR .)
    IDENT           reduce using rule 162 (rel_op -> GTR .)
    FUNC            reduce using rule 162 (rel_op -> GTR .)
    INT             reduce using rule 162 (rel_op -> GTR .)
    FLOAT           reduce using rule 162 (rel_op -> GTR .)
    STRING          reduce using rule 162 (rel_op -> GTR .)


state 186

    (163) rel_op -> GEQ .

    +               reduce using rule 163 (rel_op -> GEQ .)
    -               reduce using rule 163 (rel_op -> GEQ .)
    !               reduce using rule 163 (rel_op -> GEQ .)
    ^               reduce using rule 163 (rel_op -> GEQ .)
    *               reduce using rule 163 (rel_op -> GEQ .)
    &               reduce using rule 163 (rel_op -> GEQ .)
    CHAN            reduce using rule 163 (rel_op -> GEQ .)
    LPAREN          reduce using rule 163 (rel_op -> GEQ .)
    IDENT           reduce using rule 163 (rel_op -> GEQ .)
    FUNC            reduce using rule 163 (rel_op -> GEQ .)
    INT             reduce using rule 163 (rel_op -> GEQ .)
    FLOAT           reduce using rule 163 (rel_op -> GEQ .)
    STRING          reduce using rule 163 (rel_op -> GEQ .)


state 187

    (164) add_op -> ADD .

    +               reduce using rule 164 (add_op -> ADD .)
    -               reduce using rule 164 (add_op -> ADD .)
    !               reduce using rule 164 (add_op -> ADD .)
    ^               reduce using rule 164 (add_op -> ADD .)
    *               reduce using rule 164 (add_op -> ADD .)
    &               reduce using rule 164 (add_op -> ADD .)
    CHAN            reduce using rule 164 (add_op -> ADD .)
    LPAREN          reduce using rule 164 (add_op -> ADD .)
    IDENT           reduce using rule 164 (add_op -> ADD .)
    FUNC            reduce using rule 164 (add_op -> ADD .)
    INT             reduce using rule 164 (add_op -> ADD .)
    FLOAT           reduce using rule 164 (add_op -> ADD .)
    STRING          reduce using rule 164 (add_op -> ADD .)
    ASSIGN          reduce using rule 164 (add_op -> ADD .)


state 188

    (165) add_op -> SUB .

    +               reduce using rule 165 (add_op -> SUB .)
    -               reduce using rule 165 (add_op -> SUB .)
    !               reduce using rule 165 (add_op -> SUB .)
    ^               reduce using rule 165 (add_op -> SUB .)
    *               reduce using rule 165 (add_op -> SUB .)
    &               reduce using rule 165 (add_op -> SUB .)
    CHAN            reduce using rule 165 (add_op -> SUB .)
    LPAREN          reduce using rule 165 (add_op -> SUB .)
    IDENT           reduce using rule 165 (add_op -> SUB .)
    FUNC            reduce using rule 165 (add_op -> SUB .)
    INT             reduce using rule 165 (add_op -> SUB .)
    FLOAT           reduce using rule 165 (add_op -> SUB .)
    STRING          reduce using rule 165 (add_op -> SUB .)
    ASSIGN          reduce using rule 165 (add_op -> SUB .)


state 189

    (166) add_op -> OR .

    +               reduce using rule 166 (add_op -> OR .)
    -               reduce using rule 166 (add_op -> OR .)
    !               reduce using rule 166 (add_op -> OR .)
    ^               reduce using rule 166 (add_op -> OR .)
    *               reduce using rule 166 (add_op -> OR .)
    &               reduce using rule 166 (add_op -> OR .)
    CHAN            reduce using rule 166 (add_op -> OR .)
    LPAREN          reduce using rule 166 (add_op -> OR .)
    IDENT           reduce using rule 166 (add_op -> OR .)
    FUNC            reduce using rule 166 (add_op -> OR .)
    INT             reduce using rule 166 (add_op -> OR .)
    FLOAT           reduce using rule 166 (add_op -> OR .)
    STRING          reduce using rule 166 (add_op -> OR .)
    ASSIGN          reduce using rule 166 (add_op -> OR .)


state 190

    (167) add_op -> XOR .

    +               reduce using rule 167 (add_op -> XOR .)
    -               reduce using rule 167 (add_op -> XOR .)
    !               reduce using rule 167 (add_op -> XOR .)
    ^               reduce using rule 167 (add_op -> XOR .)
    *               reduce using rule 167 (add_op -> XOR .)
    &               reduce using rule 167 (add_op -> XOR .)
    CHAN            reduce using rule 167 (add_op -> XOR .)
    LPAREN          reduce using rule 167 (add_op -> XOR .)
    IDENT           reduce using rule 167 (add_op -> XOR .)
    FUNC            reduce using rule 167 (add_op -> XOR .)
    INT             reduce using rule 167 (add_op -> XOR .)
    FLOAT           reduce using rule 167 (add_op -> XOR .)
    STRING          reduce using rule 167 (add_op -> XOR .)
    ASSIGN          reduce using rule 167 (add_op -> XOR .)


state 191

    (168) mul_op -> MUL .

    +               reduce using rule 168 (mul_op -> MUL .)
    -               reduce using rule 168 (mul_op -> MUL .)
    !               reduce using rule 168 (mul_op -> MUL .)
    ^               reduce using rule 168 (mul_op -> MUL .)
    *               reduce using rule 168 (mul_op -> MUL .)
    &               reduce using rule 168 (mul_op -> MUL .)
    CHAN            reduce using rule 168 (mul_op -> MUL .)
    LPAREN          reduce using rule 168 (mul_op -> MUL .)
    IDENT           reduce using rule 168 (mul_op -> MUL .)
    FUNC            reduce using rule 168 (mul_op -> MUL .)
    INT             reduce using rule 168 (mul_op -> MUL .)
    FLOAT           reduce using rule 168 (mul_op -> MUL .)
    STRING          reduce using rule 168 (mul_op -> MUL .)
    ASSIGN          reduce using rule 168 (mul_op -> MUL .)


state 192

    (169) mul_op -> QUO .

    +               reduce using rule 169 (mul_op -> QUO .)
    -               reduce using rule 169 (mul_op -> QUO .)
    !               reduce using rule 169 (mul_op -> QUO .)
    ^               reduce using rule 169 (mul_op -> QUO .)
    *               reduce using rule 169 (mul_op -> QUO .)
    &               reduce using rule 169 (mul_op -> QUO .)
    CHAN            reduce using rule 169 (mul_op -> QUO .)
    LPAREN          reduce using rule 169 (mul_op -> QUO .)
    IDENT           reduce using rule 169 (mul_op -> QUO .)
    FUNC            reduce using rule 169 (mul_op -> QUO .)
    INT             reduce using rule 169 (mul_op -> QUO .)
    FLOAT           reduce using rule 169 (mul_op -> QUO .)
    STRING          reduce using rule 169 (mul_op -> QUO .)
    ASSIGN          reduce using rule 169 (mul_op -> QUO .)


state 193

    (170) mul_op -> REM .

    +               reduce using rule 170 (mul_op -> REM .)
    -               reduce using rule 170 (mul_op -> REM .)
    !               reduce using rule 170 (mul_op -> REM .)
    ^               reduce using rule 170 (mul_op -> REM .)
    *               reduce using rule 170 (mul_op -> REM .)
    &               reduce using rule 170 (mul_op -> REM .)
    CHAN            reduce using rule 170 (mul_op -> REM .)
    LPAREN          reduce using rule 170 (mul_op -> REM .)
    IDENT           reduce using rule 170 (mul_op -> REM .)
    FUNC            reduce using rule 170 (mul_op -> REM .)
    INT             reduce using rule 170 (mul_op -> REM .)
    FLOAT           reduce using rule 170 (mul_op -> REM .)
    STRING          reduce using rule 170 (mul_op -> REM .)
    ASSIGN          reduce using rule 170 (mul_op -> REM .)


state 194

    (171) mul_op -> SHL .

    +               reduce using rule 171 (mul_op -> SHL .)
    -               reduce using rule 171 (mul_op -> SHL .)
    !               reduce using rule 171 (mul_op -> SHL .)
    ^               reduce using rule 171 (mul_op -> SHL .)
    *               reduce using rule 171 (mul_op -> SHL .)
    &               reduce using rule 171 (mul_op -> SHL .)
    CHAN            reduce using rule 171 (mul_op -> SHL .)
    LPAREN          reduce using rule 171 (mul_op -> SHL .)
    IDENT           reduce using rule 171 (mul_op -> SHL .)
    FUNC            reduce using rule 171 (mul_op -> SHL .)
    INT             reduce using rule 171 (mul_op -> SHL .)
    FLOAT           reduce using rule 171 (mul_op -> SHL .)
    STRING          reduce using rule 171 (mul_op -> SHL .)
    ASSIGN          reduce using rule 171 (mul_op -> SHL .)


state 195

    (172) mul_op -> SHR .

    +               reduce using rule 172 (mul_op -> SHR .)
    -               reduce using rule 172 (mul_op -> SHR .)
    !               reduce using rule 172 (mul_op -> SHR .)
    ^               reduce using rule 172 (mul_op -> SHR .)
    *               reduce using rule 172 (mul_op -> SHR .)
    &               reduce using rule 172 (mul_op -> SHR .)
    CHAN            reduce using rule 172 (mul_op -> SHR .)
    LPAREN          reduce using rule 172 (mul_op -> SHR .)
    IDENT           reduce using rule 172 (mul_op -> SHR .)
    FUNC            reduce using rule 172 (mul_op -> SHR .)
    INT             reduce using rule 172 (mul_op -> SHR .)
    FLOAT           reduce using rule 172 (mul_op -> SHR .)
    STRING          reduce using rule 172 (mul_op -> SHR .)
    ASSIGN          reduce using rule 172 (mul_op -> SHR .)


state 196

    (173) mul_op -> AND .

    +               reduce using rule 173 (mul_op -> AND .)
    -               reduce using rule 173 (mul_op -> AND .)
    !               reduce using rule 173 (mul_op -> AND .)
    ^               reduce using rule 173 (mul_op -> AND .)
    *               reduce using rule 173 (mul_op -> AND .)
    &               reduce using rule 173 (mul_op -> AND .)
    CHAN            reduce using rule 173 (mul_op -> AND .)
    LPAREN          reduce using rule 173 (mul_op -> AND .)
    IDENT           reduce using rule 173 (mul_op -> AND .)
    FUNC            reduce using rule 173 (mul_op -> AND .)
    INT             reduce using rule 173 (mul_op -> AND .)
    FLOAT           reduce using rule 173 (mul_op -> AND .)
    STRING          reduce using rule 173 (mul_op -> AND .)
    ASSIGN          reduce using rule 173 (mul_op -> AND .)


state 197

    (174) mul_op -> AND_NOT .

    +               reduce using rule 174 (mul_op -> AND_NOT .)
    -               reduce using rule 174 (mul_op -> AND_NOT .)
    !               reduce using rule 174 (mul_op -> AND_NOT .)
    ^               reduce using rule 174 (mul_op -> AND_NOT .)
    *               reduce using rule 174 (mul_op -> AND_NOT .)
    &               reduce using rule 174 (mul_op -> AND_NOT .)
    CHAN            reduce using rule 174 (mul_op -> AND_NOT .)
    LPAREN          reduce using rule 174 (mul_op -> AND_NOT .)
    IDENT           reduce using rule 174 (mul_op -> AND_NOT .)
    FUNC            reduce using rule 174 (mul_op -> AND_NOT .)
    INT             reduce using rule 174 (mul_op -> AND_NOT .)
    FLOAT           reduce using rule 174 (mul_op -> AND_NOT .)
    STRING          reduce using rule 174 (mul_op -> AND_NOT .)
    ASSIGN          reduce using rule 174 (mul_op -> AND_NOT .)


state 198

    (183) PrimaryExpr -> PrimaryExpr Selector .

    PERIOD          reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACK          reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    LPAREN          reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    LOR             reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    LAND            reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    EQL             reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    NEQ             reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    LSS             reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    LEQ             reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    GTR             reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    GEQ             reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    ADD             reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    SUB             reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    OR              reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR             reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    MUL             reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    QUO             reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    REM             reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    SHL             reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    SHR             reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    AND             reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    AND_NOT         reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    RBRACK          reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    COMMA           reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    SEMICOLON       reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    RPAREN          reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    ASSIGN          reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    ELLIPSIS        reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACE          reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)
    COLON           reduce using rule 183 (PrimaryExpr -> PrimaryExpr Selector .)


state 199

    (184) PrimaryExpr -> PrimaryExpr Index .

    PERIOD          reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACK          reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    LPAREN          reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    LOR             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    LAND            reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    EQL             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    NEQ             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    LSS             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    LEQ             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    GTR             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    GEQ             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    ADD             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    SUB             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    XOR             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    MUL             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    QUO             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    REM             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    SHL             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    SHR             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    AND             reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    AND_NOT         reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    RBRACK          reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOLON       reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    RPAREN          reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    ASSIGN          reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    ELLIPSIS        reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACE          reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 184 (PrimaryExpr -> PrimaryExpr Index .)


state 200

    (185) PrimaryExpr -> PrimaryExpr Arguments .

    PERIOD          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACK          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    LPAREN          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    LOR             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    LAND            reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQL             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    NEQ             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    LSS             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEQ             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    GTR             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    GEQ             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    QUO             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    REM             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHL             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHR             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_NOT         reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACK          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOLON       reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    RPAREN          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    ASSIGN          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    ELLIPSIS        reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACE          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 185 (PrimaryExpr -> PrimaryExpr Arguments .)


state 201

    (205) Selector -> PERIOD . IDENT

    IDENT           shift and go to state 247


state 202

    (206) Index -> LBRACK . Expression RBRACK
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    LPAREN          shift and go to state 138
    IDENT           shift and go to state 141
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    Expression                     shift and go to state 248
    UnaryExpr                      shift and go to state 124
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145
    TypeName                       shift and go to state 147
    QualifiedIdent                 shift and go to state 78

state 203

    (207) Arguments -> LPAREN . ArgumentsHead RPAREN
    (208) ArgumentsHead -> . empty
    (209) ArgumentsHead -> . ArgumentsHeadMid tripledotTop commaTop
    (213) empty -> .
    (210) ArgumentsHeadMid -> . ExpressionList
    (211) ArgumentsHeadMid -> . Type COMMA ExpressionList
    (212) ArgumentsHeadMid -> . Type
    (46) ExpressionList -> . Expression ExpressionBotList
    (58) Type -> . TypeName
    (59) Type -> . TypeLit
    (60) Type -> . LPAREN Type RPAREN
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (64) TypeLit -> . ArrayType
    (65) TypeLit -> . StructType
    (66) TypeLit -> . FunctionType
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (63) QualifiedIdent -> . IDENT PERIOD IDENT
    (67) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (70) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (82) FunctionType -> . FUNC Signature
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING

    RPAREN          reduce using rule 213 (empty -> .)
    LPAREN          shift and go to state 249
    IDENT           shift and go to state 209
    LBRACK          shift and go to state 82
    STRUCT          shift and go to state 83
    FUNC            shift and go to state 256
    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    ArgumentsHead                  shift and go to state 250
    empty                          shift and go to state 251
    ArgumentsHeadMid               shift and go to state 252
    ExpressionList                 shift and go to state 253
    Type                           shift and go to state 254
    Expression                     shift and go to state 163
    TypeName                       shift and go to state 255
    TypeLit                        shift and go to state 75
    UnaryExpr                      shift and go to state 124
    QualifiedIdent                 shift and go to state 78
    ArrayType                      shift and go to state 79
    StructType                     shift and go to state 80
    FunctionType                   shift and go to state 81
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145

state 204

    (152) UnaryExpr -> unary_op UnaryExpr .

    LOR             reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    LAND            reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    EQL             reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    NEQ             reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    LSS             reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    LEQ             reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    GTR             reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    GEQ             reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    ADD             reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    SUB             reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    OR              reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    XOR             reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    MUL             reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    QUO             reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    REM             reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    SHL             reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    SHR             reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    AND             reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    AND_NOT         reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    RBRACK          reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    COMMA           reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    SEMICOLON       reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    RPAREN          reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    ASSIGN          reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    ELLIPSIS        reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    LBRACE          reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)
    COLON           reduce using rule 152 (UnaryExpr -> unary_op UnaryExpr .)


state 205

    (203) ReceiverType -> LPAREN . MUL TypeName RPAREN
    (204) ReceiverType -> LPAREN . ReceiverType RPAREN
    (189) Operand -> LPAREN . Expression RPAREN
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (63) QualifiedIdent -> . IDENT PERIOD IDENT
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING

    MUL             shift and go to state 207
    LPAREN          shift and go to state 205
    IDENT           shift and go to state 209
    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    TypeName                       shift and go to state 147
    ReceiverType                   shift and go to state 208
    Expression                     shift and go to state 206
    UnaryExpr                      shift and go to state 124
    QualifiedIdent                 shift and go to state 78
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145

state 206

    (189) Operand -> LPAREN Expression . RPAREN
    (150) Expression -> Expression . binary_op Expression
    (153) binary_op -> . LOR
    (154) binary_op -> . LAND
    (155) binary_op -> . rel_op
    (156) binary_op -> . add_op
    (157) binary_op -> . mul_op
    (158) rel_op -> . EQL
    (159) rel_op -> . NEQ
    (160) rel_op -> . LSS
    (161) rel_op -> . LEQ
    (162) rel_op -> . GTR
    (163) rel_op -> . GEQ
    (164) add_op -> . ADD
    (165) add_op -> . SUB
    (166) add_op -> . OR
    (167) add_op -> . XOR
    (168) mul_op -> . MUL
    (169) mul_op -> . QUO
    (170) mul_op -> . REM
    (171) mul_op -> . SHL
    (172) mul_op -> . SHR
    (173) mul_op -> . AND
    (174) mul_op -> . AND_NOT

    RPAREN          shift and go to state 257
    LOR             shift and go to state 176
    LAND            shift and go to state 177
    EQL             shift and go to state 181
    NEQ             shift and go to state 182
    LSS             shift and go to state 183
    LEQ             shift and go to state 184
    GTR             shift and go to state 185
    GEQ             shift and go to state 186
    ADD             shift and go to state 187
    SUB             shift and go to state 188
    OR              shift and go to state 189
    XOR             shift and go to state 190
    MUL             shift and go to state 191
    QUO             shift and go to state 192
    REM             shift and go to state 193
    SHL             shift and go to state 194
    SHR             shift and go to state 195
    AND             shift and go to state 196
    AND_NOT         shift and go to state 197

    binary_op                      shift and go to state 175
    rel_op                         shift and go to state 178
    add_op                         shift and go to state 179
    mul_op                         shift and go to state 180

state 207

    (203) ReceiverType -> LPAREN MUL . TypeName RPAREN
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

    IDENT           shift and go to state 77

    TypeName                       shift and go to state 258
    QualifiedIdent                 shift and go to state 78

state 208

    (204) ReceiverType -> LPAREN ReceiverType . RPAREN
    (200) MethodExpr -> ReceiverType . PERIOD MethodName

    RPAREN          shift and go to state 259
    PERIOD          shift and go to state 210


state 209

    (61) TypeName -> IDENT .
    (63) QualifiedIdent -> IDENT . PERIOD IDENT
    (198) OperandName -> IDENT .

  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 61 (TypeName -> IDENT .)
  ! reduce/reduce conflict for COMMA resolved using rule 61 (TypeName -> IDENT .)
  ! reduce/reduce conflict for ELLIPSIS resolved using rule 61 (TypeName -> IDENT .)
    RPAREN          reduce using rule 61 (TypeName -> IDENT .)
    COMMA           reduce using rule 61 (TypeName -> IDENT .)
    ELLIPSIS        reduce using rule 61 (TypeName -> IDENT .)
    PERIOD          shift and go to state 121
    LBRACK          reduce using rule 198 (OperandName -> IDENT .)
    LPAREN          reduce using rule 198 (OperandName -> IDENT .)
    LOR             reduce using rule 198 (OperandName -> IDENT .)
    LAND            reduce using rule 198 (OperandName -> IDENT .)
    EQL             reduce using rule 198 (OperandName -> IDENT .)
    NEQ             reduce using rule 198 (OperandName -> IDENT .)
    LSS             reduce using rule 198 (OperandName -> IDENT .)
    LEQ             reduce using rule 198 (OperandName -> IDENT .)
    GTR             reduce using rule 198 (OperandName -> IDENT .)
    GEQ             reduce using rule 198 (OperandName -> IDENT .)
    ADD             reduce using rule 198 (OperandName -> IDENT .)
    SUB             reduce using rule 198 (OperandName -> IDENT .)
    OR              reduce using rule 198 (OperandName -> IDENT .)
    XOR             reduce using rule 198 (OperandName -> IDENT .)
    MUL             reduce using rule 198 (OperandName -> IDENT .)
    QUO             reduce using rule 198 (OperandName -> IDENT .)
    REM             reduce using rule 198 (OperandName -> IDENT .)
    SHL             reduce using rule 198 (OperandName -> IDENT .)
    SHR             reduce using rule 198 (OperandName -> IDENT .)
    AND             reduce using rule 198 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 198 (OperandName -> IDENT .)

  ! PERIOD          [ reduce using rule 61 (TypeName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 198 (OperandName -> IDENT .) ]
  ! RPAREN          [ reduce using rule 198 (OperandName -> IDENT .) ]
  ! COMMA           [ reduce using rule 198 (OperandName -> IDENT .) ]
  ! ELLIPSIS        [ reduce using rule 198 (OperandName -> IDENT .) ]


state 210

    (200) MethodExpr -> ReceiverType PERIOD . MethodName
    (201) MethodName -> . IDENT

    IDENT           shift and go to state 61

    MethodName                     shift and go to state 260

state 211

    (199) FunctionLit -> FUNC Function .

    PERIOD          reduce using rule 199 (FunctionLit -> FUNC Function .)
    LBRACK          reduce using rule 199 (FunctionLit -> FUNC Function .)
    LPAREN          reduce using rule 199 (FunctionLit -> FUNC Function .)
    LOR             reduce using rule 199 (FunctionLit -> FUNC Function .)
    LAND            reduce using rule 199 (FunctionLit -> FUNC Function .)
    EQL             reduce using rule 199 (FunctionLit -> FUNC Function .)
    NEQ             reduce using rule 199 (FunctionLit -> FUNC Function .)
    LSS             reduce using rule 199 (FunctionLit -> FUNC Function .)
    LEQ             reduce using rule 199 (FunctionLit -> FUNC Function .)
    GTR             reduce using rule 199 (FunctionLit -> FUNC Function .)
    GEQ             reduce using rule 199 (FunctionLit -> FUNC Function .)
    ADD             reduce using rule 199 (FunctionLit -> FUNC Function .)
    SUB             reduce using rule 199 (FunctionLit -> FUNC Function .)
    OR              reduce using rule 199 (FunctionLit -> FUNC Function .)
    XOR             reduce using rule 199 (FunctionLit -> FUNC Function .)
    MUL             reduce using rule 199 (FunctionLit -> FUNC Function .)
    QUO             reduce using rule 199 (FunctionLit -> FUNC Function .)
    REM             reduce using rule 199 (FunctionLit -> FUNC Function .)
    SHL             reduce using rule 199 (FunctionLit -> FUNC Function .)
    SHR             reduce using rule 199 (FunctionLit -> FUNC Function .)
    AND             reduce using rule 199 (FunctionLit -> FUNC Function .)
    AND_NOT         reduce using rule 199 (FunctionLit -> FUNC Function .)
    RBRACK          reduce using rule 199 (FunctionLit -> FUNC Function .)
    COMMA           reduce using rule 199 (FunctionLit -> FUNC Function .)
    SEMICOLON       reduce using rule 199 (FunctionLit -> FUNC Function .)
    RPAREN          reduce using rule 199 (FunctionLit -> FUNC Function .)
    ASSIGN          reduce using rule 199 (FunctionLit -> FUNC Function .)
    ELLIPSIS        reduce using rule 199 (FunctionLit -> FUNC Function .)
    LBRACE          reduce using rule 199 (FunctionLit -> FUNC Function .)
    COLON           reduce using rule 199 (FunctionLit -> FUNC Function .)


state 212

    (115) Function -> Signature . FunctionBody
    (116) FunctionBody -> . Block
    (20) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 100

    FunctionBody                   shift and go to state 98
    Block                          shift and go to state 99

state 213

    (70) StructType -> STRUCT LBRACE FieldDeclList . RBRACE
    (72) FieldDeclList -> FieldDeclList . FieldDecl SEMICOLON
    (73) FieldDecl -> . FieldDeclHead TagTop
    (76) FieldDeclHead -> . IdentifierList Type
    (77) FieldDeclHead -> . EmbeddedField
    (43) IdentifierList -> . IDENT IdentifierBotList
    (78) EmbeddedField -> . starTop TypeName
    (79) starTop -> . empty
    (80) starTop -> . MUL
    (213) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    RBRACE          shift and go to state 261
    IDENT           shift and go to state 41
    MUL             shift and go to state 268

  ! IDENT           [ reduce using rule 213 (empty -> .) ]

    FieldDecl                      shift and go to state 262
    FieldDeclHead                  shift and go to state 263
    IdentifierList                 shift and go to state 264
    EmbeddedField                  shift and go to state 265
    starTop                        shift and go to state 266
    empty                          shift and go to state 267

state 214

    (71) FieldDeclList -> empty .

    RBRACE          reduce using rule 71 (FieldDeclList -> empty .)
    IDENT           reduce using rule 71 (FieldDeclList -> empty .)
    MUL             reduce using rule 71 (FieldDeclList -> empty .)


state 215

    (45) IdentifierBotList -> IdentifierBotList COMMA IDENT .

    COMMA           reduce using rule 45 (IdentifierBotList -> IdentifierBotList COMMA IDENT .)
    LPAREN          reduce using rule 45 (IdentifierBotList -> IdentifierBotList COMMA IDENT .)
    IDENT           reduce using rule 45 (IdentifierBotList -> IdentifierBotList COMMA IDENT .)
    LBRACK          reduce using rule 45 (IdentifierBotList -> IdentifierBotList COMMA IDENT .)
    STRUCT          reduce using rule 45 (IdentifierBotList -> IdentifierBotList COMMA IDENT .)
    FUNC            reduce using rule 45 (IdentifierBotList -> IdentifierBotList COMMA IDENT .)
    ASSIGN          reduce using rule 45 (IdentifierBotList -> IdentifierBotList COMMA IDENT .)
    SEMICOLON       reduce using rule 45 (IdentifierBotList -> IdentifierBotList COMMA IDENT .)
    ELLIPSIS        reduce using rule 45 (IdentifierBotList -> IdentifierBotList COMMA IDENT .)
    DEFINE          reduce using rule 45 (IdentifierBotList -> IdentifierBotList COMMA IDENT .)


state 216

    (53) TypeSpecList -> TypeSpecList TypeSpec SEMICOLON .

    RPAREN          reduce using rule 53 (TypeSpecList -> TypeSpecList TypeSpec SEMICOLON .)
    IDENT           reduce using rule 53 (TypeSpecList -> TypeSpecList TypeSpec SEMICOLON .)


state 217

    (105) VarSpecList -> VarSpecList VarSpec SEMICOLON .

    RPAREN          reduce using rule 105 (VarSpecList -> VarSpecList VarSpec SEMICOLON .)
    IDENT           reduce using rule 105 (VarSpecList -> VarSpecList VarSpec SEMICOLON .)


state 218

    (110) VarSpecMid -> ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 110 (VarSpecMid -> ASSIGN ExpressionList .)


state 219

    (46) ExpressionList -> Expression ExpressionBotList .
    (48) ExpressionBotList -> ExpressionBotList . COMMA Expression

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 46 (ExpressionList -> Expression ExpressionBotList .)
    ADD             reduce using rule 46 (ExpressionList -> Expression ExpressionBotList .)
    SUB             reduce using rule 46 (ExpressionList -> Expression ExpressionBotList .)
    OR              reduce using rule 46 (ExpressionList -> Expression ExpressionBotList .)
    XOR             reduce using rule 46 (ExpressionList -> Expression ExpressionBotList .)
    MUL             reduce using rule 46 (ExpressionList -> Expression ExpressionBotList .)
    QUO             reduce using rule 46 (ExpressionList -> Expression ExpressionBotList .)
    REM             reduce using rule 46 (ExpressionList -> Expression ExpressionBotList .)
    SHL             reduce using rule 46 (ExpressionList -> Expression ExpressionBotList .)
    SHR             reduce using rule 46 (ExpressionList -> Expression ExpressionBotList .)
    AND             reduce using rule 46 (ExpressionList -> Expression ExpressionBotList .)
    AND_NOT         reduce using rule 46 (ExpressionList -> Expression ExpressionBotList .)
    ASSIGN          reduce using rule 46 (ExpressionList -> Expression ExpressionBotList .)
    ELLIPSIS        reduce using rule 46 (ExpressionList -> Expression ExpressionBotList .)
    RPAREN          reduce using rule 46 (ExpressionList -> Expression ExpressionBotList .)
    COLON           reduce using rule 46 (ExpressionList -> Expression ExpressionBotList .)
    COMMA           shift and go to state 269

  ! COMMA           [ reduce using rule 46 (ExpressionList -> Expression ExpressionBotList .) ]


state 220

    (47) ExpressionBotList -> empty .

    COMMA           reduce using rule 47 (ExpressionBotList -> empty .)
    SEMICOLON       reduce using rule 47 (ExpressionBotList -> empty .)
    ELLIPSIS        reduce using rule 47 (ExpressionBotList -> empty .)
    RPAREN          reduce using rule 47 (ExpressionBotList -> empty .)
    COLON           reduce using rule 47 (ExpressionBotList -> empty .)
    ADD             reduce using rule 47 (ExpressionBotList -> empty .)
    SUB             reduce using rule 47 (ExpressionBotList -> empty .)
    OR              reduce using rule 47 (ExpressionBotList -> empty .)
    XOR             reduce using rule 47 (ExpressionBotList -> empty .)
    MUL             reduce using rule 47 (ExpressionBotList -> empty .)
    QUO             reduce using rule 47 (ExpressionBotList -> empty .)
    REM             reduce using rule 47 (ExpressionBotList -> empty .)
    SHL             reduce using rule 47 (ExpressionBotList -> empty .)
    SHR             reduce using rule 47 (ExpressionBotList -> empty .)
    AND             reduce using rule 47 (ExpressionBotList -> empty .)
    AND_NOT         reduce using rule 47 (ExpressionBotList -> empty .)
    ASSIGN          reduce using rule 47 (ExpressionBotList -> empty .)


state 221

    (20) Block -> LBRACE StatementList RBRACE .

    SEMICOLON       reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    PERIOD          reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    LBRACK          reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    LPAREN          reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    LOR             reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    LAND            reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    EQL             reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    NEQ             reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    LSS             reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    LEQ             reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    GTR             reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    GEQ             reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    ADD             reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    SUB             reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    OR              reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    XOR             reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    MUL             reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    QUO             reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    REM             reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    SHL             reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    SHR             reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    AND             reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    AND_NOT         reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    RBRACK          reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    COMMA           reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    RPAREN          reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    ASSIGN          reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    ELLIPSIS        reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    LBRACE          reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    COLON           reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)
    ELSE            reduce using rule 20 (Block -> LBRACE StatementList RBRACE .)


state 222

    (22) StatementList -> StatementList Statement . SEMICOLON

    SEMICOLON       shift and go to state 270


state 223

    (23) Statement -> Declaration .

    SEMICOLON       reduce using rule 23 (Statement -> Declaration .)


state 224

    (24) Statement -> SimpleStmt .

    SEMICOLON       reduce using rule 24 (Statement -> SimpleStmt .)


state 225

    (25) Statement -> ReturnStmt .

    SEMICOLON       reduce using rule 25 (Statement -> ReturnStmt .)


state 226

    (26) Statement -> Block .

    SEMICOLON       reduce using rule 26 (Statement -> Block .)


state 227

    (27) Statement -> IfStmt .

    SEMICOLON       reduce using rule 27 (Statement -> IfStmt .)


state 228

    (28) Statement -> SwitchStmt .

    SEMICOLON       reduce using rule 28 (Statement -> SwitchStmt .)


state 229

    (29) Statement -> ForStmt .

    SEMICOLON       reduce using rule 29 (Statement -> ForStmt .)


state 230

    (119) SimpleStmt -> ExpressionStmt .

    SEMICOLON       reduce using rule 119 (SimpleStmt -> ExpressionStmt .)


state 231

    (120) SimpleStmt -> Assignment .

    SEMICOLON       reduce using rule 120 (SimpleStmt -> Assignment .)


state 232

    (121) SimpleStmt -> ShortVarDecl .

    SEMICOLON       reduce using rule 121 (SimpleStmt -> ShortVarDecl .)


state 233

    (146) ReturnStmt -> RETURN . ExpressionListBot
    (147) ExpressionListBot -> . empty
    (148) ExpressionListBot -> . ExpressionList
    (213) empty -> .
    (46) ExpressionList -> . Expression ExpressionBotList
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

    SEMICOLON       reduce using rule 213 (empty -> .)
    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    LPAREN          shift and go to state 138
    IDENT           shift and go to state 141
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    ExpressionListBot              shift and go to state 271
    empty                          shift and go to state 272
    ExpressionList                 shift and go to state 273
    Expression                     shift and go to state 163
    UnaryExpr                      shift and go to state 124
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145
    TypeName                       shift and go to state 147
    QualifiedIdent                 shift and go to state 78

state 234

    (129) IfStmt -> IF . SimpleStmtBot Expression Block elseBot
    (130) SimpleStmtBot -> . empty
    (131) SimpleStmtBot -> . SimpleStmt SEMICOLON
    (213) empty -> .
    (119) SimpleStmt -> . ExpressionStmt
    (120) SimpleStmt -> . Assignment
    (121) SimpleStmt -> . ShortVarDecl
    (122) ExpressionStmt -> . Expression
    (124) Assignment -> . ExpressionList assign_op ExpressionList
    (123) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (46) ExpressionList -> . Expression ExpressionBotList
    (43) IdentifierList -> . IDENT IdentifierBotList
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ! resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    IDENT           shift and go to state 241
    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    LPAREN          shift and go to state 138
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

  ! +               [ reduce using rule 213 (empty -> .) ]
  ! -               [ reduce using rule 213 (empty -> .) ]
  ! !               [ reduce using rule 213 (empty -> .) ]
  ! ^               [ reduce using rule 213 (empty -> .) ]
  ! *               [ reduce using rule 213 (empty -> .) ]
  ! &               [ reduce using rule 213 (empty -> .) ]
  ! CHAN            [ reduce using rule 213 (empty -> .) ]
  ! LPAREN          [ reduce using rule 213 (empty -> .) ]
  ! IDENT           [ reduce using rule 213 (empty -> .) ]
  ! FUNC            [ reduce using rule 213 (empty -> .) ]
  ! INT             [ reduce using rule 213 (empty -> .) ]
  ! FLOAT           [ reduce using rule 213 (empty -> .) ]
  ! STRING          [ reduce using rule 213 (empty -> .) ]

    SimpleStmtBot                  shift and go to state 274
    Expression                     shift and go to state 235
    empty                          shift and go to state 275
    SimpleStmt                     shift and go to state 276
    ExpressionStmt                 shift and go to state 230
    Assignment                     shift and go to state 231
    ShortVarDecl                   shift and go to state 232
    ExpressionList                 shift and go to state 238
    IdentifierList                 shift and go to state 239
    UnaryExpr                      shift and go to state 124
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145
    TypeName                       shift and go to state 147
    QualifiedIdent                 shift and go to state 78

state 235

    (122) ExpressionStmt -> Expression .
    (150) Expression -> Expression . binary_op Expression
    (46) ExpressionList -> Expression . ExpressionBotList
    (153) binary_op -> . LOR
    (154) binary_op -> . LAND
    (155) binary_op -> . rel_op
    (156) binary_op -> . add_op
    (157) binary_op -> . mul_op
    (47) ExpressionBotList -> . empty
    (48) ExpressionBotList -> . ExpressionBotList COMMA Expression
    (158) rel_op -> . EQL
    (159) rel_op -> . NEQ
    (160) rel_op -> . LSS
    (161) rel_op -> . LEQ
    (162) rel_op -> . GTR
    (163) rel_op -> . GEQ
    (164) add_op -> . ADD
    (165) add_op -> . SUB
    (166) add_op -> . OR
    (167) add_op -> . XOR
    (168) mul_op -> . MUL
    (169) mul_op -> . QUO
    (170) mul_op -> . REM
    (171) mul_op -> . SHL
    (172) mul_op -> . SHR
    (173) mul_op -> . AND
    (174) mul_op -> . AND_NOT
    (213) empty -> .

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for QUO resolved as shift
  ! shift/reduce conflict for REM resolved as shift
  ! shift/reduce conflict for SHL resolved as shift
  ! shift/reduce conflict for SHR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for AND_NOT resolved as shift
    SEMICOLON       reduce using rule 122 (ExpressionStmt -> Expression .)
    LOR             shift and go to state 176
    LAND            shift and go to state 177
    EQL             shift and go to state 181
    NEQ             shift and go to state 182
    LSS             shift and go to state 183
    LEQ             shift and go to state 184
    GTR             shift and go to state 185
    GEQ             shift and go to state 186
    ADD             shift and go to state 187
    SUB             shift and go to state 188
    OR              shift and go to state 189
    XOR             shift and go to state 190
    MUL             shift and go to state 191
    QUO             shift and go to state 192
    REM             shift and go to state 193
    SHL             shift and go to state 194
    SHR             shift and go to state 195
    AND             shift and go to state 196
    AND_NOT         shift and go to state 197
    COMMA           reduce using rule 213 (empty -> .)
    ASSIGN          reduce using rule 213 (empty -> .)

  ! ADD             [ reduce using rule 213 (empty -> .) ]
  ! SUB             [ reduce using rule 213 (empty -> .) ]
  ! OR              [ reduce using rule 213 (empty -> .) ]
  ! XOR             [ reduce using rule 213 (empty -> .) ]
  ! MUL             [ reduce using rule 213 (empty -> .) ]
  ! QUO             [ reduce using rule 213 (empty -> .) ]
  ! REM             [ reduce using rule 213 (empty -> .) ]
  ! SHL             [ reduce using rule 213 (empty -> .) ]
  ! SHR             [ reduce using rule 213 (empty -> .) ]
  ! AND             [ reduce using rule 213 (empty -> .) ]
  ! AND_NOT         [ reduce using rule 213 (empty -> .) ]

    binary_op                      shift and go to state 175
    ExpressionBotList              shift and go to state 219
    rel_op                         shift and go to state 178
    add_op                         shift and go to state 179
    mul_op                         shift and go to state 180
    empty                          shift and go to state 220

state 236

    (136) SwitchStmt -> ExprSwitchStmt .

    SEMICOLON       reduce using rule 136 (SwitchStmt -> ExprSwitchStmt .)


state 237

    (143) ForStmt -> FOR . ExpressionBot Block
    (144) ExpressionBot -> . empty
    (145) ExpressionBot -> . Expression
    (213) empty -> .
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

    LBRACE          reduce using rule 213 (empty -> .)
    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    LPAREN          shift and go to state 138
    IDENT           shift and go to state 141
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    ExpressionBot                  shift and go to state 277
    empty                          shift and go to state 278
    Expression                     shift and go to state 279
    UnaryExpr                      shift and go to state 124
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145
    TypeName                       shift and go to state 147
    QualifiedIdent                 shift and go to state 78

state 238

    (124) Assignment -> ExpressionList . assign_op ExpressionList
    (125) assign_op -> . addmul_op ASSIGN
    (126) addmul_op -> . empty
    (127) addmul_op -> . add_op
    (128) addmul_op -> . mul_op
    (213) empty -> .
    (164) add_op -> . ADD
    (165) add_op -> . SUB
    (166) add_op -> . OR
    (167) add_op -> . XOR
    (168) mul_op -> . MUL
    (169) mul_op -> . QUO
    (170) mul_op -> . REM
    (171) mul_op -> . SHL
    (172) mul_op -> . SHR
    (173) mul_op -> . AND
    (174) mul_op -> . AND_NOT

    ASSIGN          reduce using rule 213 (empty -> .)
    ADD             shift and go to state 187
    SUB             shift and go to state 188
    OR              shift and go to state 189
    XOR             shift and go to state 190
    MUL             shift and go to state 191
    QUO             shift and go to state 192
    REM             shift and go to state 193
    SHL             shift and go to state 194
    SHR             shift and go to state 195
    AND             shift and go to state 196
    AND_NOT         shift and go to state 197

    assign_op                      shift and go to state 280
    addmul_op                      shift and go to state 281
    empty                          shift and go to state 282
    add_op                         shift and go to state 283
    mul_op                         shift and go to state 284

state 239

    (123) ShortVarDecl -> IdentifierList . DEFINE ExpressionList

    DEFINE          shift and go to state 285


state 240

    (137) ExprSwitchStmt -> SWITCH . SimpleStmtBot ExpressionBot LBRACE ExprCaseClauseList RBRACE
    (130) SimpleStmtBot -> . empty
    (131) SimpleStmtBot -> . SimpleStmt SEMICOLON
    (213) empty -> .
    (119) SimpleStmt -> . ExpressionStmt
    (120) SimpleStmt -> . Assignment
    (121) SimpleStmt -> . ShortVarDecl
    (122) ExpressionStmt -> . Expression
    (124) Assignment -> . ExpressionList assign_op ExpressionList
    (123) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (46) ExpressionList -> . Expression ExpressionBotList
    (43) IdentifierList -> . IDENT IdentifierBotList
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ! resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    LBRACE          reduce using rule 213 (empty -> .)
    IDENT           shift and go to state 241
    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    LPAREN          shift and go to state 138
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

  ! +               [ reduce using rule 213 (empty -> .) ]
  ! -               [ reduce using rule 213 (empty -> .) ]
  ! !               [ reduce using rule 213 (empty -> .) ]
  ! ^               [ reduce using rule 213 (empty -> .) ]
  ! *               [ reduce using rule 213 (empty -> .) ]
  ! &               [ reduce using rule 213 (empty -> .) ]
  ! CHAN            [ reduce using rule 213 (empty -> .) ]
  ! LPAREN          [ reduce using rule 213 (empty -> .) ]
  ! IDENT           [ reduce using rule 213 (empty -> .) ]
  ! FUNC            [ reduce using rule 213 (empty -> .) ]
  ! INT             [ reduce using rule 213 (empty -> .) ]
  ! FLOAT           [ reduce using rule 213 (empty -> .) ]
  ! STRING          [ reduce using rule 213 (empty -> .) ]

    SimpleStmtBot                  shift and go to state 286
    empty                          shift and go to state 275
    SimpleStmt                     shift and go to state 276
    ExpressionStmt                 shift and go to state 230
    Assignment                     shift and go to state 231
    ShortVarDecl                   shift and go to state 232
    Expression                     shift and go to state 235
    ExpressionList                 shift and go to state 238
    IdentifierList                 shift and go to state 239
    UnaryExpr                      shift and go to state 124
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145
    TypeName                       shift and go to state 147
    QualifiedIdent                 shift and go to state 78

state 241

    (43) IdentifierList -> IDENT . IdentifierBotList
    (198) OperandName -> IDENT .
    (61) TypeName -> IDENT .
    (63) QualifiedIdent -> IDENT . PERIOD IDENT
    (44) IdentifierBotList -> . empty
    (45) IdentifierBotList -> . IdentifierBotList COMMA IDENT
    (213) empty -> .

  ! reduce/reduce conflict for PERIOD resolved using rule 61 (TypeName -> IDENT .)
  ! shift/reduce conflict for PERIOD resolved as shift
  ! reduce/reduce conflict for COMMA resolved using rule 198 (OperandName -> IDENT .)
    LBRACK          reduce using rule 198 (OperandName -> IDENT .)
    LPAREN          reduce using rule 198 (OperandName -> IDENT .)
    LOR             reduce using rule 198 (OperandName -> IDENT .)
    LAND            reduce using rule 198 (OperandName -> IDENT .)
    EQL             reduce using rule 198 (OperandName -> IDENT .)
    NEQ             reduce using rule 198 (OperandName -> IDENT .)
    LSS             reduce using rule 198 (OperandName -> IDENT .)
    LEQ             reduce using rule 198 (OperandName -> IDENT .)
    GTR             reduce using rule 198 (OperandName -> IDENT .)
    GEQ             reduce using rule 198 (OperandName -> IDENT .)
    ADD             reduce using rule 198 (OperandName -> IDENT .)
    SUB             reduce using rule 198 (OperandName -> IDENT .)
    OR              reduce using rule 198 (OperandName -> IDENT .)
    XOR             reduce using rule 198 (OperandName -> IDENT .)
    MUL             reduce using rule 198 (OperandName -> IDENT .)
    QUO             reduce using rule 198 (OperandName -> IDENT .)
    REM             reduce using rule 198 (OperandName -> IDENT .)
    SHL             reduce using rule 198 (OperandName -> IDENT .)
    SHR             reduce using rule 198 (OperandName -> IDENT .)
    AND             reduce using rule 198 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 198 (OperandName -> IDENT .)
    COMMA           reduce using rule 198 (OperandName -> IDENT .)
    SEMICOLON       reduce using rule 198 (OperandName -> IDENT .)
    ASSIGN          reduce using rule 198 (OperandName -> IDENT .)
    PERIOD          shift and go to state 121
    DEFINE          reduce using rule 213 (empty -> .)

  ! PERIOD          [ reduce using rule 198 (OperandName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 61 (TypeName -> IDENT .) ]
  ! COMMA           [ reduce using rule 213 (empty -> .) ]

    IdentifierBotList              shift and go to state 85
    empty                          shift and go to state 86

state 242

    (95) ParameterDeclList -> ParameterDeclList COMMA ParameterDecl .

    COMMA           reduce using rule 95 (ParameterDeclList -> ParameterDeclList COMMA ParameterDecl .)
    RPAREN          reduce using rule 95 (ParameterDeclList -> ParameterDeclList COMMA ParameterDecl .)


state 243

    (99) ParameterDeclHead -> empty .

    ELLIPSIS        reduce using rule 99 (ParameterDeclHead -> empty .)
    LPAREN          reduce using rule 99 (ParameterDeclHead -> empty .)
    IDENT           reduce using rule 99 (ParameterDeclHead -> empty .)
    LBRACK          reduce using rule 99 (ParameterDeclHead -> empty .)
    STRUCT          reduce using rule 99 (ParameterDeclHead -> empty .)
    FUNC            reduce using rule 99 (ParameterDeclHead -> empty .)


state 244

    (67) ArrayType -> LBRACK ArrayLength RBRACK ElementType .

    ASSIGN          reduce using rule 67 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    SEMICOLON       reduce using rule 67 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    LBRACE          reduce using rule 67 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    RPAREN          reduce using rule 67 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    COMMA           reduce using rule 67 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    ELLIPSIS        reduce using rule 67 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    STRING          reduce using rule 67 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)


state 245

    (69) ElementType -> Type .

    LBRACE          reduce using rule 69 (ElementType -> Type .)
    SEMICOLON       reduce using rule 69 (ElementType -> Type .)
    ASSIGN          reduce using rule 69 (ElementType -> Type .)
    RPAREN          reduce using rule 69 (ElementType -> Type .)
    COMMA           reduce using rule 69 (ElementType -> Type .)
    ELLIPSIS        reduce using rule 69 (ElementType -> Type .)
    STRING          reduce using rule 69 (ElementType -> Type .)


state 246

    (150) Expression -> Expression binary_op Expression .
    (150) Expression -> Expression . binary_op Expression
    (153) binary_op -> . LOR
    (154) binary_op -> . LAND
    (155) binary_op -> . rel_op
    (156) binary_op -> . add_op
    (157) binary_op -> . mul_op
    (158) rel_op -> . EQL
    (159) rel_op -> . NEQ
    (160) rel_op -> . LSS
    (161) rel_op -> . LEQ
    (162) rel_op -> . GTR
    (163) rel_op -> . GEQ
    (164) add_op -> . ADD
    (165) add_op -> . SUB
    (166) add_op -> . OR
    (167) add_op -> . XOR
    (168) mul_op -> . MUL
    (169) mul_op -> . QUO
    (170) mul_op -> . REM
    (171) mul_op -> . SHL
    (172) mul_op -> . SHR
    (173) mul_op -> . AND
    (174) mul_op -> . AND_NOT

  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for EQL resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GTR resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for QUO resolved as shift
  ! shift/reduce conflict for REM resolved as shift
  ! shift/reduce conflict for SHL resolved as shift
  ! shift/reduce conflict for SHR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for AND_NOT resolved as shift
    RBRACK          reduce using rule 150 (Expression -> Expression binary_op Expression .)
    COMMA           reduce using rule 150 (Expression -> Expression binary_op Expression .)
    SEMICOLON       reduce using rule 150 (Expression -> Expression binary_op Expression .)
    RPAREN          reduce using rule 150 (Expression -> Expression binary_op Expression .)
    ASSIGN          reduce using rule 150 (Expression -> Expression binary_op Expression .)
    ELLIPSIS        reduce using rule 150 (Expression -> Expression binary_op Expression .)
    LBRACE          reduce using rule 150 (Expression -> Expression binary_op Expression .)
    COLON           reduce using rule 150 (Expression -> Expression binary_op Expression .)
    LOR             shift and go to state 176
    LAND            shift and go to state 177
    EQL             shift and go to state 181
    NEQ             shift and go to state 182
    LSS             shift and go to state 183
    LEQ             shift and go to state 184
    GTR             shift and go to state 185
    GEQ             shift and go to state 186
    ADD             shift and go to state 187
    SUB             shift and go to state 188
    OR              shift and go to state 189
    XOR             shift and go to state 190
    MUL             shift and go to state 191
    QUO             shift and go to state 192
    REM             shift and go to state 193
    SHL             shift and go to state 194
    SHR             shift and go to state 195
    AND             shift and go to state 196
    AND_NOT         shift and go to state 197

  ! LOR             [ reduce using rule 150 (Expression -> Expression binary_op Expression .) ]
  ! LAND            [ reduce using rule 150 (Expression -> Expression binary_op Expression .) ]
  ! EQL             [ reduce using rule 150 (Expression -> Expression binary_op Expression .) ]
  ! NEQ             [ reduce using rule 150 (Expression -> Expression binary_op Expression .) ]
  ! LSS             [ reduce using rule 150 (Expression -> Expression binary_op Expression .) ]
  ! LEQ             [ reduce using rule 150 (Expression -> Expression binary_op Expression .) ]
  ! GTR             [ reduce using rule 150 (Expression -> Expression binary_op Expression .) ]
  ! GEQ             [ reduce using rule 150 (Expression -> Expression binary_op Expression .) ]
  ! ADD             [ reduce using rule 150 (Expression -> Expression binary_op Expression .) ]
  ! SUB             [ reduce using rule 150 (Expression -> Expression binary_op Expression .) ]
  ! OR              [ reduce using rule 150 (Expression -> Expression binary_op Expression .) ]
  ! XOR             [ reduce using rule 150 (Expression -> Expression binary_op Expression .) ]
  ! MUL             [ reduce using rule 150 (Expression -> Expression binary_op Expression .) ]
  ! QUO             [ reduce using rule 150 (Expression -> Expression binary_op Expression .) ]
  ! REM             [ reduce using rule 150 (Expression -> Expression binary_op Expression .) ]
  ! SHL             [ reduce using rule 150 (Expression -> Expression binary_op Expression .) ]
  ! SHR             [ reduce using rule 150 (Expression -> Expression binary_op Expression .) ]
  ! AND             [ reduce using rule 150 (Expression -> Expression binary_op Expression .) ]
  ! AND_NOT         [ reduce using rule 150 (Expression -> Expression binary_op Expression .) ]

    binary_op                      shift and go to state 175
    rel_op                         shift and go to state 178
    add_op                         shift and go to state 179
    mul_op                         shift and go to state 180

state 247

    (205) Selector -> PERIOD IDENT .

    PERIOD          reduce using rule 205 (Selector -> PERIOD IDENT .)
    LBRACK          reduce using rule 205 (Selector -> PERIOD IDENT .)
    LPAREN          reduce using rule 205 (Selector -> PERIOD IDENT .)
    LOR             reduce using rule 205 (Selector -> PERIOD IDENT .)
    LAND            reduce using rule 205 (Selector -> PERIOD IDENT .)
    EQL             reduce using rule 205 (Selector -> PERIOD IDENT .)
    NEQ             reduce using rule 205 (Selector -> PERIOD IDENT .)
    LSS             reduce using rule 205 (Selector -> PERIOD IDENT .)
    LEQ             reduce using rule 205 (Selector -> PERIOD IDENT .)
    GTR             reduce using rule 205 (Selector -> PERIOD IDENT .)
    GEQ             reduce using rule 205 (Selector -> PERIOD IDENT .)
    ADD             reduce using rule 205 (Selector -> PERIOD IDENT .)
    SUB             reduce using rule 205 (Selector -> PERIOD IDENT .)
    OR              reduce using rule 205 (Selector -> PERIOD IDENT .)
    XOR             reduce using rule 205 (Selector -> PERIOD IDENT .)
    MUL             reduce using rule 205 (Selector -> PERIOD IDENT .)
    QUO             reduce using rule 205 (Selector -> PERIOD IDENT .)
    REM             reduce using rule 205 (Selector -> PERIOD IDENT .)
    SHL             reduce using rule 205 (Selector -> PERIOD IDENT .)
    SHR             reduce using rule 205 (Selector -> PERIOD IDENT .)
    AND             reduce using rule 205 (Selector -> PERIOD IDENT .)
    AND_NOT         reduce using rule 205 (Selector -> PERIOD IDENT .)
    RBRACK          reduce using rule 205 (Selector -> PERIOD IDENT .)
    COMMA           reduce using rule 205 (Selector -> PERIOD IDENT .)
    SEMICOLON       reduce using rule 205 (Selector -> PERIOD IDENT .)
    RPAREN          reduce using rule 205 (Selector -> PERIOD IDENT .)
    ASSIGN          reduce using rule 205 (Selector -> PERIOD IDENT .)
    ELLIPSIS        reduce using rule 205 (Selector -> PERIOD IDENT .)
    LBRACE          reduce using rule 205 (Selector -> PERIOD IDENT .)
    COLON           reduce using rule 205 (Selector -> PERIOD IDENT .)


state 248

    (206) Index -> LBRACK Expression . RBRACK
    (150) Expression -> Expression . binary_op Expression
    (153) binary_op -> . LOR
    (154) binary_op -> . LAND
    (155) binary_op -> . rel_op
    (156) binary_op -> . add_op
    (157) binary_op -> . mul_op
    (158) rel_op -> . EQL
    (159) rel_op -> . NEQ
    (160) rel_op -> . LSS
    (161) rel_op -> . LEQ
    (162) rel_op -> . GTR
    (163) rel_op -> . GEQ
    (164) add_op -> . ADD
    (165) add_op -> . SUB
    (166) add_op -> . OR
    (167) add_op -> . XOR
    (168) mul_op -> . MUL
    (169) mul_op -> . QUO
    (170) mul_op -> . REM
    (171) mul_op -> . SHL
    (172) mul_op -> . SHR
    (173) mul_op -> . AND
    (174) mul_op -> . AND_NOT

    RBRACK          shift and go to state 287
    LOR             shift and go to state 176
    LAND            shift and go to state 177
    EQL             shift and go to state 181
    NEQ             shift and go to state 182
    LSS             shift and go to state 183
    LEQ             shift and go to state 184
    GTR             shift and go to state 185
    GEQ             shift and go to state 186
    ADD             shift and go to state 187
    SUB             shift and go to state 188
    OR              shift and go to state 189
    XOR             shift and go to state 190
    MUL             shift and go to state 191
    QUO             shift and go to state 192
    REM             shift and go to state 193
    SHL             shift and go to state 194
    SHR             shift and go to state 195
    AND             shift and go to state 196
    AND_NOT         shift and go to state 197

    binary_op                      shift and go to state 175
    rel_op                         shift and go to state 178
    add_op                         shift and go to state 179
    mul_op                         shift and go to state 180

state 249

    (60) Type -> LPAREN . Type RPAREN
    (189) Operand -> LPAREN . Expression RPAREN
    (203) ReceiverType -> LPAREN . MUL TypeName RPAREN
    (204) ReceiverType -> LPAREN . ReceiverType RPAREN
    (58) Type -> . TypeName
    (59) Type -> . TypeLit
    (60) Type -> . LPAREN Type RPAREN
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (64) TypeLit -> . ArrayType
    (65) TypeLit -> . StructType
    (66) TypeLit -> . FunctionType
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (63) QualifiedIdent -> . IDENT PERIOD IDENT
    (67) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (70) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (82) FunctionType -> . FUNC Signature
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING

    MUL             shift and go to state 207
    LPAREN          shift and go to state 288
    IDENT           shift and go to state 209
    LBRACK          shift and go to state 82
    STRUCT          shift and go to state 83
    FUNC            shift and go to state 256
    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    Type                           shift and go to state 120
    Expression                     shift and go to state 206
    TypeName                       shift and go to state 255
    ReceiverType                   shift and go to state 208
    TypeLit                        shift and go to state 75
    UnaryExpr                      shift and go to state 124
    QualifiedIdent                 shift and go to state 78
    ArrayType                      shift and go to state 79
    StructType                     shift and go to state 80
    FunctionType                   shift and go to state 81
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145

state 250

    (207) Arguments -> LPAREN ArgumentsHead . RPAREN

    RPAREN          shift and go to state 289


state 251

    (208) ArgumentsHead -> empty .

    RPAREN          reduce using rule 208 (ArgumentsHead -> empty .)


state 252

    (209) ArgumentsHead -> ArgumentsHeadMid . tripledotTop commaTop
    (97) tripledotTop -> . empty
    (98) tripledotTop -> . ELLIPSIS
    (213) empty -> .

    ELLIPSIS        shift and go to state 116
    COMMA           reduce using rule 213 (empty -> .)
    RPAREN          reduce using rule 213 (empty -> .)

    tripledotTop                   shift and go to state 290
    empty                          shift and go to state 115

state 253

    (210) ArgumentsHeadMid -> ExpressionList .

    ELLIPSIS        reduce using rule 210 (ArgumentsHeadMid -> ExpressionList .)
    COMMA           reduce using rule 210 (ArgumentsHeadMid -> ExpressionList .)
    RPAREN          reduce using rule 210 (ArgumentsHeadMid -> ExpressionList .)


state 254

    (211) ArgumentsHeadMid -> Type . COMMA ExpressionList
    (212) ArgumentsHeadMid -> Type .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 291
    ELLIPSIS        reduce using rule 212 (ArgumentsHeadMid -> Type .)
    RPAREN          reduce using rule 212 (ArgumentsHeadMid -> Type .)

  ! COMMA           [ reduce using rule 212 (ArgumentsHeadMid -> Type .) ]


state 255

    (58) Type -> TypeName .
    (202) ReceiverType -> TypeName .

  ! reduce/reduce conflict for RPAREN resolved using rule 58 (Type -> TypeName .)
    COMMA           reduce using rule 58 (Type -> TypeName .)
    ELLIPSIS        reduce using rule 58 (Type -> TypeName .)
    RPAREN          reduce using rule 58 (Type -> TypeName .)
    PERIOD          reduce using rule 202 (ReceiverType -> TypeName .)

  ! RPAREN          [ reduce using rule 202 (ReceiverType -> TypeName .) ]


state 256

    (82) FunctionType -> FUNC . Signature
    (199) FunctionLit -> FUNC . Function
    (83) Signature -> . Parameters ResultTop
    (115) Function -> . Signature FunctionBody
    (88) Parameters -> . LPAREN ParameterListTop RPAREN

    LPAREN          shift and go to state 36

    Signature                      shift and go to state 292
    Function                       shift and go to state 211
    Parameters                     shift and go to state 59

state 257

    (189) Operand -> LPAREN Expression RPAREN .

    PERIOD          reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    LBRACK          reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    LOR             reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    LAND            reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    EQL             reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    NEQ             reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    LSS             reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    LEQ             reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    GTR             reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    GEQ             reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    ADD             reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    SUB             reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    OR              reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    XOR             reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    MUL             reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    QUO             reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    REM             reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    SHL             reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    SHR             reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    AND             reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    AND_NOT         reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    ASSIGN          reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    ELLIPSIS        reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 189 (Operand -> LPAREN Expression RPAREN .)


state 258

    (203) ReceiverType -> LPAREN MUL TypeName . RPAREN

    RPAREN          shift and go to state 293


state 259

    (204) ReceiverType -> LPAREN ReceiverType RPAREN .

    PERIOD          reduce using rule 204 (ReceiverType -> LPAREN ReceiverType RPAREN .)
    RPAREN          reduce using rule 204 (ReceiverType -> LPAREN ReceiverType RPAREN .)


state 260

    (200) MethodExpr -> ReceiverType PERIOD MethodName .

    PERIOD          reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LBRACK          reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LPAREN          reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LOR             reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LAND            reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    EQL             reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    NEQ             reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LSS             reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LEQ             reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    GTR             reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    GEQ             reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    ADD             reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    SUB             reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    OR              reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    XOR             reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    MUL             reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    QUO             reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    REM             reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    SHL             reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    SHR             reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    AND             reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    AND_NOT         reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    RBRACK          reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    COMMA           reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    SEMICOLON       reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    RPAREN          reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    ASSIGN          reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    ELLIPSIS        reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LBRACE          reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)
    COLON           reduce using rule 200 (MethodExpr -> ReceiverType PERIOD MethodName .)


state 261

    (70) StructType -> STRUCT LBRACE FieldDeclList RBRACE .

    ASSIGN          reduce using rule 70 (StructType -> STRUCT LBRACE FieldDeclList RBRACE .)
    SEMICOLON       reduce using rule 70 (StructType -> STRUCT LBRACE FieldDeclList RBRACE .)
    LBRACE          reduce using rule 70 (StructType -> STRUCT LBRACE FieldDeclList RBRACE .)
    RPAREN          reduce using rule 70 (StructType -> STRUCT LBRACE FieldDeclList RBRACE .)
    COMMA           reduce using rule 70 (StructType -> STRUCT LBRACE FieldDeclList RBRACE .)
    ELLIPSIS        reduce using rule 70 (StructType -> STRUCT LBRACE FieldDeclList RBRACE .)
    STRING          reduce using rule 70 (StructType -> STRUCT LBRACE FieldDeclList RBRACE .)


state 262

    (72) FieldDeclList -> FieldDeclList FieldDecl . SEMICOLON

    SEMICOLON       shift and go to state 294


state 263

    (73) FieldDecl -> FieldDeclHead . TagTop
    (74) TagTop -> . empty
    (75) TagTop -> . Tag
    (213) empty -> .
    (81) Tag -> . string_lit
    (197) string_lit -> . STRING

    SEMICOLON       reduce using rule 213 (empty -> .)
    STRING          shift and go to state 150

    TagTop                         shift and go to state 295
    empty                          shift and go to state 296
    Tag                            shift and go to state 297
    string_lit                     shift and go to state 298

state 264

    (76) FieldDeclHead -> IdentifierList . Type
    (58) Type -> . TypeName
    (59) Type -> . TypeLit
    (60) Type -> . LPAREN Type RPAREN
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (64) TypeLit -> . ArrayType
    (65) TypeLit -> . StructType
    (66) TypeLit -> . FunctionType
    (63) QualifiedIdent -> . IDENT PERIOD IDENT
    (67) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (70) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (82) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 76
    IDENT           shift and go to state 77
    LBRACK          shift and go to state 82
    STRUCT          shift and go to state 83
    FUNC            shift and go to state 84

    Type                           shift and go to state 299
    TypeName                       shift and go to state 74
    TypeLit                        shift and go to state 75
    QualifiedIdent                 shift and go to state 78
    ArrayType                      shift and go to state 79
    StructType                     shift and go to state 80
    FunctionType                   shift and go to state 81

state 265

    (77) FieldDeclHead -> EmbeddedField .

    STRING          reduce using rule 77 (FieldDeclHead -> EmbeddedField .)
    SEMICOLON       reduce using rule 77 (FieldDeclHead -> EmbeddedField .)


state 266

    (78) EmbeddedField -> starTop . TypeName
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

    IDENT           shift and go to state 77

    TypeName                       shift and go to state 300
    QualifiedIdent                 shift and go to state 78

state 267

    (79) starTop -> empty .

    IDENT           reduce using rule 79 (starTop -> empty .)


state 268

    (80) starTop -> MUL .

    IDENT           reduce using rule 80 (starTop -> MUL .)


state 269

    (48) ExpressionBotList -> ExpressionBotList COMMA . Expression
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    LPAREN          shift and go to state 138
    IDENT           shift and go to state 141
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    Expression                     shift and go to state 301
    UnaryExpr                      shift and go to state 124
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145
    TypeName                       shift and go to state 147
    QualifiedIdent                 shift and go to state 78

state 270

    (22) StatementList -> StatementList Statement SEMICOLON .

    RBRACE          reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    RETURN          reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    LBRACE          reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    IF              reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    FOR             reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    CONST           reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    TYPE            reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    VAR             reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    SWITCH          reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    IDENT           reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    +               reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    -               reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    !               reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    ^               reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    *               reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    &               reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    CHAN            reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    LPAREN          reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    FUNC            reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    INT             reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    FLOAT           reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    STRING          reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    CASE            reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)
    DEFAULT         reduce using rule 22 (StatementList -> StatementList Statement SEMICOLON .)


state 271

    (146) ReturnStmt -> RETURN ExpressionListBot .

    SEMICOLON       reduce using rule 146 (ReturnStmt -> RETURN ExpressionListBot .)


state 272

    (147) ExpressionListBot -> empty .

    SEMICOLON       reduce using rule 147 (ExpressionListBot -> empty .)


state 273

    (148) ExpressionListBot -> ExpressionList .

    SEMICOLON       reduce using rule 148 (ExpressionListBot -> ExpressionList .)


state 274

    (129) IfStmt -> IF SimpleStmtBot . Expression Block elseBot
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    LPAREN          shift and go to state 138
    IDENT           shift and go to state 141
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    Expression                     shift and go to state 302
    UnaryExpr                      shift and go to state 124
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145
    TypeName                       shift and go to state 147
    QualifiedIdent                 shift and go to state 78

state 275

    (130) SimpleStmtBot -> empty .

    +               reduce using rule 130 (SimpleStmtBot -> empty .)
    -               reduce using rule 130 (SimpleStmtBot -> empty .)
    !               reduce using rule 130 (SimpleStmtBot -> empty .)
    ^               reduce using rule 130 (SimpleStmtBot -> empty .)
    *               reduce using rule 130 (SimpleStmtBot -> empty .)
    &               reduce using rule 130 (SimpleStmtBot -> empty .)
    CHAN            reduce using rule 130 (SimpleStmtBot -> empty .)
    LPAREN          reduce using rule 130 (SimpleStmtBot -> empty .)
    IDENT           reduce using rule 130 (SimpleStmtBot -> empty .)
    FUNC            reduce using rule 130 (SimpleStmtBot -> empty .)
    INT             reduce using rule 130 (SimpleStmtBot -> empty .)
    FLOAT           reduce using rule 130 (SimpleStmtBot -> empty .)
    STRING          reduce using rule 130 (SimpleStmtBot -> empty .)
    LBRACE          reduce using rule 130 (SimpleStmtBot -> empty .)


state 276

    (131) SimpleStmtBot -> SimpleStmt . SEMICOLON

    SEMICOLON       shift and go to state 303


state 277

    (143) ForStmt -> FOR ExpressionBot . Block
    (20) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 100

    Block                          shift and go to state 304

state 278

    (144) ExpressionBot -> empty .

    LBRACE          reduce using rule 144 (ExpressionBot -> empty .)


state 279

    (145) ExpressionBot -> Expression .
    (150) Expression -> Expression . binary_op Expression
    (153) binary_op -> . LOR
    (154) binary_op -> . LAND
    (155) binary_op -> . rel_op
    (156) binary_op -> . add_op
    (157) binary_op -> . mul_op
    (158) rel_op -> . EQL
    (159) rel_op -> . NEQ
    (160) rel_op -> . LSS
    (161) rel_op -> . LEQ
    (162) rel_op -> . GTR
    (163) rel_op -> . GEQ
    (164) add_op -> . ADD
    (165) add_op -> . SUB
    (166) add_op -> . OR
    (167) add_op -> . XOR
    (168) mul_op -> . MUL
    (169) mul_op -> . QUO
    (170) mul_op -> . REM
    (171) mul_op -> . SHL
    (172) mul_op -> . SHR
    (173) mul_op -> . AND
    (174) mul_op -> . AND_NOT

    LBRACE          reduce using rule 145 (ExpressionBot -> Expression .)
    LOR             shift and go to state 176
    LAND            shift and go to state 177
    EQL             shift and go to state 181
    NEQ             shift and go to state 182
    LSS             shift and go to state 183
    LEQ             shift and go to state 184
    GTR             shift and go to state 185
    GEQ             shift and go to state 186
    ADD             shift and go to state 187
    SUB             shift and go to state 188
    OR              shift and go to state 189
    XOR             shift and go to state 190
    MUL             shift and go to state 191
    QUO             shift and go to state 192
    REM             shift and go to state 193
    SHL             shift and go to state 194
    SHR             shift and go to state 195
    AND             shift and go to state 196
    AND_NOT         shift and go to state 197

    binary_op                      shift and go to state 175
    rel_op                         shift and go to state 178
    add_op                         shift and go to state 179
    mul_op                         shift and go to state 180

state 280

    (124) Assignment -> ExpressionList assign_op . ExpressionList
    (46) ExpressionList -> . Expression ExpressionBotList
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    LPAREN          shift and go to state 138
    IDENT           shift and go to state 141
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    ExpressionList                 shift and go to state 305
    Expression                     shift and go to state 163
    UnaryExpr                      shift and go to state 124
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145
    TypeName                       shift and go to state 147
    QualifiedIdent                 shift and go to state 78

state 281

    (125) assign_op -> addmul_op . ASSIGN

    ASSIGN          shift and go to state 306


state 282

    (126) addmul_op -> empty .

    ASSIGN          reduce using rule 126 (addmul_op -> empty .)


state 283

    (127) addmul_op -> add_op .

    ASSIGN          reduce using rule 127 (addmul_op -> add_op .)


state 284

    (128) addmul_op -> mul_op .

    ASSIGN          reduce using rule 128 (addmul_op -> mul_op .)


state 285

    (123) ShortVarDecl -> IdentifierList DEFINE . ExpressionList
    (46) ExpressionList -> . Expression ExpressionBotList
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    LPAREN          shift and go to state 138
    IDENT           shift and go to state 141
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    ExpressionList                 shift and go to state 307
    Expression                     shift and go to state 163
    UnaryExpr                      shift and go to state 124
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145
    TypeName                       shift and go to state 147
    QualifiedIdent                 shift and go to state 78

state 286

    (137) ExprSwitchStmt -> SWITCH SimpleStmtBot . ExpressionBot LBRACE ExprCaseClauseList RBRACE
    (144) ExpressionBot -> . empty
    (145) ExpressionBot -> . Expression
    (213) empty -> .
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

    LBRACE          reduce using rule 213 (empty -> .)
    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    LPAREN          shift and go to state 138
    IDENT           shift and go to state 141
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    ExpressionBot                  shift and go to state 308
    empty                          shift and go to state 278
    Expression                     shift and go to state 279
    UnaryExpr                      shift and go to state 124
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145
    TypeName                       shift and go to state 147
    QualifiedIdent                 shift and go to state 78

state 287

    (206) Index -> LBRACK Expression RBRACK .

    PERIOD          reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    LBRACK          reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    LPAREN          reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    LOR             reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    LAND            reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    EQL             reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    NEQ             reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    LSS             reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    LEQ             reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    GTR             reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    GEQ             reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    ADD             reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    SUB             reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    OR              reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    XOR             reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    MUL             reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    QUO             reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    REM             reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    SHL             reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    SHR             reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    AND             reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    AND_NOT         reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    COMMA           reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    SEMICOLON       reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    ASSIGN          reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    ELLIPSIS        reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    LBRACE          reduce using rule 206 (Index -> LBRACK Expression RBRACK .)
    COLON           reduce using rule 206 (Index -> LBRACK Expression RBRACK .)


state 288

    (60) Type -> LPAREN . Type RPAREN
    (203) ReceiverType -> LPAREN . MUL TypeName RPAREN
    (204) ReceiverType -> LPAREN . ReceiverType RPAREN
    (189) Operand -> LPAREN . Expression RPAREN
    (58) Type -> . TypeName
    (59) Type -> . TypeLit
    (60) Type -> . LPAREN Type RPAREN
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (64) TypeLit -> . ArrayType
    (65) TypeLit -> . StructType
    (66) TypeLit -> . FunctionType
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (63) QualifiedIdent -> . IDENT PERIOD IDENT
    (67) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (70) StructType -> . STRUCT LBRACE FieldDeclList RBRACE
    (82) FunctionType -> . FUNC Signature
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING

    MUL             shift and go to state 207
    LPAREN          shift and go to state 288
    IDENT           shift and go to state 209
    LBRACK          shift and go to state 82
    STRUCT          shift and go to state 83
    FUNC            shift and go to state 256
    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    Type                           shift and go to state 120
    TypeName                       shift and go to state 255
    ReceiverType                   shift and go to state 208
    Expression                     shift and go to state 206
    TypeLit                        shift and go to state 75
    UnaryExpr                      shift and go to state 124
    QualifiedIdent                 shift and go to state 78
    ArrayType                      shift and go to state 79
    StructType                     shift and go to state 80
    FunctionType                   shift and go to state 81
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145

state 289

    (207) Arguments -> LPAREN ArgumentsHead RPAREN .

    PERIOD          reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    LBRACK          reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    LPAREN          reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    LOR             reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    LAND            reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    EQL             reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    NEQ             reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    LSS             reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    LEQ             reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    GTR             reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    GEQ             reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    ADD             reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    SUB             reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    OR              reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    XOR             reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    MUL             reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    QUO             reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    REM             reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    SHL             reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    SHR             reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    AND             reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    AND_NOT         reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    RBRACK          reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    COMMA           reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    SEMICOLON       reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    RPAREN          reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    ASSIGN          reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    ELLIPSIS        reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    LBRACE          reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)
    COLON           reduce using rule 207 (Arguments -> LPAREN ArgumentsHead RPAREN .)


state 290

    (209) ArgumentsHead -> ArgumentsHeadMid tripledotTop . commaTop
    (91) commaTop -> . empty
    (92) commaTop -> . COMMA
    (213) empty -> .

    COMMA           shift and go to state 111
    RPAREN          reduce using rule 213 (empty -> .)

    commaTop                       shift and go to state 309
    empty                          shift and go to state 110

state 291

    (211) ArgumentsHeadMid -> Type COMMA . ExpressionList
    (46) ExpressionList -> . Expression ExpressionBotList
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    LPAREN          shift and go to state 138
    IDENT           shift and go to state 141
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    ExpressionList                 shift and go to state 310
    Expression                     shift and go to state 163
    UnaryExpr                      shift and go to state 124
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145
    TypeName                       shift and go to state 147
    QualifiedIdent                 shift and go to state 78

state 292

    (82) FunctionType -> FUNC Signature .
    (115) Function -> Signature . FunctionBody
    (116) FunctionBody -> . Block
    (20) Block -> . LBRACE StatementList RBRACE

    COMMA           reduce using rule 82 (FunctionType -> FUNC Signature .)
    ELLIPSIS        reduce using rule 82 (FunctionType -> FUNC Signature .)
    RPAREN          reduce using rule 82 (FunctionType -> FUNC Signature .)
    LBRACE          shift and go to state 100

    FunctionBody                   shift and go to state 98
    Block                          shift and go to state 99

state 293

    (203) ReceiverType -> LPAREN MUL TypeName RPAREN .

    PERIOD          reduce using rule 203 (ReceiverType -> LPAREN MUL TypeName RPAREN .)
    RPAREN          reduce using rule 203 (ReceiverType -> LPAREN MUL TypeName RPAREN .)


state 294

    (72) FieldDeclList -> FieldDeclList FieldDecl SEMICOLON .

    RBRACE          reduce using rule 72 (FieldDeclList -> FieldDeclList FieldDecl SEMICOLON .)
    IDENT           reduce using rule 72 (FieldDeclList -> FieldDeclList FieldDecl SEMICOLON .)
    MUL             reduce using rule 72 (FieldDeclList -> FieldDeclList FieldDecl SEMICOLON .)


state 295

    (73) FieldDecl -> FieldDeclHead TagTop .

    SEMICOLON       reduce using rule 73 (FieldDecl -> FieldDeclHead TagTop .)


state 296

    (74) TagTop -> empty .

    SEMICOLON       reduce using rule 74 (TagTop -> empty .)


state 297

    (75) TagTop -> Tag .

    SEMICOLON       reduce using rule 75 (TagTop -> Tag .)


state 298

    (81) Tag -> string_lit .

    SEMICOLON       reduce using rule 81 (Tag -> string_lit .)


state 299

    (76) FieldDeclHead -> IdentifierList Type .

    STRING          reduce using rule 76 (FieldDeclHead -> IdentifierList Type .)
    SEMICOLON       reduce using rule 76 (FieldDeclHead -> IdentifierList Type .)


state 300

    (78) EmbeddedField -> starTop TypeName .

    STRING          reduce using rule 78 (EmbeddedField -> starTop TypeName .)
    SEMICOLON       reduce using rule 78 (EmbeddedField -> starTop TypeName .)


state 301

    (48) ExpressionBotList -> ExpressionBotList COMMA Expression .
    (150) Expression -> Expression . binary_op Expression
    (153) binary_op -> . LOR
    (154) binary_op -> . LAND
    (155) binary_op -> . rel_op
    (156) binary_op -> . add_op
    (157) binary_op -> . mul_op
    (158) rel_op -> . EQL
    (159) rel_op -> . NEQ
    (160) rel_op -> . LSS
    (161) rel_op -> . LEQ
    (162) rel_op -> . GTR
    (163) rel_op -> . GEQ
    (164) add_op -> . ADD
    (165) add_op -> . SUB
    (166) add_op -> . OR
    (167) add_op -> . XOR
    (168) mul_op -> . MUL
    (169) mul_op -> . QUO
    (170) mul_op -> . REM
    (171) mul_op -> . SHL
    (172) mul_op -> . SHR
    (173) mul_op -> . AND
    (174) mul_op -> . AND_NOT

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for QUO resolved as shift
  ! shift/reduce conflict for REM resolved as shift
  ! shift/reduce conflict for SHL resolved as shift
  ! shift/reduce conflict for SHR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for AND_NOT resolved as shift
    COMMA           reduce using rule 48 (ExpressionBotList -> ExpressionBotList COMMA Expression .)
    SEMICOLON       reduce using rule 48 (ExpressionBotList -> ExpressionBotList COMMA Expression .)
    ELLIPSIS        reduce using rule 48 (ExpressionBotList -> ExpressionBotList COMMA Expression .)
    RPAREN          reduce using rule 48 (ExpressionBotList -> ExpressionBotList COMMA Expression .)
    COLON           reduce using rule 48 (ExpressionBotList -> ExpressionBotList COMMA Expression .)
    ASSIGN          reduce using rule 48 (ExpressionBotList -> ExpressionBotList COMMA Expression .)
    LOR             shift and go to state 176
    LAND            shift and go to state 177
    EQL             shift and go to state 181
    NEQ             shift and go to state 182
    LSS             shift and go to state 183
    LEQ             shift and go to state 184
    GTR             shift and go to state 185
    GEQ             shift and go to state 186
    ADD             shift and go to state 187
    SUB             shift and go to state 188
    OR              shift and go to state 189
    XOR             shift and go to state 190
    MUL             shift and go to state 191
    QUO             shift and go to state 192
    REM             shift and go to state 193
    SHL             shift and go to state 194
    SHR             shift and go to state 195
    AND             shift and go to state 196
    AND_NOT         shift and go to state 197

  ! ADD             [ reduce using rule 48 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]
  ! SUB             [ reduce using rule 48 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]
  ! OR              [ reduce using rule 48 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]
  ! XOR             [ reduce using rule 48 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]
  ! MUL             [ reduce using rule 48 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]
  ! QUO             [ reduce using rule 48 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]
  ! REM             [ reduce using rule 48 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]
  ! SHL             [ reduce using rule 48 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]
  ! SHR             [ reduce using rule 48 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]
  ! AND             [ reduce using rule 48 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]
  ! AND_NOT         [ reduce using rule 48 (ExpressionBotList -> ExpressionBotList COMMA Expression .) ]

    binary_op                      shift and go to state 175
    rel_op                         shift and go to state 178
    add_op                         shift and go to state 179
    mul_op                         shift and go to state 180

state 302

    (129) IfStmt -> IF SimpleStmtBot Expression . Block elseBot
    (150) Expression -> Expression . binary_op Expression
    (20) Block -> . LBRACE StatementList RBRACE
    (153) binary_op -> . LOR
    (154) binary_op -> . LAND
    (155) binary_op -> . rel_op
    (156) binary_op -> . add_op
    (157) binary_op -> . mul_op
    (158) rel_op -> . EQL
    (159) rel_op -> . NEQ
    (160) rel_op -> . LSS
    (161) rel_op -> . LEQ
    (162) rel_op -> . GTR
    (163) rel_op -> . GEQ
    (164) add_op -> . ADD
    (165) add_op -> . SUB
    (166) add_op -> . OR
    (167) add_op -> . XOR
    (168) mul_op -> . MUL
    (169) mul_op -> . QUO
    (170) mul_op -> . REM
    (171) mul_op -> . SHL
    (172) mul_op -> . SHR
    (173) mul_op -> . AND
    (174) mul_op -> . AND_NOT

    LBRACE          shift and go to state 100
    LOR             shift and go to state 176
    LAND            shift and go to state 177
    EQL             shift and go to state 181
    NEQ             shift and go to state 182
    LSS             shift and go to state 183
    LEQ             shift and go to state 184
    GTR             shift and go to state 185
    GEQ             shift and go to state 186
    ADD             shift and go to state 187
    SUB             shift and go to state 188
    OR              shift and go to state 189
    XOR             shift and go to state 190
    MUL             shift and go to state 191
    QUO             shift and go to state 192
    REM             shift and go to state 193
    SHL             shift and go to state 194
    SHR             shift and go to state 195
    AND             shift and go to state 196
    AND_NOT         shift and go to state 197

    Block                          shift and go to state 311
    binary_op                      shift and go to state 175
    rel_op                         shift and go to state 178
    add_op                         shift and go to state 179
    mul_op                         shift and go to state 180

state 303

    (131) SimpleStmtBot -> SimpleStmt SEMICOLON .

    +               reduce using rule 131 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    -               reduce using rule 131 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    !               reduce using rule 131 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    ^               reduce using rule 131 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    *               reduce using rule 131 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    &               reduce using rule 131 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    CHAN            reduce using rule 131 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    LPAREN          reduce using rule 131 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    IDENT           reduce using rule 131 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    FUNC            reduce using rule 131 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    INT             reduce using rule 131 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    FLOAT           reduce using rule 131 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    STRING          reduce using rule 131 (SimpleStmtBot -> SimpleStmt SEMICOLON .)
    LBRACE          reduce using rule 131 (SimpleStmtBot -> SimpleStmt SEMICOLON .)


state 304

    (143) ForStmt -> FOR ExpressionBot Block .

    SEMICOLON       reduce using rule 143 (ForStmt -> FOR ExpressionBot Block .)


state 305

    (124) Assignment -> ExpressionList assign_op ExpressionList .

    SEMICOLON       reduce using rule 124 (Assignment -> ExpressionList assign_op ExpressionList .)


state 306

    (125) assign_op -> addmul_op ASSIGN .

    +               reduce using rule 125 (assign_op -> addmul_op ASSIGN .)
    -               reduce using rule 125 (assign_op -> addmul_op ASSIGN .)
    !               reduce using rule 125 (assign_op -> addmul_op ASSIGN .)
    ^               reduce using rule 125 (assign_op -> addmul_op ASSIGN .)
    *               reduce using rule 125 (assign_op -> addmul_op ASSIGN .)
    &               reduce using rule 125 (assign_op -> addmul_op ASSIGN .)
    CHAN            reduce using rule 125 (assign_op -> addmul_op ASSIGN .)
    LPAREN          reduce using rule 125 (assign_op -> addmul_op ASSIGN .)
    IDENT           reduce using rule 125 (assign_op -> addmul_op ASSIGN .)
    FUNC            reduce using rule 125 (assign_op -> addmul_op ASSIGN .)
    INT             reduce using rule 125 (assign_op -> addmul_op ASSIGN .)
    FLOAT           reduce using rule 125 (assign_op -> addmul_op ASSIGN .)
    STRING          reduce using rule 125 (assign_op -> addmul_op ASSIGN .)


state 307

    (123) ShortVarDecl -> IdentifierList DEFINE ExpressionList .

    SEMICOLON       reduce using rule 123 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)


state 308

    (137) ExprSwitchStmt -> SWITCH SimpleStmtBot ExpressionBot . LBRACE ExprCaseClauseList RBRACE

    LBRACE          shift and go to state 312


state 309

    (209) ArgumentsHead -> ArgumentsHeadMid tripledotTop commaTop .

    RPAREN          reduce using rule 209 (ArgumentsHead -> ArgumentsHeadMid tripledotTop commaTop .)


state 310

    (211) ArgumentsHeadMid -> Type COMMA ExpressionList .

    ELLIPSIS        reduce using rule 211 (ArgumentsHeadMid -> Type COMMA ExpressionList .)
    COMMA           reduce using rule 211 (ArgumentsHeadMid -> Type COMMA ExpressionList .)
    RPAREN          reduce using rule 211 (ArgumentsHeadMid -> Type COMMA ExpressionList .)


state 311

    (129) IfStmt -> IF SimpleStmtBot Expression Block . elseBot
    (132) elseBot -> . empty
    (133) elseBot -> . ELSE elseTail
    (213) empty -> .

    ELSE            shift and go to state 315
    SEMICOLON       reduce using rule 213 (empty -> .)

    elseBot                        shift and go to state 313
    empty                          shift and go to state 314

state 312

    (137) ExprSwitchStmt -> SWITCH SimpleStmtBot ExpressionBot LBRACE . ExprCaseClauseList RBRACE
    (138) ExprCaseClauseList -> . empty
    (139) ExprCaseClauseList -> . ExprCaseClauseList ExprCaseClause
    (213) empty -> .

    RBRACE          reduce using rule 213 (empty -> .)
    CASE            reduce using rule 213 (empty -> .)
    DEFAULT         reduce using rule 213 (empty -> .)

    ExprCaseClauseList             shift and go to state 316
    empty                          shift and go to state 317

state 313

    (129) IfStmt -> IF SimpleStmtBot Expression Block elseBot .

    SEMICOLON       reduce using rule 129 (IfStmt -> IF SimpleStmtBot Expression Block elseBot .)


state 314

    (132) elseBot -> empty .

    SEMICOLON       reduce using rule 132 (elseBot -> empty .)


state 315

    (133) elseBot -> ELSE . elseTail
    (134) elseTail -> . IfStmt
    (135) elseTail -> . Block
    (129) IfStmt -> . IF SimpleStmtBot Expression Block elseBot
    (20) Block -> . LBRACE StatementList RBRACE

    IF              shift and go to state 234
    LBRACE          shift and go to state 100

    elseTail                       shift and go to state 318
    IfStmt                         shift and go to state 319
    Block                          shift and go to state 320

state 316

    (137) ExprSwitchStmt -> SWITCH SimpleStmtBot ExpressionBot LBRACE ExprCaseClauseList . RBRACE
    (139) ExprCaseClauseList -> ExprCaseClauseList . ExprCaseClause
    (140) ExprCaseClause -> . ExprSwitchCase COLON StatementList
    (141) ExprSwitchCase -> . CASE ExpressionList
    (142) ExprSwitchCase -> . DEFAULT

    RBRACE          shift and go to state 321
    CASE            shift and go to state 324
    DEFAULT         shift and go to state 325

    ExprCaseClause                 shift and go to state 322
    ExprSwitchCase                 shift and go to state 323

state 317

    (138) ExprCaseClauseList -> empty .

    RBRACE          reduce using rule 138 (ExprCaseClauseList -> empty .)
    CASE            reduce using rule 138 (ExprCaseClauseList -> empty .)
    DEFAULT         reduce using rule 138 (ExprCaseClauseList -> empty .)


state 318

    (133) elseBot -> ELSE elseTail .

    SEMICOLON       reduce using rule 133 (elseBot -> ELSE elseTail .)


state 319

    (134) elseTail -> IfStmt .

    SEMICOLON       reduce using rule 134 (elseTail -> IfStmt .)


state 320

    (135) elseTail -> Block .

    SEMICOLON       reduce using rule 135 (elseTail -> Block .)


state 321

    (137) ExprSwitchStmt -> SWITCH SimpleStmtBot ExpressionBot LBRACE ExprCaseClauseList RBRACE .

    SEMICOLON       reduce using rule 137 (ExprSwitchStmt -> SWITCH SimpleStmtBot ExpressionBot LBRACE ExprCaseClauseList RBRACE .)


state 322

    (139) ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause .

    RBRACE          reduce using rule 139 (ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause .)
    CASE            reduce using rule 139 (ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause .)
    DEFAULT         reduce using rule 139 (ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause .)


state 323

    (140) ExprCaseClause -> ExprSwitchCase . COLON StatementList

    COLON           shift and go to state 326


state 324

    (141) ExprSwitchCase -> CASE . ExpressionList
    (46) ExpressionList -> . Expression ExpressionBotList
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    LPAREN          shift and go to state 138
    IDENT           shift and go to state 141
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    ExpressionList                 shift and go to state 327
    Expression                     shift and go to state 163
    UnaryExpr                      shift and go to state 124
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145
    TypeName                       shift and go to state 147
    QualifiedIdent                 shift and go to state 78

state 325

    (142) ExprSwitchCase -> DEFAULT .

    COLON           reduce using rule 142 (ExprSwitchCase -> DEFAULT .)


state 326

    (140) ExprCaseClause -> ExprSwitchCase COLON . StatementList
    (21) StatementList -> . empty
    (22) StatementList -> . StatementList Statement SEMICOLON
    (213) empty -> .

    RETURN          reduce using rule 213 (empty -> .)
    LBRACE          reduce using rule 213 (empty -> .)
    IF              reduce using rule 213 (empty -> .)
    FOR             reduce using rule 213 (empty -> .)
    CONST           reduce using rule 213 (empty -> .)
    TYPE            reduce using rule 213 (empty -> .)
    VAR             reduce using rule 213 (empty -> .)
    SWITCH          reduce using rule 213 (empty -> .)
    IDENT           reduce using rule 213 (empty -> .)
    +               reduce using rule 213 (empty -> .)
    -               reduce using rule 213 (empty -> .)
    !               reduce using rule 213 (empty -> .)
    ^               reduce using rule 213 (empty -> .)
    *               reduce using rule 213 (empty -> .)
    &               reduce using rule 213 (empty -> .)
    CHAN            reduce using rule 213 (empty -> .)
    LPAREN          reduce using rule 213 (empty -> .)
    FUNC            reduce using rule 213 (empty -> .)
    INT             reduce using rule 213 (empty -> .)
    FLOAT           reduce using rule 213 (empty -> .)
    STRING          reduce using rule 213 (empty -> .)
    RBRACE          reduce using rule 213 (empty -> .)
    CASE            reduce using rule 213 (empty -> .)
    DEFAULT         reduce using rule 213 (empty -> .)

    StatementList                  shift and go to state 328
    empty                          shift and go to state 166

state 327

    (141) ExprSwitchCase -> CASE ExpressionList .

    COLON           reduce using rule 141 (ExprSwitchCase -> CASE ExpressionList .)


state 328

    (140) ExprCaseClause -> ExprSwitchCase COLON StatementList .
    (22) StatementList -> StatementList . Statement SEMICOLON
    (23) Statement -> . Declaration
    (24) Statement -> . SimpleStmt
    (25) Statement -> . ReturnStmt
    (26) Statement -> . Block
    (27) Statement -> . IfStmt
    (28) Statement -> . SwitchStmt
    (29) Statement -> . ForStmt
    (30) Declaration -> . ConstDecl
    (31) Declaration -> . TypeDecl
    (32) Declaration -> . VarDecl
    (119) SimpleStmt -> . ExpressionStmt
    (120) SimpleStmt -> . Assignment
    (121) SimpleStmt -> . ShortVarDecl
    (146) ReturnStmt -> . RETURN ExpressionListBot
    (20) Block -> . LBRACE StatementList RBRACE
    (129) IfStmt -> . IF SimpleStmtBot Expression Block elseBot
    (136) SwitchStmt -> . ExprSwitchStmt
    (143) ForStmt -> . FOR ExpressionBot Block
    (33) ConstDecl -> . CONST ConstSpecTopList
    (49) TypeDecl -> . TYPE TypeSpecTopList
    (101) VarDecl -> . VAR VarSpecTopList
    (122) ExpressionStmt -> . Expression
    (124) Assignment -> . ExpressionList assign_op ExpressionList
    (123) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (137) ExprSwitchStmt -> . SWITCH SimpleStmtBot ExpressionBot LBRACE ExprCaseClauseList RBRACE
    (149) Expression -> . UnaryExpr
    (150) Expression -> . Expression binary_op Expression
    (46) ExpressionList -> . Expression ExpressionBotList
    (43) IdentifierList -> . IDENT IdentifierBotList
    (151) UnaryExpr -> . PrimaryExpr
    (152) UnaryExpr -> . unary_op UnaryExpr
    (182) PrimaryExpr -> . Operand
    (183) PrimaryExpr -> . PrimaryExpr Selector
    (184) PrimaryExpr -> . PrimaryExpr Index
    (185) PrimaryExpr -> . PrimaryExpr Arguments
    (175) unary_op -> . +
    (176) unary_op -> . -
    (177) unary_op -> . !
    (178) unary_op -> . ^
    (179) unary_op -> . *
    (180) unary_op -> . &
    (181) unary_op -> . CHAN
    (186) Operand -> . Literal
    (187) Operand -> . OperandName
    (188) Operand -> . MethodExpr
    (189) Operand -> . LPAREN Expression RPAREN
    (190) Literal -> . BasicLit
    (191) Literal -> . FunctionLit
    (198) OperandName -> . IDENT
    (200) MethodExpr -> . ReceiverType PERIOD MethodName
    (192) BasicLit -> . int_lit
    (193) BasicLit -> . float_lit
    (194) BasicLit -> . string_lit
    (199) FunctionLit -> . FUNC Function
    (202) ReceiverType -> . TypeName
    (203) ReceiverType -> . LPAREN MUL TypeName RPAREN
    (204) ReceiverType -> . LPAREN ReceiverType RPAREN
    (195) int_lit -> . INT
    (196) float_lit -> . FLOAT
    (197) string_lit -> . STRING
    (61) TypeName -> . IDENT
    (62) TypeName -> . QualifiedIdent
    (63) QualifiedIdent -> . IDENT PERIOD IDENT

    RBRACE          reduce using rule 140 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    CASE            reduce using rule 140 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 140 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    RETURN          shift and go to state 233
    LBRACE          shift and go to state 100
    IF              shift and go to state 234
    FOR             shift and go to state 237
    CONST           shift and go to state 20
    TYPE            shift and go to state 21
    VAR             shift and go to state 22
    SWITCH          shift and go to state 240
    IDENT           shift and go to state 241
    +               shift and go to state 128
    -               shift and go to state 129
    !               shift and go to state 130
    ^               shift and go to state 131
    *               shift and go to state 132
    &               shift and go to state 133
    CHAN            shift and go to state 134
    LPAREN          shift and go to state 138
    FUNC            shift and go to state 146
    INT             shift and go to state 148
    FLOAT           shift and go to state 149
    STRING          shift and go to state 150

    Statement                      shift and go to state 222
    Declaration                    shift and go to state 223
    SimpleStmt                     shift and go to state 224
    ReturnStmt                     shift and go to state 225
    Block                          shift and go to state 226
    IfStmt                         shift and go to state 227
    SwitchStmt                     shift and go to state 228
    ForStmt                        shift and go to state 229
    ConstDecl                      shift and go to state 16
    TypeDecl                       shift and go to state 17
    VarDecl                        shift and go to state 18
    ExpressionStmt                 shift and go to state 230
    Assignment                     shift and go to state 231
    ShortVarDecl                   shift and go to state 232
    Expression                     shift and go to state 235
    ExprSwitchStmt                 shift and go to state 236
    ExpressionList                 shift and go to state 238
    IdentifierList                 shift and go to state 239
    UnaryExpr                      shift and go to state 124
    PrimaryExpr                    shift and go to state 125
    unary_op                       shift and go to state 126
    Operand                        shift and go to state 127
    Literal                        shift and go to state 135
    OperandName                    shift and go to state 136
    MethodExpr                     shift and go to state 137
    BasicLit                       shift and go to state 139
    FunctionLit                    shift and go to state 140
    ReceiverType                   shift and go to state 142
    int_lit                        shift and go to state 143
    float_lit                      shift and go to state 144
    string_lit                     shift and go to state 145
    TypeName                       shift and go to state 147
    QualifiedIdent                 shift and go to state 78
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDENT in state 36 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 106 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 106 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 106 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 106 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 106 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 112 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 141 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 168 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 209 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 209 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 213 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 219 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 234 resolved as shift
WARNING: shift/reduce conflict for + in state 234 resolved as shift
WARNING: shift/reduce conflict for - in state 234 resolved as shift
WARNING: shift/reduce conflict for ! in state 234 resolved as shift
WARNING: shift/reduce conflict for ^ in state 234 resolved as shift
WARNING: shift/reduce conflict for * in state 234 resolved as shift
WARNING: shift/reduce conflict for & in state 234 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 234 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 234 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 234 resolved as shift
WARNING: shift/reduce conflict for INT in state 234 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 234 resolved as shift
WARNING: shift/reduce conflict for STRING in state 234 resolved as shift
WARNING: shift/reduce conflict for ADD in state 235 resolved as shift
WARNING: shift/reduce conflict for SUB in state 235 resolved as shift
WARNING: shift/reduce conflict for OR in state 235 resolved as shift
WARNING: shift/reduce conflict for XOR in state 235 resolved as shift
WARNING: shift/reduce conflict for MUL in state 235 resolved as shift
WARNING: shift/reduce conflict for QUO in state 235 resolved as shift
WARNING: shift/reduce conflict for REM in state 235 resolved as shift
WARNING: shift/reduce conflict for SHL in state 235 resolved as shift
WARNING: shift/reduce conflict for SHR in state 235 resolved as shift
WARNING: shift/reduce conflict for AND in state 235 resolved as shift
WARNING: shift/reduce conflict for AND_NOT in state 235 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 240 resolved as shift
WARNING: shift/reduce conflict for + in state 240 resolved as shift
WARNING: shift/reduce conflict for - in state 240 resolved as shift
WARNING: shift/reduce conflict for ! in state 240 resolved as shift
WARNING: shift/reduce conflict for ^ in state 240 resolved as shift
WARNING: shift/reduce conflict for * in state 240 resolved as shift
WARNING: shift/reduce conflict for & in state 240 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 240 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 240 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 240 resolved as shift
WARNING: shift/reduce conflict for INT in state 240 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 240 resolved as shift
WARNING: shift/reduce conflict for STRING in state 240 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 241 resolved as shift
WARNING: shift/reduce conflict for LOR in state 246 resolved as shift
WARNING: shift/reduce conflict for LAND in state 246 resolved as shift
WARNING: shift/reduce conflict for EQL in state 246 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 246 resolved as shift
WARNING: shift/reduce conflict for LSS in state 246 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 246 resolved as shift
WARNING: shift/reduce conflict for GTR in state 246 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 246 resolved as shift
WARNING: shift/reduce conflict for ADD in state 246 resolved as shift
WARNING: shift/reduce conflict for SUB in state 246 resolved as shift
WARNING: shift/reduce conflict for OR in state 246 resolved as shift
WARNING: shift/reduce conflict for XOR in state 246 resolved as shift
WARNING: shift/reduce conflict for MUL in state 246 resolved as shift
WARNING: shift/reduce conflict for QUO in state 246 resolved as shift
WARNING: shift/reduce conflict for REM in state 246 resolved as shift
WARNING: shift/reduce conflict for SHL in state 246 resolved as shift
WARNING: shift/reduce conflict for SHR in state 246 resolved as shift
WARNING: shift/reduce conflict for AND in state 246 resolved as shift
WARNING: shift/reduce conflict for AND_NOT in state 246 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 254 resolved as shift
WARNING: shift/reduce conflict for ADD in state 301 resolved as shift
WARNING: shift/reduce conflict for SUB in state 301 resolved as shift
WARNING: shift/reduce conflict for OR in state 301 resolved as shift
WARNING: shift/reduce conflict for XOR in state 301 resolved as shift
WARNING: shift/reduce conflict for MUL in state 301 resolved as shift
WARNING: shift/reduce conflict for QUO in state 301 resolved as shift
WARNING: shift/reduce conflict for REM in state 301 resolved as shift
WARNING: shift/reduce conflict for SHL in state 301 resolved as shift
WARNING: shift/reduce conflict for SHR in state 301 resolved as shift
WARNING: shift/reduce conflict for AND in state 301 resolved as shift
WARNING: shift/reduce conflict for AND_NOT in state 301 resolved as shift
WARNING: reduce/reduce conflict in state 141 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 141
WARNING: reduce/reduce conflict in state 209 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 209
WARNING: reduce/reduce conflict in state 241 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 241
WARNING: reduce/reduce conflict in state 241 resolved using rule (OperandName -> IDENT)
WARNING: rejected rule (empty -> <empty>) in state 241
WARNING: reduce/reduce conflict in state 255 resolved using rule (Type -> TypeName)
WARNING: rejected rule (ReceiverType -> TypeName) in state 255

Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    CHAR
    AND_NOT
    AND_NOT_ASSIGN
    ARROW
    ELLIPSIS
    SELECT
    INTERFACE
    DEFER
    GO
    CHAN
    MAP
    FALLTHROUGH

Grammar

Rule 0     S' -> start
Rule 1     start -> SourceFile
Rule 2     Type -> TypeName
Rule 3     Type -> TypeLit
Rule 4     Type -> LPAREN Type RPAREN
Rule 5     TypeName -> TypeToken
Rule 6     TypeName -> QualifiedIdent
Rule 7     TypeToken -> INT
Rule 8     TypeToken -> FLOAT
Rule 9     TypeToken -> STRING
Rule 10    TypeToken -> BOOL
Rule 11    TypeToken -> COMPLEX
Rule 12    TypeToken -> TYPE IDENT
Rule 13    TypeLit -> ArrayType
Rule 14    TypeLit -> StructType
Rule 15    TypeLit -> PointerType
Rule 16    TypeOpt -> Type
Rule 17    TypeOpt -> epsilon
Rule 18    ArrayType -> LBRACK ArrayLength RBRACK ElementType
Rule 19    ArrayLength -> Expression
Rule 20    ElementType -> Type
Rule 21    StructType -> STRUCT LBRACE FieldDeclRep RBRACE
Rule 22    FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON
Rule 23    FieldDeclRep -> epsilon
Rule 24    FieldDecl -> IdentifierList Type TagOpt
Rule 25    TagOpt -> Tag
Rule 26    TagOpt -> epsilon
Rule 27    Tag -> STRING_LITERAL
Rule 28    PointerType -> MUL BaseType
Rule 29    BaseType -> Type
Rule 30    Signature -> Parameters ResultOpt
Rule 31    ResultOpt -> Result
Rule 32    ResultOpt -> epsilon
Rule 33    Result -> Parameters
Rule 34    Result -> Type
Rule 35    Parameters -> LPAREN ParameterListOpt RPAREN
Rule 36    ParameterListOpt -> ParametersList
Rule 37    ParameterListOpt -> epsilon
Rule 38    ParametersList -> Type
Rule 39    ParametersList -> IdentifierList Type
Rule 40    ParametersList -> ParameterDeclCommaRep
Rule 41    ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl
Rule 42    ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl
Rule 43    ParameterDecl -> IdentifierList Type
Rule 44    ParameterDecl -> Type
Rule 45    Block -> LBRACE StatementList RBRACE
Rule 46    StatementList -> StatementRep
Rule 47    StatementRep -> StatementRep Statement SEMICOLON
Rule 48    StatementRep -> epsilon
Rule 49    Declaration -> ConstDecl
Rule 50    Declaration -> TypeDecl
Rule 51    Declaration -> VarDecl
Rule 52    TopLevelDecl -> Declaration
Rule 53    TopLevelDecl -> FunctionDecl
Rule 54    ConstDecl -> CONST ConstSpec
Rule 55    ConstDecl -> CONST LPAREN ConstSpecRep RPAREN
Rule 56    ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON
Rule 57    ConstSpecRep -> epsilon
Rule 58    ConstSpec -> IdentifierList TypeExprListOpt
Rule 59    TypeExprListOpt -> TypeOpt ASSIGN ExpressionList
Rule 60    TypeExprListOpt -> epsilon
Rule 61    IdentifierList -> IDENT IdentifierRep
Rule 62    IdentifierRep -> IdentifierRep COMMA IDENT
Rule 63    IdentifierRep -> epsilon
Rule 64    ExpressionList -> Expression ExpressionRep
Rule 65    ExpressionRep -> ExpressionRep COMMA Expression
Rule 66    ExpressionRep -> epsilon
Rule 67    TypeDecl -> TYPE TypeSpec
Rule 68    TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN
Rule 69    TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON
Rule 70    TypeSpecRep -> epsilon
Rule 71    TypeSpec -> AliasDecl
Rule 72    TypeSpec -> TypeDef
Rule 73    AliasDecl -> IDENT ASSIGN Type
Rule 74    TypeDef -> IDENT Type
Rule 75    VarDecl -> VAR VarSpec
Rule 76    VarDecl -> VAR LPAREN VarSpecRep RPAREN
Rule 77    VarSpecRep -> VarSpecRep VarSpec SEMICOLON
Rule 78    VarSpecRep -> epsilon
Rule 79    VarSpec -> IdentifierList Type ExpressionListOpt
Rule 80    VarSpec -> IdentifierList ASSIGN ExpressionList
Rule 81    ExpressionListOpt -> ASSIGN ExpressionList
Rule 82    ExpressionListOpt -> epsilon
Rule 83    ShortVarDecl -> IDENT DEFINE Expression
Rule 84    FunctionDecl -> FUNC FunctionName Function
Rule 85    FunctionDecl -> FUNC FunctionName Signature
Rule 86    FunctionName -> IDENT
Rule 87    Function -> Signature FunctionBody
Rule 88    FunctionBody -> Block
Rule 89    Operand -> Literal
Rule 90    Operand -> OperandName
Rule 91    Operand -> LPAREN Expression RPAREN
Rule 92    Literal -> BasicLit
Rule 93    BasicLit -> INT_LITERAL
Rule 94    BasicLit -> FLOAT_LITERAL
Rule 95    BasicLit -> STRING_LITERAL
Rule 96    BasicLit -> IMAG
Rule 97    OperandName -> IDENT
Rule 98    QualifiedIdent -> IDENT PERIOD TypeName
Rule 99    CompositeLit -> LiteralType LiteralValue
Rule 100   LiteralType -> ArrayType
Rule 101   LiteralType -> ElementType
Rule 102   LiteralType -> TypeName
Rule 103   LiteralValue -> LBRACE ElementListOpt RBRACE
Rule 104   ElementListOpt -> ElementList
Rule 105   ElementListOpt -> epsilon
Rule 106   ElementList -> KeyedElement KeyedElementCommaRep
Rule 107   KeyedElementCommaRep -> KeyedElementCommaRep COMMA KeyedElement
Rule 108   KeyedElementCommaRep -> epsilon
Rule 109   KeyedElement -> Key COLON Element
Rule 110   KeyedElement -> Element
Rule 111   Key -> FieldName
Rule 112   Key -> Expression
Rule 113   Key -> LiteralValue
Rule 114   FieldName -> IDENT
Rule 115   Element -> Expression
Rule 116   Element -> LiteralValue
Rule 117   PrimaryExpr -> Operand
Rule 118   PrimaryExpr -> PrimaryExpr Selector
Rule 119   PrimaryExpr -> PrimaryExpr Index
Rule 120   PrimaryExpr -> PrimaryExpr Slice
Rule 121   PrimaryExpr -> PrimaryExpr TypeAssertion
Rule 122   PrimaryExpr -> PrimaryExpr Arguments
Rule 123   Selector -> PERIOD IDENT
Rule 124   Index -> LBRACK Expression RBRACK
Rule 125   Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
Rule 126   Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK
Rule 127   TypeAssertion -> PERIOD LPAREN Type RPAREN
Rule 128   Arguments -> LPAREN ExpressionListTypeOpt RPAREN
Rule 129   ExpressionListTypeOpt -> ExpressionList
Rule 130   ExpressionListTypeOpt -> epsilon
Rule 131   ExpressionListCommaOpt -> COMMA ExpressionList
Rule 132   ExpressionListCommaOpt -> epsilon
Rule 133   Expression -> UnaryExpr
Rule 134   Expression -> Expression BinaryOp Expression
Rule 135   ExpressionOpt -> Expression
Rule 136   ExpressionOpt -> epsilon
Rule 137   UnaryExpr -> PrimaryExpr
Rule 138   UnaryExpr -> UnaryOp UnaryExpr
Rule 139   UnaryExpr -> NOT UnaryExpr
Rule 140   BinaryOp -> LOR
Rule 141   BinaryOp -> LAND
Rule 142   BinaryOp -> RelOp
Rule 143   BinaryOp -> AddMulOp
Rule 144   RelOp -> EQL
Rule 145   RelOp -> NEQ
Rule 146   RelOp -> LSS
Rule 147   RelOp -> GTR
Rule 148   RelOp -> LEQ
Rule 149   RelOp -> GEQ
Rule 150   AddMulOp -> UnaryOp
Rule 151   AddMulOp -> OR
Rule 152   AddMulOp -> XOR
Rule 153   AddMulOp -> QUO
Rule 154   AddMulOp -> REM
Rule 155   AddMulOp -> SHL
Rule 156   AddMulOp -> SHR
Rule 157   UnaryOp -> ADD
Rule 158   UnaryOp -> SUB
Rule 159   UnaryOp -> MUL
Rule 160   UnaryOp -> AND
Rule 161   Statement -> Declaration
Rule 162   Statement -> LabeledStmt
Rule 163   Statement -> SimpleStmt
Rule 164   Statement -> ReturnStmt
Rule 165   Statement -> BreakStmt
Rule 166   Statement -> ContinueStmt
Rule 167   Statement -> GotoStmt
Rule 168   Statement -> Block
Rule 169   Statement -> IfStmt
Rule 170   Statement -> SwitchStmt
Rule 171   Statement -> ForStmt
Rule 172   SimpleStmt -> epsilon
Rule 173   SimpleStmt -> ExpressionStmt
Rule 174   SimpleStmt -> IncDecStmt
Rule 175   SimpleStmt -> Assignment
Rule 176   SimpleStmt -> ShortVarDecl
Rule 177   LabeledStmt -> Label COLON Statement
Rule 178   Label -> IDENT
Rule 179   ExpressionStmt -> Expression
Rule 180   IncDecStmt -> Expression INC
Rule 181   IncDecStmt -> Expression DEC
Rule 182   Assignment -> ExpressionList assign_op ExpressionList
Rule 183   assign_op -> AssignOp
Rule 184   AssignOp -> ADD_ASSIGN
Rule 185   AssignOp -> SUB_ASSIGN
Rule 186   AssignOp -> MUL_ASSIGN
Rule 187   AssignOp -> QUO_ASSIGN
Rule 188   AssignOp -> REM_ASSIGN
Rule 189   AssignOp -> AND_ASSIGN
Rule 190   AssignOp -> OR_ASSIGN
Rule 191   AssignOp -> XOR_ASSIGN
Rule 192   AssignOp -> SHL_ASSIGN
Rule 193   AssignOp -> SHR_ASSIGN
Rule 194   AssignOp -> ASSIGN
Rule 195   IfStmt -> IF Expression Block ElseOpt
Rule 196   SimpleStmtOpt -> SimpleStmt SEMICOLON
Rule 197   SimpleStmtOpt -> epsilon
Rule 198   ElseOpt -> ELSE IfStmt
Rule 199   ElseOpt -> ELSE Block
Rule 200   ElseOpt -> epsilon
Rule 201   SwitchStmt -> ExprSwitchStmt
Rule 202   SwitchStmt -> TypeSwitchStmt
Rule 203   ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE
Rule 204   ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause
Rule 205   ExprCaseClauseRep -> epsilon
Rule 206   ExprCaseClause -> ExprSwitchCase COLON StatementList
Rule 207   ExprSwitchCase -> CASE ExpressionList
Rule 208   ExprSwitchCase -> DEFAULT
Rule 209   TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
Rule 210   TypeSwitchGuard -> IdentifierOpt PrimaryExpr PERIOD LPAREN TYPE RPAREN
Rule 211   IdentifierOpt -> IDENT DEFINE
Rule 212   IdentifierOpt -> epsilon
Rule 213   TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause
Rule 214   TypeCaseClauseOpt -> epsilon
Rule 215   TypeCaseClause -> TypeSwitchCase COLON StatementList
Rule 216   TypeSwitchCase -> CASE TypeList
Rule 217   TypeSwitchCase -> DEFAULT
Rule 218   TypeList -> Type TypeRep
Rule 219   TypeRep -> TypeRep COMMA Type
Rule 220   TypeRep -> epsilon
Rule 221   ForStmt -> FOR ConditionBlockOpt Block
Rule 222   ConditionBlockOpt -> epsilon
Rule 223   ConditionBlockOpt -> Condition
Rule 224   ConditionBlockOpt -> ForClause
Rule 225   ConditionBlockOpt -> RangeClause
Rule 226   Condition -> Expression
Rule 227   ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt
Rule 228   ConditionOpt -> epsilon
Rule 229   ConditionOpt -> Condition
Rule 230   RangeClause -> ExpressionIdentListOpt RANGE Expression
Rule 231   ExpressionIdentListOpt -> epsilon
Rule 232   ExpressionIdentListOpt -> ExpressionIdentifier
Rule 233   ExpressionIdentifier -> ExpressionList ASSIGN
Rule 234   ReturnStmt -> RETURN ExpressionListPureOpt
Rule 235   ExpressionListPureOpt -> ExpressionList
Rule 236   ExpressionListPureOpt -> epsilon
Rule 237   BreakStmt -> BREAK LabelOpt
Rule 238   ContinueStmt -> CONTINUE LabelOpt
Rule 239   LabelOpt -> Label
Rule 240   LabelOpt -> epsilon
Rule 241   GotoStmt -> GOTO Label
Rule 242   SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep
Rule 243   ImportDeclRep -> epsilon
Rule 244   ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON
Rule 245   TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON
Rule 246   TopLevelDeclRep -> epsilon
Rule 247   PackageClause -> PACKAGE PackageName
Rule 248   PackageName -> IDENT
Rule 249   ImportDecl -> IMPORT ImportSpec
Rule 250   ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN
Rule 251   ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON
Rule 252   ImportSpecRep -> epsilon
Rule 253   ImportSpec -> PackageNameDotOpt ImportPath
Rule 254   PackageNameDotOpt -> PERIOD
Rule 255   PackageNameDotOpt -> PackageName
Rule 256   PackageNameDotOpt -> epsilon
Rule 257   ImportPath -> STRING_LITERAL
Rule 258   epsilon -> <empty>

Terminals, with rules where they appear

ADD                  : 157
ADD_ASSIGN           : 184
AND                  : 160
AND_ASSIGN           : 189
AND_NOT              : 
AND_NOT_ASSIGN       : 
ARROW                : 
ASSIGN               : 59 73 80 81 194 233
BOOL                 : 10
BREAK                : 237
CASE                 : 207 216
CHAN                 : 
CHAR                 : 
COLON                : 109 125 126 126 177 206 215
COMMA                : 41 42 62 65 107 131 219
COMPLEX              : 11
CONST                : 54 55
CONTINUE             : 238
DEC                  : 181
DEFAULT              : 208 217
DEFER                : 
DEFINE               : 83 211
ELLIPSIS             : 
ELSE                 : 198 199
EQL                  : 144
FALLTHROUGH          : 
FLOAT                : 8
FLOAT_LITERAL        : 94
FOR                  : 221
FUNC                 : 84 85
GEQ                  : 149
GO                   : 
GOTO                 : 241
GTR                  : 147
IDENT                : 12 61 62 73 74 83 86 97 98 114 123 178 211 248
IF                   : 195
IMAG                 : 96
IMPORT               : 249 250
INC                  : 180
INT                  : 7
INTERFACE            : 
INT_LITERAL          : 93
LAND                 : 141
LBRACE               : 21 45 103 203 209
LBRACK               : 18 124 125 126
LEQ                  : 148
LOR                  : 140
LPAREN               : 4 35 55 68 76 91 127 128 210 250
LSS                  : 146
MAP                  : 
MUL                  : 28 159
MUL_ASSIGN           : 186
NEQ                  : 145
NOT                  : 139
OR                   : 151
OR_ASSIGN            : 190
PACKAGE              : 247
PERIOD               : 98 123 127 210 254
QUO                  : 153
QUO_ASSIGN           : 187
RANGE                : 230
RBRACE               : 21 45 103 203 209
RBRACK               : 18 124 125 126
REM                  : 154
REM_ASSIGN           : 188
RETURN               : 234
RPAREN               : 4 35 55 68 76 91 127 128 210 250
SELECT               : 
SEMICOLON            : 22 47 56 69 77 196 227 227 242 244 245 251
SHL                  : 155
SHL_ASSIGN           : 192
SHR                  : 156
SHR_ASSIGN           : 193
STRING               : 9
STRING_LITERAL       : 27 95 257
STRUCT               : 21
SUB                  : 158
SUB_ASSIGN           : 185
SWITCH               : 203 209
TYPE                 : 12 67 68 210
VAR                  : 75 76
XOR                  : 152
XOR_ASSIGN           : 191
error                : 

Nonterminals, with rules where they appear

AddMulOp             : 143
AliasDecl            : 71
Arguments            : 122
ArrayLength          : 18
ArrayType            : 13 100
AssignOp             : 183
Assignment           : 175
BaseType             : 28
BasicLit             : 92
BinaryOp             : 134
Block                : 88 168 195 199 221
BreakStmt            : 165
CompositeLit         : 
Condition            : 223 229
ConditionBlockOpt    : 221
ConditionOpt         : 227
ConstDecl            : 49
ConstSpec            : 54 56
ConstSpecRep         : 55 56
ContinueStmt         : 166
Declaration          : 52 161
Element              : 109 110
ElementList          : 104
ElementListOpt       : 103
ElementType          : 18 101
ElseOpt              : 195
ExprCaseClause       : 204
ExprCaseClauseRep    : 203 204
ExprSwitchCase       : 206
ExprSwitchStmt       : 201
Expression           : 19 64 65 83 91 112 115 124 126 126 134 134 135 179 180 181 195 226 230
ExpressionIdentListOpt : 230
ExpressionIdentifier : 232
ExpressionList       : 59 80 81 129 131 182 182 207 233 235
ExpressionListCommaOpt : 
ExpressionListOpt    : 79
ExpressionListPureOpt : 234
ExpressionListTypeOpt : 128
ExpressionOpt        : 125 125 126 203
ExpressionRep        : 64 65
ExpressionStmt       : 173
FieldDecl            : 22
FieldDeclRep         : 21 22
FieldName            : 111
ForClause            : 224
ForStmt              : 171
Function             : 84
FunctionBody         : 87
FunctionDecl         : 53
FunctionName         : 84 85
GotoStmt             : 167
IdentifierList       : 24 39 43 58 79 80
IdentifierOpt        : 210
IdentifierRep        : 61 62
IfStmt               : 169 198
ImportDecl           : 244
ImportDeclRep        : 242 244
ImportPath           : 253
ImportSpec           : 249 251
ImportSpecRep        : 250 251
IncDecStmt           : 174
Index                : 119
Key                  : 109
KeyedElement         : 106 107
KeyedElementCommaRep : 106 107
Label                : 177 239 241
LabelOpt             : 237 238
LabeledStmt          : 162
Literal              : 89
LiteralType          : 99
LiteralValue         : 99 113 116
Operand              : 117
OperandName          : 90
PackageClause        : 242
PackageName          : 247 255
PackageNameDotOpt    : 253
ParameterDecl        : 41 42 42
ParameterDeclCommaRep : 40 41
ParameterListOpt     : 35
Parameters           : 30 33
ParametersList       : 36
PointerType          : 15
PrimaryExpr          : 118 119 120 121 122 137 210
QualifiedIdent       : 6
RangeClause          : 225
RelOp                : 142
Result               : 31
ResultOpt            : 30
ReturnStmt           : 164
Selector             : 118
ShortVarDecl         : 176
Signature            : 85 87
SimpleStmt           : 163 196 227 227
SimpleStmtOpt        : 209
Slice                : 120
SourceFile           : 1
Statement            : 47 177
StatementList        : 45 206 215
StatementRep         : 46 47
StructType           : 14
SwitchStmt           : 170
Tag                  : 25
TagOpt               : 24
TopLevelDecl         : 245
TopLevelDeclRep      : 242 245
Type                 : 4 16 20 24 29 34 38 39 43 44 73 74 79 127 218 219
TypeAssertion        : 121
TypeCaseClause       : 213
TypeCaseClauseOpt    : 209 213
TypeDecl             : 50
TypeDef              : 72
TypeExprListOpt      : 58
TypeList             : 216
TypeLit              : 3
TypeName             : 2 98 102
TypeOpt              : 59
TypeRep              : 218 219
TypeSpec             : 67 69
TypeSpecRep          : 68 69
TypeSwitchCase       : 215
TypeSwitchGuard      : 209
TypeSwitchStmt       : 202
TypeToken            : 5
UnaryExpr            : 133 138 139
UnaryOp              : 138 150
VarDecl              : 51
VarSpec              : 75 77
VarSpecRep           : 76 77
assign_op            : 182
epsilon              : 17 23 26 32 37 48 57 60 63 66 70 78 82 105 108 130 132 136 172 197 200 205 212 214 220 222 228 231 236 240 243 246 252 256
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . SourceFile
    (242) SourceFile -> . PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep
    (247) PackageClause -> . PACKAGE PackageName

    PACKAGE         shift and go to state 4

    start                          shift and go to state 1
    SourceFile                     shift and go to state 2
    PackageClause                  shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> SourceFile .

    $end            reduce using rule 1 (start -> SourceFile .)


state 3

    (242) SourceFile -> PackageClause . SEMICOLON ImportDeclRep TopLevelDeclRep

    SEMICOLON       shift and go to state 5


state 4

    (247) PackageClause -> PACKAGE . PackageName
    (248) PackageName -> . IDENT

    IDENT           shift and go to state 7

    PackageName                    shift and go to state 6

state 5

    (242) SourceFile -> PackageClause SEMICOLON . ImportDeclRep TopLevelDeclRep
    (243) ImportDeclRep -> . epsilon
    (244) ImportDeclRep -> . ImportDeclRep ImportDecl SEMICOLON
    (258) epsilon -> .

    IMPORT          reduce using rule 258 (epsilon -> .)
    FUNC            reduce using rule 258 (epsilon -> .)
    CONST           reduce using rule 258 (epsilon -> .)
    TYPE            reduce using rule 258 (epsilon -> .)
    VAR             reduce using rule 258 (epsilon -> .)
    $end            reduce using rule 258 (epsilon -> .)

    ImportDeclRep                  shift and go to state 8
    epsilon                        shift and go to state 9

state 6

    (247) PackageClause -> PACKAGE PackageName .

    SEMICOLON       reduce using rule 247 (PackageClause -> PACKAGE PackageName .)


state 7

    (248) PackageName -> IDENT .

    SEMICOLON       reduce using rule 248 (PackageName -> IDENT .)
    STRING_LITERAL  reduce using rule 248 (PackageName -> IDENT .)


state 8

    (242) SourceFile -> PackageClause SEMICOLON ImportDeclRep . TopLevelDeclRep
    (244) ImportDeclRep -> ImportDeclRep . ImportDecl SEMICOLON
    (245) TopLevelDeclRep -> . TopLevelDeclRep TopLevelDecl SEMICOLON
    (246) TopLevelDeclRep -> . epsilon
    (249) ImportDecl -> . IMPORT ImportSpec
    (250) ImportDecl -> . IMPORT LPAREN ImportSpecRep RPAREN
    (258) epsilon -> .

    IMPORT          shift and go to state 13
    FUNC            reduce using rule 258 (epsilon -> .)
    CONST           reduce using rule 258 (epsilon -> .)
    TYPE            reduce using rule 258 (epsilon -> .)
    VAR             reduce using rule 258 (epsilon -> .)
    $end            reduce using rule 258 (epsilon -> .)

    TopLevelDeclRep                shift and go to state 10
    ImportDecl                     shift and go to state 11
    epsilon                        shift and go to state 12

state 9

    (243) ImportDeclRep -> epsilon .

    IMPORT          reduce using rule 243 (ImportDeclRep -> epsilon .)
    FUNC            reduce using rule 243 (ImportDeclRep -> epsilon .)
    CONST           reduce using rule 243 (ImportDeclRep -> epsilon .)
    TYPE            reduce using rule 243 (ImportDeclRep -> epsilon .)
    VAR             reduce using rule 243 (ImportDeclRep -> epsilon .)
    $end            reduce using rule 243 (ImportDeclRep -> epsilon .)


state 10

    (242) SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep .
    (245) TopLevelDeclRep -> TopLevelDeclRep . TopLevelDecl SEMICOLON
    (52) TopLevelDecl -> . Declaration
    (53) TopLevelDecl -> . FunctionDecl
    (49) Declaration -> . ConstDecl
    (50) Declaration -> . TypeDecl
    (51) Declaration -> . VarDecl
    (84) FunctionDecl -> . FUNC FunctionName Function
    (85) FunctionDecl -> . FUNC FunctionName Signature
    (54) ConstDecl -> . CONST ConstSpec
    (55) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (67) TypeDecl -> . TYPE TypeSpec
    (68) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (75) VarDecl -> . VAR VarSpec
    (76) VarDecl -> . VAR LPAREN VarSpecRep RPAREN

    $end            reduce using rule 242 (SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep .)
    FUNC            shift and go to state 20
    CONST           shift and go to state 21
    TYPE            shift and go to state 22
    VAR             shift and go to state 23

    TopLevelDecl                   shift and go to state 14
    Declaration                    shift and go to state 15
    FunctionDecl                   shift and go to state 16
    ConstDecl                      shift and go to state 17
    TypeDecl                       shift and go to state 18
    VarDecl                        shift and go to state 19

state 11

    (244) ImportDeclRep -> ImportDeclRep ImportDecl . SEMICOLON

    SEMICOLON       shift and go to state 24


state 12

    (246) TopLevelDeclRep -> epsilon .

    FUNC            reduce using rule 246 (TopLevelDeclRep -> epsilon .)
    CONST           reduce using rule 246 (TopLevelDeclRep -> epsilon .)
    TYPE            reduce using rule 246 (TopLevelDeclRep -> epsilon .)
    VAR             reduce using rule 246 (TopLevelDeclRep -> epsilon .)
    $end            reduce using rule 246 (TopLevelDeclRep -> epsilon .)


state 13

    (249) ImportDecl -> IMPORT . ImportSpec
    (250) ImportDecl -> IMPORT . LPAREN ImportSpecRep RPAREN
    (253) ImportSpec -> . PackageNameDotOpt ImportPath
    (254) PackageNameDotOpt -> . PERIOD
    (255) PackageNameDotOpt -> . PackageName
    (256) PackageNameDotOpt -> . epsilon
    (248) PackageName -> . IDENT
    (258) epsilon -> .

    LPAREN          shift and go to state 26
    PERIOD          shift and go to state 28
    IDENT           shift and go to state 7
    STRING_LITERAL  reduce using rule 258 (epsilon -> .)

    ImportSpec                     shift and go to state 25
    PackageNameDotOpt              shift and go to state 27
    PackageName                    shift and go to state 29
    epsilon                        shift and go to state 30

state 14

    (245) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl . SEMICOLON

    SEMICOLON       shift and go to state 31


state 15

    (52) TopLevelDecl -> Declaration .

    SEMICOLON       reduce using rule 52 (TopLevelDecl -> Declaration .)


state 16

    (53) TopLevelDecl -> FunctionDecl .

    SEMICOLON       reduce using rule 53 (TopLevelDecl -> FunctionDecl .)


state 17

    (49) Declaration -> ConstDecl .

    SEMICOLON       reduce using rule 49 (Declaration -> ConstDecl .)


state 18

    (50) Declaration -> TypeDecl .

    SEMICOLON       reduce using rule 50 (Declaration -> TypeDecl .)


state 19

    (51) Declaration -> VarDecl .

    SEMICOLON       reduce using rule 51 (Declaration -> VarDecl .)


state 20

    (84) FunctionDecl -> FUNC . FunctionName Function
    (85) FunctionDecl -> FUNC . FunctionName Signature
    (86) FunctionName -> . IDENT

    IDENT           shift and go to state 33

    FunctionName                   shift and go to state 32

state 21

    (54) ConstDecl -> CONST . ConstSpec
    (55) ConstDecl -> CONST . LPAREN ConstSpecRep RPAREN
    (58) ConstSpec -> . IdentifierList TypeExprListOpt
    (61) IdentifierList -> . IDENT IdentifierRep

    LPAREN          shift and go to state 35
    IDENT           shift and go to state 37

    ConstSpec                      shift and go to state 34
    IdentifierList                 shift and go to state 36

state 22

    (67) TypeDecl -> TYPE . TypeSpec
    (68) TypeDecl -> TYPE . LPAREN TypeSpecRep RPAREN
    (71) TypeSpec -> . AliasDecl
    (72) TypeSpec -> . TypeDef
    (73) AliasDecl -> . IDENT ASSIGN Type
    (74) TypeDef -> . IDENT Type

    LPAREN          shift and go to state 39
    IDENT           shift and go to state 42

    TypeSpec                       shift and go to state 38
    AliasDecl                      shift and go to state 40
    TypeDef                        shift and go to state 41

state 23

    (75) VarDecl -> VAR . VarSpec
    (76) VarDecl -> VAR . LPAREN VarSpecRep RPAREN
    (79) VarSpec -> . IdentifierList Type ExpressionListOpt
    (80) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (61) IdentifierList -> . IDENT IdentifierRep

    LPAREN          shift and go to state 44
    IDENT           shift and go to state 37

    VarSpec                        shift and go to state 43
    IdentifierList                 shift and go to state 45

state 24

    (244) ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .

    IMPORT          reduce using rule 244 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    FUNC            reduce using rule 244 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    CONST           reduce using rule 244 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    TYPE            reduce using rule 244 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    VAR             reduce using rule 244 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    $end            reduce using rule 244 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)


state 25

    (249) ImportDecl -> IMPORT ImportSpec .

    SEMICOLON       reduce using rule 249 (ImportDecl -> IMPORT ImportSpec .)


state 26

    (250) ImportDecl -> IMPORT LPAREN . ImportSpecRep RPAREN
    (251) ImportSpecRep -> . ImportSpecRep ImportSpec SEMICOLON
    (252) ImportSpecRep -> . epsilon
    (258) epsilon -> .

    RPAREN          reduce using rule 258 (epsilon -> .)
    PERIOD          reduce using rule 258 (epsilon -> .)
    IDENT           reduce using rule 258 (epsilon -> .)
    STRING_LITERAL  reduce using rule 258 (epsilon -> .)

    ImportSpecRep                  shift and go to state 46
    epsilon                        shift and go to state 47

state 27

    (253) ImportSpec -> PackageNameDotOpt . ImportPath
    (257) ImportPath -> . STRING_LITERAL

    STRING_LITERAL  shift and go to state 49

    ImportPath                     shift and go to state 48

state 28

    (254) PackageNameDotOpt -> PERIOD .

    STRING_LITERAL  reduce using rule 254 (PackageNameDotOpt -> PERIOD .)


state 29

    (255) PackageNameDotOpt -> PackageName .

    STRING_LITERAL  reduce using rule 255 (PackageNameDotOpt -> PackageName .)


state 30

    (256) PackageNameDotOpt -> epsilon .

    STRING_LITERAL  reduce using rule 256 (PackageNameDotOpt -> epsilon .)


state 31

    (245) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .

    FUNC            reduce using rule 245 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    CONST           reduce using rule 245 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    TYPE            reduce using rule 245 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    VAR             reduce using rule 245 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    $end            reduce using rule 245 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)


state 32

    (84) FunctionDecl -> FUNC FunctionName . Function
    (85) FunctionDecl -> FUNC FunctionName . Signature
    (87) Function -> . Signature FunctionBody
    (30) Signature -> . Parameters ResultOpt
    (35) Parameters -> . LPAREN ParameterListOpt RPAREN

    LPAREN          shift and go to state 53

    Function                       shift and go to state 50
    Signature                      shift and go to state 51
    Parameters                     shift and go to state 52

state 33

    (86) FunctionName -> IDENT .

    LPAREN          reduce using rule 86 (FunctionName -> IDENT .)


state 34

    (54) ConstDecl -> CONST ConstSpec .

    SEMICOLON       reduce using rule 54 (ConstDecl -> CONST ConstSpec .)


state 35

    (55) ConstDecl -> CONST LPAREN . ConstSpecRep RPAREN
    (56) ConstSpecRep -> . ConstSpecRep ConstSpec SEMICOLON
    (57) ConstSpecRep -> . epsilon
    (258) epsilon -> .

    RPAREN          reduce using rule 258 (epsilon -> .)
    IDENT           reduce using rule 258 (epsilon -> .)

    ConstSpecRep                   shift and go to state 54
    epsilon                        shift and go to state 55

state 36

    (58) ConstSpec -> IdentifierList . TypeExprListOpt
    (59) TypeExprListOpt -> . TypeOpt ASSIGN ExpressionList
    (60) TypeExprListOpt -> . epsilon
    (16) TypeOpt -> . Type
    (17) TypeOpt -> . epsilon
    (258) epsilon -> .
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . STRING
    (10) TypeToken -> . BOOL
    (11) TypeToken -> . COMPLEX
    (12) TypeToken -> . TYPE IDENT
    (98) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    SEMICOLON       reduce using rule 258 (epsilon -> .)
    ASSIGN          reduce using rule 258 (epsilon -> .)
    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71
    COMPLEX         shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    TypeExprListOpt                shift and go to state 56
    TypeOpt                        shift and go to state 57
    epsilon                        shift and go to state 58
    Type                           shift and go to state 59
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 37

    (61) IdentifierList -> IDENT . IdentifierRep
    (62) IdentifierRep -> . IdentifierRep COMMA IDENT
    (63) IdentifierRep -> . epsilon
    (258) epsilon -> .

    COMMA           reduce using rule 258 (epsilon -> .)
    LPAREN          reduce using rule 258 (epsilon -> .)
    INT             reduce using rule 258 (epsilon -> .)
    FLOAT           reduce using rule 258 (epsilon -> .)
    STRING          reduce using rule 258 (epsilon -> .)
    BOOL            reduce using rule 258 (epsilon -> .)
    COMPLEX         reduce using rule 258 (epsilon -> .)
    TYPE            reduce using rule 258 (epsilon -> .)
    IDENT           reduce using rule 258 (epsilon -> .)
    LBRACK          reduce using rule 258 (epsilon -> .)
    STRUCT          reduce using rule 258 (epsilon -> .)
    MUL             reduce using rule 258 (epsilon -> .)
    ASSIGN          reduce using rule 258 (epsilon -> .)
    SEMICOLON       reduce using rule 258 (epsilon -> .)

    IdentifierRep                  shift and go to state 78
    epsilon                        shift and go to state 79

state 38

    (67) TypeDecl -> TYPE TypeSpec .

    SEMICOLON       reduce using rule 67 (TypeDecl -> TYPE TypeSpec .)


state 39

    (68) TypeDecl -> TYPE LPAREN . TypeSpecRep RPAREN
    (69) TypeSpecRep -> . TypeSpecRep TypeSpec SEMICOLON
    (70) TypeSpecRep -> . epsilon
    (258) epsilon -> .

    RPAREN          reduce using rule 258 (epsilon -> .)
    IDENT           reduce using rule 258 (epsilon -> .)

    TypeSpecRep                    shift and go to state 80
    epsilon                        shift and go to state 81

state 40

    (71) TypeSpec -> AliasDecl .

    SEMICOLON       reduce using rule 71 (TypeSpec -> AliasDecl .)


state 41

    (72) TypeSpec -> TypeDef .

    SEMICOLON       reduce using rule 72 (TypeSpec -> TypeDef .)


state 42

    (73) AliasDecl -> IDENT . ASSIGN Type
    (74) TypeDef -> IDENT . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . STRING
    (10) TypeToken -> . BOOL
    (11) TypeToken -> . COMPLEX
    (12) TypeToken -> . TYPE IDENT
    (98) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    ASSIGN          shift and go to state 82
    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71
    COMPLEX         shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Type                           shift and go to state 83
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 43

    (75) VarDecl -> VAR VarSpec .

    SEMICOLON       reduce using rule 75 (VarDecl -> VAR VarSpec .)


state 44

    (76) VarDecl -> VAR LPAREN . VarSpecRep RPAREN
    (77) VarSpecRep -> . VarSpecRep VarSpec SEMICOLON
    (78) VarSpecRep -> . epsilon
    (258) epsilon -> .

    RPAREN          reduce using rule 258 (epsilon -> .)
    IDENT           reduce using rule 258 (epsilon -> .)

    VarSpecRep                     shift and go to state 84
    epsilon                        shift and go to state 85

state 45

    (79) VarSpec -> IdentifierList . Type ExpressionListOpt
    (80) VarSpec -> IdentifierList . ASSIGN ExpressionList
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . STRING
    (10) TypeToken -> . BOOL
    (11) TypeToken -> . COMPLEX
    (12) TypeToken -> . TYPE IDENT
    (98) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    ASSIGN          shift and go to state 87
    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71
    COMPLEX         shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Type                           shift and go to state 86
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 46

    (250) ImportDecl -> IMPORT LPAREN ImportSpecRep . RPAREN
    (251) ImportSpecRep -> ImportSpecRep . ImportSpec SEMICOLON
    (253) ImportSpec -> . PackageNameDotOpt ImportPath
    (254) PackageNameDotOpt -> . PERIOD
    (255) PackageNameDotOpt -> . PackageName
    (256) PackageNameDotOpt -> . epsilon
    (248) PackageName -> . IDENT
    (258) epsilon -> .

    RPAREN          shift and go to state 88
    PERIOD          shift and go to state 28
    IDENT           shift and go to state 7
    STRING_LITERAL  reduce using rule 258 (epsilon -> .)

    ImportSpec                     shift and go to state 89
    PackageNameDotOpt              shift and go to state 27
    PackageName                    shift and go to state 29
    epsilon                        shift and go to state 30

state 47

    (252) ImportSpecRep -> epsilon .

    RPAREN          reduce using rule 252 (ImportSpecRep -> epsilon .)
    PERIOD          reduce using rule 252 (ImportSpecRep -> epsilon .)
    IDENT           reduce using rule 252 (ImportSpecRep -> epsilon .)
    STRING_LITERAL  reduce using rule 252 (ImportSpecRep -> epsilon .)


state 48

    (253) ImportSpec -> PackageNameDotOpt ImportPath .

    SEMICOLON       reduce using rule 253 (ImportSpec -> PackageNameDotOpt ImportPath .)


state 49

    (257) ImportPath -> STRING_LITERAL .

    SEMICOLON       reduce using rule 257 (ImportPath -> STRING_LITERAL .)


state 50

    (84) FunctionDecl -> FUNC FunctionName Function .

    SEMICOLON       reduce using rule 84 (FunctionDecl -> FUNC FunctionName Function .)


state 51

    (85) FunctionDecl -> FUNC FunctionName Signature .
    (87) Function -> Signature . FunctionBody
    (88) FunctionBody -> . Block
    (45) Block -> . LBRACE StatementList RBRACE

    SEMICOLON       reduce using rule 85 (FunctionDecl -> FUNC FunctionName Signature .)
    LBRACE          shift and go to state 92

    FunctionBody                   shift and go to state 90
    Block                          shift and go to state 91

state 52

    (30) Signature -> Parameters . ResultOpt
    (31) ResultOpt -> . Result
    (32) ResultOpt -> . epsilon
    (33) Result -> . Parameters
    (34) Result -> . Type
    (258) epsilon -> .
    (35) Parameters -> . LPAREN ParameterListOpt RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . STRING
    (10) TypeToken -> . BOOL
    (11) TypeToken -> . COMPLEX
    (12) TypeToken -> . TYPE IDENT
    (98) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LBRACE          reduce using rule 258 (epsilon -> .)
    SEMICOLON       reduce using rule 258 (epsilon -> .)
    LPAREN          shift and go to state 98
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71
    COMPLEX         shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Parameters                     shift and go to state 93
    ResultOpt                      shift and go to state 94
    Result                         shift and go to state 95
    epsilon                        shift and go to state 96
    Type                           shift and go to state 97
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 53

    (35) Parameters -> LPAREN . ParameterListOpt RPAREN
    (36) ParameterListOpt -> . ParametersList
    (37) ParameterListOpt -> . epsilon
    (38) ParametersList -> . Type
    (39) ParametersList -> . IdentifierList Type
    (40) ParametersList -> . ParameterDeclCommaRep
    (258) epsilon -> .
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (61) IdentifierList -> . IDENT IdentifierRep
    (41) ParameterDeclCommaRep -> . ParameterDeclCommaRep COMMA ParameterDecl
    (42) ParameterDeclCommaRep -> . ParameterDecl COMMA ParameterDecl
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (43) ParameterDecl -> . IdentifierList Type
    (44) ParameterDecl -> . Type
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . STRING
    (10) TypeToken -> . BOOL
    (11) TypeToken -> . COMPLEX
    (12) TypeToken -> . TYPE IDENT
    (98) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    RPAREN          reduce using rule 258 (epsilon -> .)
    LPAREN          shift and go to state 62
    IDENT           shift and go to state 105
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71
    COMPLEX         shift and go to state 72
    TYPE            shift and go to state 73
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    ParameterListOpt               shift and go to state 99
    ParametersList                 shift and go to state 100
    epsilon                        shift and go to state 101
    Type                           shift and go to state 102
    IdentifierList                 shift and go to state 103
    ParameterDeclCommaRep          shift and go to state 104
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    ParameterDecl                  shift and go to state 106
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 54

    (55) ConstDecl -> CONST LPAREN ConstSpecRep . RPAREN
    (56) ConstSpecRep -> ConstSpecRep . ConstSpec SEMICOLON
    (58) ConstSpec -> . IdentifierList TypeExprListOpt
    (61) IdentifierList -> . IDENT IdentifierRep

    RPAREN          shift and go to state 107
    IDENT           shift and go to state 37

    ConstSpec                      shift and go to state 108
    IdentifierList                 shift and go to state 36

state 55

    (57) ConstSpecRep -> epsilon .

    RPAREN          reduce using rule 57 (ConstSpecRep -> epsilon .)
    IDENT           reduce using rule 57 (ConstSpecRep -> epsilon .)


state 56

    (58) ConstSpec -> IdentifierList TypeExprListOpt .

    SEMICOLON       reduce using rule 58 (ConstSpec -> IdentifierList TypeExprListOpt .)


state 57

    (59) TypeExprListOpt -> TypeOpt . ASSIGN ExpressionList

    ASSIGN          shift and go to state 109


state 58

    (60) TypeExprListOpt -> epsilon .
    (17) TypeOpt -> epsilon .

    SEMICOLON       reduce using rule 60 (TypeExprListOpt -> epsilon .)
    ASSIGN          reduce using rule 17 (TypeOpt -> epsilon .)


state 59

    (16) TypeOpt -> Type .

    ASSIGN          reduce using rule 16 (TypeOpt -> Type .)


state 60

    (2) Type -> TypeName .

    ASSIGN          reduce using rule 2 (Type -> TypeName .)
    SEMICOLON       reduce using rule 2 (Type -> TypeName .)
    LBRACE          reduce using rule 2 (Type -> TypeName .)
    RPAREN          reduce using rule 2 (Type -> TypeName .)
    COMMA           reduce using rule 2 (Type -> TypeName .)
    STRING_LITERAL  reduce using rule 2 (Type -> TypeName .)
    COLON           reduce using rule 2 (Type -> TypeName .)


state 61

    (3) Type -> TypeLit .

    ASSIGN          reduce using rule 3 (Type -> TypeLit .)
    SEMICOLON       reduce using rule 3 (Type -> TypeLit .)
    LBRACE          reduce using rule 3 (Type -> TypeLit .)
    RPAREN          reduce using rule 3 (Type -> TypeLit .)
    COMMA           reduce using rule 3 (Type -> TypeLit .)
    STRING_LITERAL  reduce using rule 3 (Type -> TypeLit .)
    COLON           reduce using rule 3 (Type -> TypeLit .)


state 62

    (4) Type -> LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . STRING
    (10) TypeToken -> . BOOL
    (11) TypeToken -> . COMPLEX
    (12) TypeToken -> . TYPE IDENT
    (98) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71
    COMPLEX         shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Type                           shift and go to state 110
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 63

    (5) TypeName -> TypeToken .

    ASSIGN          reduce using rule 5 (TypeName -> TypeToken .)
    SEMICOLON       reduce using rule 5 (TypeName -> TypeToken .)
    LBRACE          reduce using rule 5 (TypeName -> TypeToken .)
    RPAREN          reduce using rule 5 (TypeName -> TypeToken .)
    COMMA           reduce using rule 5 (TypeName -> TypeToken .)
    STRING_LITERAL  reduce using rule 5 (TypeName -> TypeToken .)
    COLON           reduce using rule 5 (TypeName -> TypeToken .)


state 64

    (6) TypeName -> QualifiedIdent .

    ASSIGN          reduce using rule 6 (TypeName -> QualifiedIdent .)
    SEMICOLON       reduce using rule 6 (TypeName -> QualifiedIdent .)
    LBRACE          reduce using rule 6 (TypeName -> QualifiedIdent .)
    RPAREN          reduce using rule 6 (TypeName -> QualifiedIdent .)
    COMMA           reduce using rule 6 (TypeName -> QualifiedIdent .)
    STRING_LITERAL  reduce using rule 6 (TypeName -> QualifiedIdent .)
    COLON           reduce using rule 6 (TypeName -> QualifiedIdent .)


state 65

    (13) TypeLit -> ArrayType .

    ASSIGN          reduce using rule 13 (TypeLit -> ArrayType .)
    SEMICOLON       reduce using rule 13 (TypeLit -> ArrayType .)
    LBRACE          reduce using rule 13 (TypeLit -> ArrayType .)
    RPAREN          reduce using rule 13 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 13 (TypeLit -> ArrayType .)
    STRING_LITERAL  reduce using rule 13 (TypeLit -> ArrayType .)
    COLON           reduce using rule 13 (TypeLit -> ArrayType .)


state 66

    (14) TypeLit -> StructType .

    ASSIGN          reduce using rule 14 (TypeLit -> StructType .)
    SEMICOLON       reduce using rule 14 (TypeLit -> StructType .)
    LBRACE          reduce using rule 14 (TypeLit -> StructType .)
    RPAREN          reduce using rule 14 (TypeLit -> StructType .)
    COMMA           reduce using rule 14 (TypeLit -> StructType .)
    STRING_LITERAL  reduce using rule 14 (TypeLit -> StructType .)
    COLON           reduce using rule 14 (TypeLit -> StructType .)


state 67

    (15) TypeLit -> PointerType .

    ASSIGN          reduce using rule 15 (TypeLit -> PointerType .)
    SEMICOLON       reduce using rule 15 (TypeLit -> PointerType .)
    LBRACE          reduce using rule 15 (TypeLit -> PointerType .)
    RPAREN          reduce using rule 15 (TypeLit -> PointerType .)
    COMMA           reduce using rule 15 (TypeLit -> PointerType .)
    STRING_LITERAL  reduce using rule 15 (TypeLit -> PointerType .)
    COLON           reduce using rule 15 (TypeLit -> PointerType .)


state 68

    (7) TypeToken -> INT .

    ASSIGN          reduce using rule 7 (TypeToken -> INT .)
    SEMICOLON       reduce using rule 7 (TypeToken -> INT .)
    LBRACE          reduce using rule 7 (TypeToken -> INT .)
    RPAREN          reduce using rule 7 (TypeToken -> INT .)
    COMMA           reduce using rule 7 (TypeToken -> INT .)
    STRING_LITERAL  reduce using rule 7 (TypeToken -> INT .)
    COLON           reduce using rule 7 (TypeToken -> INT .)


state 69

    (8) TypeToken -> FLOAT .

    ASSIGN          reduce using rule 8 (TypeToken -> FLOAT .)
    SEMICOLON       reduce using rule 8 (TypeToken -> FLOAT .)
    LBRACE          reduce using rule 8 (TypeToken -> FLOAT .)
    RPAREN          reduce using rule 8 (TypeToken -> FLOAT .)
    COMMA           reduce using rule 8 (TypeToken -> FLOAT .)
    STRING_LITERAL  reduce using rule 8 (TypeToken -> FLOAT .)
    COLON           reduce using rule 8 (TypeToken -> FLOAT .)


state 70

    (9) TypeToken -> STRING .

    ASSIGN          reduce using rule 9 (TypeToken -> STRING .)
    SEMICOLON       reduce using rule 9 (TypeToken -> STRING .)
    LBRACE          reduce using rule 9 (TypeToken -> STRING .)
    RPAREN          reduce using rule 9 (TypeToken -> STRING .)
    COMMA           reduce using rule 9 (TypeToken -> STRING .)
    STRING_LITERAL  reduce using rule 9 (TypeToken -> STRING .)
    COLON           reduce using rule 9 (TypeToken -> STRING .)


state 71

    (10) TypeToken -> BOOL .

    ASSIGN          reduce using rule 10 (TypeToken -> BOOL .)
    SEMICOLON       reduce using rule 10 (TypeToken -> BOOL .)
    LBRACE          reduce using rule 10 (TypeToken -> BOOL .)
    RPAREN          reduce using rule 10 (TypeToken -> BOOL .)
    COMMA           reduce using rule 10 (TypeToken -> BOOL .)
    STRING_LITERAL  reduce using rule 10 (TypeToken -> BOOL .)
    COLON           reduce using rule 10 (TypeToken -> BOOL .)


state 72

    (11) TypeToken -> COMPLEX .

    ASSIGN          reduce using rule 11 (TypeToken -> COMPLEX .)
    SEMICOLON       reduce using rule 11 (TypeToken -> COMPLEX .)
    LBRACE          reduce using rule 11 (TypeToken -> COMPLEX .)
    RPAREN          reduce using rule 11 (TypeToken -> COMPLEX .)
    COMMA           reduce using rule 11 (TypeToken -> COMPLEX .)
    STRING_LITERAL  reduce using rule 11 (TypeToken -> COMPLEX .)
    COLON           reduce using rule 11 (TypeToken -> COMPLEX .)


state 73

    (12) TypeToken -> TYPE . IDENT

    IDENT           shift and go to state 111


state 74

    (98) QualifiedIdent -> IDENT . PERIOD TypeName

    PERIOD          shift and go to state 112


state 75

    (18) ArrayType -> LBRACK . ArrayLength RBRACK ElementType
    (19) ArrayLength -> . Expression
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    ArrayLength                    shift and go to state 113
    Expression                     shift and go to state 114
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 76

    (21) StructType -> STRUCT . LBRACE FieldDeclRep RBRACE

    LBRACE          shift and go to state 133


state 77

    (28) PointerType -> MUL . BaseType
    (29) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . STRING
    (10) TypeToken -> . BOOL
    (11) TypeToken -> . COMPLEX
    (12) TypeToken -> . TYPE IDENT
    (98) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71
    COMPLEX         shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    BaseType                       shift and go to state 134
    Type                           shift and go to state 135
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 78

    (61) IdentifierList -> IDENT IdentifierRep .
    (62) IdentifierRep -> IdentifierRep . COMMA IDENT

    LPAREN          reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    INT             reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    FLOAT           reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    STRING          reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    BOOL            reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    COMPLEX         reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    TYPE            reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    IDENT           reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    LBRACK          reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    STRUCT          reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    MUL             reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    ASSIGN          reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    SEMICOLON       reduce using rule 61 (IdentifierList -> IDENT IdentifierRep .)
    COMMA           shift and go to state 136


state 79

    (63) IdentifierRep -> epsilon .

    COMMA           reduce using rule 63 (IdentifierRep -> epsilon .)
    LPAREN          reduce using rule 63 (IdentifierRep -> epsilon .)
    INT             reduce using rule 63 (IdentifierRep -> epsilon .)
    FLOAT           reduce using rule 63 (IdentifierRep -> epsilon .)
    STRING          reduce using rule 63 (IdentifierRep -> epsilon .)
    BOOL            reduce using rule 63 (IdentifierRep -> epsilon .)
    COMPLEX         reduce using rule 63 (IdentifierRep -> epsilon .)
    TYPE            reduce using rule 63 (IdentifierRep -> epsilon .)
    IDENT           reduce using rule 63 (IdentifierRep -> epsilon .)
    LBRACK          reduce using rule 63 (IdentifierRep -> epsilon .)
    STRUCT          reduce using rule 63 (IdentifierRep -> epsilon .)
    MUL             reduce using rule 63 (IdentifierRep -> epsilon .)
    ASSIGN          reduce using rule 63 (IdentifierRep -> epsilon .)
    SEMICOLON       reduce using rule 63 (IdentifierRep -> epsilon .)


state 80

    (68) TypeDecl -> TYPE LPAREN TypeSpecRep . RPAREN
    (69) TypeSpecRep -> TypeSpecRep . TypeSpec SEMICOLON
    (71) TypeSpec -> . AliasDecl
    (72) TypeSpec -> . TypeDef
    (73) AliasDecl -> . IDENT ASSIGN Type
    (74) TypeDef -> . IDENT Type

    RPAREN          shift and go to state 137
    IDENT           shift and go to state 42

    TypeSpec                       shift and go to state 138
    AliasDecl                      shift and go to state 40
    TypeDef                        shift and go to state 41

state 81

    (70) TypeSpecRep -> epsilon .

    RPAREN          reduce using rule 70 (TypeSpecRep -> epsilon .)
    IDENT           reduce using rule 70 (TypeSpecRep -> epsilon .)


state 82

    (73) AliasDecl -> IDENT ASSIGN . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . STRING
    (10) TypeToken -> . BOOL
    (11) TypeToken -> . COMPLEX
    (12) TypeToken -> . TYPE IDENT
    (98) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71
    COMPLEX         shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Type                           shift and go to state 139
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 83

    (74) TypeDef -> IDENT Type .

    SEMICOLON       reduce using rule 74 (TypeDef -> IDENT Type .)


state 84

    (76) VarDecl -> VAR LPAREN VarSpecRep . RPAREN
    (77) VarSpecRep -> VarSpecRep . VarSpec SEMICOLON
    (79) VarSpec -> . IdentifierList Type ExpressionListOpt
    (80) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (61) IdentifierList -> . IDENT IdentifierRep

    RPAREN          shift and go to state 140
    IDENT           shift and go to state 37

    VarSpec                        shift and go to state 141
    IdentifierList                 shift and go to state 45

state 85

    (78) VarSpecRep -> epsilon .

    RPAREN          reduce using rule 78 (VarSpecRep -> epsilon .)
    IDENT           reduce using rule 78 (VarSpecRep -> epsilon .)


state 86

    (79) VarSpec -> IdentifierList Type . ExpressionListOpt
    (81) ExpressionListOpt -> . ASSIGN ExpressionList
    (82) ExpressionListOpt -> . epsilon
    (258) epsilon -> .

    ASSIGN          shift and go to state 143
    SEMICOLON       reduce using rule 258 (epsilon -> .)

    ExpressionListOpt              shift and go to state 142
    epsilon                        shift and go to state 144

state 87

    (80) VarSpec -> IdentifierList ASSIGN . ExpressionList
    (64) ExpressionList -> . Expression ExpressionRep
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    ExpressionList                 shift and go to state 145
    Expression                     shift and go to state 146
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 88

    (250) ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .

    SEMICOLON       reduce using rule 250 (ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .)


state 89

    (251) ImportSpecRep -> ImportSpecRep ImportSpec . SEMICOLON

    SEMICOLON       shift and go to state 147


state 90

    (87) Function -> Signature FunctionBody .

    SEMICOLON       reduce using rule 87 (Function -> Signature FunctionBody .)


state 91

    (88) FunctionBody -> Block .

    SEMICOLON       reduce using rule 88 (FunctionBody -> Block .)


state 92

    (45) Block -> LBRACE . StatementList RBRACE
    (46) StatementList -> . StatementRep
    (47) StatementRep -> . StatementRep Statement SEMICOLON
    (48) StatementRep -> . epsilon
    (258) epsilon -> .

    RETURN          reduce using rule 258 (epsilon -> .)
    BREAK           reduce using rule 258 (epsilon -> .)
    CONTINUE        reduce using rule 258 (epsilon -> .)
    GOTO            reduce using rule 258 (epsilon -> .)
    LBRACE          reduce using rule 258 (epsilon -> .)
    IF              reduce using rule 258 (epsilon -> .)
    FOR             reduce using rule 258 (epsilon -> .)
    CONST           reduce using rule 258 (epsilon -> .)
    TYPE            reduce using rule 258 (epsilon -> .)
    VAR             reduce using rule 258 (epsilon -> .)
    IDENT           reduce using rule 258 (epsilon -> .)
    SWITCH          reduce using rule 258 (epsilon -> .)
    NOT             reduce using rule 258 (epsilon -> .)
    ADD             reduce using rule 258 (epsilon -> .)
    SUB             reduce using rule 258 (epsilon -> .)
    MUL             reduce using rule 258 (epsilon -> .)
    AND             reduce using rule 258 (epsilon -> .)
    LPAREN          reduce using rule 258 (epsilon -> .)
    INT_LITERAL     reduce using rule 258 (epsilon -> .)
    FLOAT_LITERAL   reduce using rule 258 (epsilon -> .)
    STRING_LITERAL  reduce using rule 258 (epsilon -> .)
    IMAG            reduce using rule 258 (epsilon -> .)
    SEMICOLON       reduce using rule 258 (epsilon -> .)
    RBRACE          reduce using rule 258 (epsilon -> .)

    StatementList                  shift and go to state 148
    StatementRep                   shift and go to state 149
    epsilon                        shift and go to state 150

state 93

    (33) Result -> Parameters .

    LBRACE          reduce using rule 33 (Result -> Parameters .)
    SEMICOLON       reduce using rule 33 (Result -> Parameters .)


state 94

    (30) Signature -> Parameters ResultOpt .

    LBRACE          reduce using rule 30 (Signature -> Parameters ResultOpt .)
    SEMICOLON       reduce using rule 30 (Signature -> Parameters ResultOpt .)


state 95

    (31) ResultOpt -> Result .

    LBRACE          reduce using rule 31 (ResultOpt -> Result .)
    SEMICOLON       reduce using rule 31 (ResultOpt -> Result .)


state 96

    (32) ResultOpt -> epsilon .

    LBRACE          reduce using rule 32 (ResultOpt -> epsilon .)
    SEMICOLON       reduce using rule 32 (ResultOpt -> epsilon .)


state 97

    (34) Result -> Type .

    LBRACE          reduce using rule 34 (Result -> Type .)
    SEMICOLON       reduce using rule 34 (Result -> Type .)


state 98

    (35) Parameters -> LPAREN . ParameterListOpt RPAREN
    (4) Type -> LPAREN . Type RPAREN
    (36) ParameterListOpt -> . ParametersList
    (37) ParameterListOpt -> . epsilon
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (38) ParametersList -> . Type
    (39) ParametersList -> . IdentifierList Type
    (40) ParametersList -> . ParameterDeclCommaRep
    (258) epsilon -> .
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (61) IdentifierList -> . IDENT IdentifierRep
    (41) ParameterDeclCommaRep -> . ParameterDeclCommaRep COMMA ParameterDecl
    (42) ParameterDeclCommaRep -> . ParameterDecl COMMA ParameterDecl
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . STRING
    (10) TypeToken -> . BOOL
    (11) TypeToken -> . COMPLEX
    (12) TypeToken -> . TYPE IDENT
    (98) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType
    (43) ParameterDecl -> . IdentifierList Type
    (44) ParameterDecl -> . Type

    LPAREN          shift and go to state 62
    RPAREN          reduce using rule 258 (epsilon -> .)
    IDENT           shift and go to state 105
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71
    COMPLEX         shift and go to state 72
    TYPE            shift and go to state 73
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    ParameterListOpt               shift and go to state 99
    Type                           shift and go to state 151
    ParametersList                 shift and go to state 100
    epsilon                        shift and go to state 101
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    IdentifierList                 shift and go to state 103
    ParameterDeclCommaRep          shift and go to state 104
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67
    ParameterDecl                  shift and go to state 106

state 99

    (35) Parameters -> LPAREN ParameterListOpt . RPAREN

    RPAREN          shift and go to state 152


state 100

    (36) ParameterListOpt -> ParametersList .

    RPAREN          reduce using rule 36 (ParameterListOpt -> ParametersList .)


state 101

    (37) ParameterListOpt -> epsilon .

    RPAREN          reduce using rule 37 (ParameterListOpt -> epsilon .)


state 102

    (38) ParametersList -> Type .
    (44) ParameterDecl -> Type .

    RPAREN          reduce using rule 38 (ParametersList -> Type .)
    COMMA           reduce using rule 44 (ParameterDecl -> Type .)


state 103

    (39) ParametersList -> IdentifierList . Type
    (43) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . STRING
    (10) TypeToken -> . BOOL
    (11) TypeToken -> . COMPLEX
    (12) TypeToken -> . TYPE IDENT
    (98) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71
    COMPLEX         shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Type                           shift and go to state 153
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 104

    (40) ParametersList -> ParameterDeclCommaRep .
    (41) ParameterDeclCommaRep -> ParameterDeclCommaRep . COMMA ParameterDecl

    RPAREN          reduce using rule 40 (ParametersList -> ParameterDeclCommaRep .)
    COMMA           shift and go to state 154


state 105

    (61) IdentifierList -> IDENT . IdentifierRep
    (98) QualifiedIdent -> IDENT . PERIOD TypeName
    (62) IdentifierRep -> . IdentifierRep COMMA IDENT
    (63) IdentifierRep -> . epsilon
    (258) epsilon -> .

    PERIOD          shift and go to state 112
    COMMA           reduce using rule 258 (epsilon -> .)
    LPAREN          reduce using rule 258 (epsilon -> .)
    INT             reduce using rule 258 (epsilon -> .)
    FLOAT           reduce using rule 258 (epsilon -> .)
    STRING          reduce using rule 258 (epsilon -> .)
    BOOL            reduce using rule 258 (epsilon -> .)
    COMPLEX         reduce using rule 258 (epsilon -> .)
    TYPE            reduce using rule 258 (epsilon -> .)
    IDENT           reduce using rule 258 (epsilon -> .)
    LBRACK          reduce using rule 258 (epsilon -> .)
    STRUCT          reduce using rule 258 (epsilon -> .)
    MUL             reduce using rule 258 (epsilon -> .)

    IdentifierRep                  shift and go to state 78
    epsilon                        shift and go to state 79

state 106

    (42) ParameterDeclCommaRep -> ParameterDecl . COMMA ParameterDecl

    COMMA           shift and go to state 155


state 107

    (55) ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .

    SEMICOLON       reduce using rule 55 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)


state 108

    (56) ConstSpecRep -> ConstSpecRep ConstSpec . SEMICOLON

    SEMICOLON       shift and go to state 156


state 109

    (59) TypeExprListOpt -> TypeOpt ASSIGN . ExpressionList
    (64) ExpressionList -> . Expression ExpressionRep
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    ExpressionList                 shift and go to state 157
    Expression                     shift and go to state 146
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 110

    (4) Type -> LPAREN Type . RPAREN

    RPAREN          shift and go to state 158


state 111

    (12) TypeToken -> TYPE IDENT .

    ASSIGN          reduce using rule 12 (TypeToken -> TYPE IDENT .)
    SEMICOLON       reduce using rule 12 (TypeToken -> TYPE IDENT .)
    LBRACE          reduce using rule 12 (TypeToken -> TYPE IDENT .)
    RPAREN          reduce using rule 12 (TypeToken -> TYPE IDENT .)
    COMMA           reduce using rule 12 (TypeToken -> TYPE IDENT .)
    STRING_LITERAL  reduce using rule 12 (TypeToken -> TYPE IDENT .)
    COLON           reduce using rule 12 (TypeToken -> TYPE IDENT .)


state 112

    (98) QualifiedIdent -> IDENT PERIOD . TypeName
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . STRING
    (10) TypeToken -> . BOOL
    (11) TypeToken -> . COMPLEX
    (12) TypeToken -> . TYPE IDENT
    (98) QualifiedIdent -> . IDENT PERIOD TypeName

    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71
    COMPLEX         shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74

    TypeName                       shift and go to state 159
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64

state 113

    (18) ArrayType -> LBRACK ArrayLength . RBRACK ElementType

    RBRACK          shift and go to state 160


state 114

    (19) ArrayLength -> Expression .
    (134) Expression -> Expression . BinaryOp Expression
    (140) BinaryOp -> . LOR
    (141) BinaryOp -> . LAND
    (142) BinaryOp -> . RelOp
    (143) BinaryOp -> . AddMulOp
    (144) RelOp -> . EQL
    (145) RelOp -> . NEQ
    (146) RelOp -> . LSS
    (147) RelOp -> . GTR
    (148) RelOp -> . LEQ
    (149) RelOp -> . GEQ
    (150) AddMulOp -> . UnaryOp
    (151) AddMulOp -> . OR
    (152) AddMulOp -> . XOR
    (153) AddMulOp -> . QUO
    (154) AddMulOp -> . REM
    (155) AddMulOp -> . SHL
    (156) AddMulOp -> . SHR
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND

    RBRACK          reduce using rule 19 (ArrayLength -> Expression .)
    LOR             shift and go to state 162
    LAND            shift and go to state 163
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    GTR             shift and go to state 169
    LEQ             shift and go to state 170
    GEQ             shift and go to state 171
    OR              shift and go to state 173
    XOR             shift and go to state 174
    QUO             shift and go to state 175
    REM             shift and go to state 176
    SHL             shift and go to state 177
    SHR             shift and go to state 178
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 161
    RelOp                          shift and go to state 164
    AddMulOp                       shift and go to state 165
    UnaryOp                        shift and go to state 172

state 115

    (133) Expression -> UnaryExpr .

    LOR             reduce using rule 133 (Expression -> UnaryExpr .)
    LAND            reduce using rule 133 (Expression -> UnaryExpr .)
    EQL             reduce using rule 133 (Expression -> UnaryExpr .)
    NEQ             reduce using rule 133 (Expression -> UnaryExpr .)
    LSS             reduce using rule 133 (Expression -> UnaryExpr .)
    GTR             reduce using rule 133 (Expression -> UnaryExpr .)
    LEQ             reduce using rule 133 (Expression -> UnaryExpr .)
    GEQ             reduce using rule 133 (Expression -> UnaryExpr .)
    OR              reduce using rule 133 (Expression -> UnaryExpr .)
    XOR             reduce using rule 133 (Expression -> UnaryExpr .)
    QUO             reduce using rule 133 (Expression -> UnaryExpr .)
    REM             reduce using rule 133 (Expression -> UnaryExpr .)
    SHL             reduce using rule 133 (Expression -> UnaryExpr .)
    SHR             reduce using rule 133 (Expression -> UnaryExpr .)
    ADD             reduce using rule 133 (Expression -> UnaryExpr .)
    SUB             reduce using rule 133 (Expression -> UnaryExpr .)
    MUL             reduce using rule 133 (Expression -> UnaryExpr .)
    AND             reduce using rule 133 (Expression -> UnaryExpr .)
    RBRACK          reduce using rule 133 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 133 (Expression -> UnaryExpr .)
    SEMICOLON       reduce using rule 133 (Expression -> UnaryExpr .)
    RPAREN          reduce using rule 133 (Expression -> UnaryExpr .)
    INC             reduce using rule 133 (Expression -> UnaryExpr .)
    DEC             reduce using rule 133 (Expression -> UnaryExpr .)
    ADD_ASSIGN      reduce using rule 133 (Expression -> UnaryExpr .)
    SUB_ASSIGN      reduce using rule 133 (Expression -> UnaryExpr .)
    MUL_ASSIGN      reduce using rule 133 (Expression -> UnaryExpr .)
    QUO_ASSIGN      reduce using rule 133 (Expression -> UnaryExpr .)
    REM_ASSIGN      reduce using rule 133 (Expression -> UnaryExpr .)
    AND_ASSIGN      reduce using rule 133 (Expression -> UnaryExpr .)
    OR_ASSIGN       reduce using rule 133 (Expression -> UnaryExpr .)
    XOR_ASSIGN      reduce using rule 133 (Expression -> UnaryExpr .)
    SHL_ASSIGN      reduce using rule 133 (Expression -> UnaryExpr .)
    SHR_ASSIGN      reduce using rule 133 (Expression -> UnaryExpr .)
    ASSIGN          reduce using rule 133 (Expression -> UnaryExpr .)
    COLON           reduce using rule 133 (Expression -> UnaryExpr .)
    LBRACE          reduce using rule 133 (Expression -> UnaryExpr .)


state 116

    (137) UnaryExpr -> PrimaryExpr .
    (118) PrimaryExpr -> PrimaryExpr . Selector
    (119) PrimaryExpr -> PrimaryExpr . Index
    (120) PrimaryExpr -> PrimaryExpr . Slice
    (121) PrimaryExpr -> PrimaryExpr . TypeAssertion
    (122) PrimaryExpr -> PrimaryExpr . Arguments
    (123) Selector -> . PERIOD IDENT
    (124) Index -> . LBRACK Expression RBRACK
    (125) Slice -> . LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
    (126) Slice -> . LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK
    (127) TypeAssertion -> . PERIOD LPAREN Type RPAREN
    (128) Arguments -> . LPAREN ExpressionListTypeOpt RPAREN

    LOR             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    LAND            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    EQL             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    NEQ             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    LSS             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    GTR             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    XOR             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    QUO             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    REM             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    SHL             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    SHR             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    ADD             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    SUB             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    MUL             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    AND             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    RBRACK          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    SEMICOLON       reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    INC             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    DEC             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    ADD_ASSIGN      reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    SUB_ASSIGN      reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    MUL_ASSIGN      reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    QUO_ASSIGN      reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    REM_ASSIGN      reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    AND_ASSIGN      reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    OR_ASSIGN       reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    XOR_ASSIGN      reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    SHL_ASSIGN      reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    SHR_ASSIGN      reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    ASSIGN          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    PERIOD          shift and go to state 184
    LBRACK          shift and go to state 185
    LPAREN          shift and go to state 186

    Selector                       shift and go to state 179
    Index                          shift and go to state 180
    Slice                          shift and go to state 181
    TypeAssertion                  shift and go to state 182
    Arguments                      shift and go to state 183

state 117

    (138) UnaryExpr -> UnaryOp . UnaryExpr
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    UnaryOp                        shift and go to state 117
    UnaryExpr                      shift and go to state 187
    PrimaryExpr                    shift and go to state 116
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 118

    (139) UnaryExpr -> NOT . UnaryExpr
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    UnaryExpr                      shift and go to state 188
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 119

    (117) PrimaryExpr -> Operand .

    PERIOD          reduce using rule 117 (PrimaryExpr -> Operand .)
    LBRACK          reduce using rule 117 (PrimaryExpr -> Operand .)
    LPAREN          reduce using rule 117 (PrimaryExpr -> Operand .)
    LOR             reduce using rule 117 (PrimaryExpr -> Operand .)
    LAND            reduce using rule 117 (PrimaryExpr -> Operand .)
    EQL             reduce using rule 117 (PrimaryExpr -> Operand .)
    NEQ             reduce using rule 117 (PrimaryExpr -> Operand .)
    LSS             reduce using rule 117 (PrimaryExpr -> Operand .)
    GTR             reduce using rule 117 (PrimaryExpr -> Operand .)
    LEQ             reduce using rule 117 (PrimaryExpr -> Operand .)
    GEQ             reduce using rule 117 (PrimaryExpr -> Operand .)
    OR              reduce using rule 117 (PrimaryExpr -> Operand .)
    XOR             reduce using rule 117 (PrimaryExpr -> Operand .)
    QUO             reduce using rule 117 (PrimaryExpr -> Operand .)
    REM             reduce using rule 117 (PrimaryExpr -> Operand .)
    SHL             reduce using rule 117 (PrimaryExpr -> Operand .)
    SHR             reduce using rule 117 (PrimaryExpr -> Operand .)
    ADD             reduce using rule 117 (PrimaryExpr -> Operand .)
    SUB             reduce using rule 117 (PrimaryExpr -> Operand .)
    MUL             reduce using rule 117 (PrimaryExpr -> Operand .)
    AND             reduce using rule 117 (PrimaryExpr -> Operand .)
    RBRACK          reduce using rule 117 (PrimaryExpr -> Operand .)
    COMMA           reduce using rule 117 (PrimaryExpr -> Operand .)
    SEMICOLON       reduce using rule 117 (PrimaryExpr -> Operand .)
    RPAREN          reduce using rule 117 (PrimaryExpr -> Operand .)
    INC             reduce using rule 117 (PrimaryExpr -> Operand .)
    DEC             reduce using rule 117 (PrimaryExpr -> Operand .)
    ADD_ASSIGN      reduce using rule 117 (PrimaryExpr -> Operand .)
    SUB_ASSIGN      reduce using rule 117 (PrimaryExpr -> Operand .)
    MUL_ASSIGN      reduce using rule 117 (PrimaryExpr -> Operand .)
    QUO_ASSIGN      reduce using rule 117 (PrimaryExpr -> Operand .)
    REM_ASSIGN      reduce using rule 117 (PrimaryExpr -> Operand .)
    AND_ASSIGN      reduce using rule 117 (PrimaryExpr -> Operand .)
    OR_ASSIGN       reduce using rule 117 (PrimaryExpr -> Operand .)
    XOR_ASSIGN      reduce using rule 117 (PrimaryExpr -> Operand .)
    SHL_ASSIGN      reduce using rule 117 (PrimaryExpr -> Operand .)
    SHR_ASSIGN      reduce using rule 117 (PrimaryExpr -> Operand .)
    ASSIGN          reduce using rule 117 (PrimaryExpr -> Operand .)
    COLON           reduce using rule 117 (PrimaryExpr -> Operand .)
    LBRACE          reduce using rule 117 (PrimaryExpr -> Operand .)


state 120

    (157) UnaryOp -> ADD .

    NOT             reduce using rule 157 (UnaryOp -> ADD .)
    ADD             reduce using rule 157 (UnaryOp -> ADD .)
    SUB             reduce using rule 157 (UnaryOp -> ADD .)
    MUL             reduce using rule 157 (UnaryOp -> ADD .)
    AND             reduce using rule 157 (UnaryOp -> ADD .)
    LPAREN          reduce using rule 157 (UnaryOp -> ADD .)
    IDENT           reduce using rule 157 (UnaryOp -> ADD .)
    INT_LITERAL     reduce using rule 157 (UnaryOp -> ADD .)
    FLOAT_LITERAL   reduce using rule 157 (UnaryOp -> ADD .)
    STRING_LITERAL  reduce using rule 157 (UnaryOp -> ADD .)
    IMAG            reduce using rule 157 (UnaryOp -> ADD .)


state 121

    (158) UnaryOp -> SUB .

    NOT             reduce using rule 158 (UnaryOp -> SUB .)
    ADD             reduce using rule 158 (UnaryOp -> SUB .)
    SUB             reduce using rule 158 (UnaryOp -> SUB .)
    MUL             reduce using rule 158 (UnaryOp -> SUB .)
    AND             reduce using rule 158 (UnaryOp -> SUB .)
    LPAREN          reduce using rule 158 (UnaryOp -> SUB .)
    IDENT           reduce using rule 158 (UnaryOp -> SUB .)
    INT_LITERAL     reduce using rule 158 (UnaryOp -> SUB .)
    FLOAT_LITERAL   reduce using rule 158 (UnaryOp -> SUB .)
    STRING_LITERAL  reduce using rule 158 (UnaryOp -> SUB .)
    IMAG            reduce using rule 158 (UnaryOp -> SUB .)


state 122

    (159) UnaryOp -> MUL .

    NOT             reduce using rule 159 (UnaryOp -> MUL .)
    ADD             reduce using rule 159 (UnaryOp -> MUL .)
    SUB             reduce using rule 159 (UnaryOp -> MUL .)
    MUL             reduce using rule 159 (UnaryOp -> MUL .)
    AND             reduce using rule 159 (UnaryOp -> MUL .)
    LPAREN          reduce using rule 159 (UnaryOp -> MUL .)
    IDENT           reduce using rule 159 (UnaryOp -> MUL .)
    INT_LITERAL     reduce using rule 159 (UnaryOp -> MUL .)
    FLOAT_LITERAL   reduce using rule 159 (UnaryOp -> MUL .)
    STRING_LITERAL  reduce using rule 159 (UnaryOp -> MUL .)
    IMAG            reduce using rule 159 (UnaryOp -> MUL .)


state 123

    (160) UnaryOp -> AND .

    NOT             reduce using rule 160 (UnaryOp -> AND .)
    ADD             reduce using rule 160 (UnaryOp -> AND .)
    SUB             reduce using rule 160 (UnaryOp -> AND .)
    MUL             reduce using rule 160 (UnaryOp -> AND .)
    AND             reduce using rule 160 (UnaryOp -> AND .)
    LPAREN          reduce using rule 160 (UnaryOp -> AND .)
    IDENT           reduce using rule 160 (UnaryOp -> AND .)
    INT_LITERAL     reduce using rule 160 (UnaryOp -> AND .)
    FLOAT_LITERAL   reduce using rule 160 (UnaryOp -> AND .)
    STRING_LITERAL  reduce using rule 160 (UnaryOp -> AND .)
    IMAG            reduce using rule 160 (UnaryOp -> AND .)


state 124

    (89) Operand -> Literal .

    PERIOD          reduce using rule 89 (Operand -> Literal .)
    LBRACK          reduce using rule 89 (Operand -> Literal .)
    LPAREN          reduce using rule 89 (Operand -> Literal .)
    LOR             reduce using rule 89 (Operand -> Literal .)
    LAND            reduce using rule 89 (Operand -> Literal .)
    EQL             reduce using rule 89 (Operand -> Literal .)
    NEQ             reduce using rule 89 (Operand -> Literal .)
    LSS             reduce using rule 89 (Operand -> Literal .)
    GTR             reduce using rule 89 (Operand -> Literal .)
    LEQ             reduce using rule 89 (Operand -> Literal .)
    GEQ             reduce using rule 89 (Operand -> Literal .)
    OR              reduce using rule 89 (Operand -> Literal .)
    XOR             reduce using rule 89 (Operand -> Literal .)
    QUO             reduce using rule 89 (Operand -> Literal .)
    REM             reduce using rule 89 (Operand -> Literal .)
    SHL             reduce using rule 89 (Operand -> Literal .)
    SHR             reduce using rule 89 (Operand -> Literal .)
    ADD             reduce using rule 89 (Operand -> Literal .)
    SUB             reduce using rule 89 (Operand -> Literal .)
    MUL             reduce using rule 89 (Operand -> Literal .)
    AND             reduce using rule 89 (Operand -> Literal .)
    RBRACK          reduce using rule 89 (Operand -> Literal .)
    COMMA           reduce using rule 89 (Operand -> Literal .)
    SEMICOLON       reduce using rule 89 (Operand -> Literal .)
    RPAREN          reduce using rule 89 (Operand -> Literal .)
    INC             reduce using rule 89 (Operand -> Literal .)
    DEC             reduce using rule 89 (Operand -> Literal .)
    ADD_ASSIGN      reduce using rule 89 (Operand -> Literal .)
    SUB_ASSIGN      reduce using rule 89 (Operand -> Literal .)
    MUL_ASSIGN      reduce using rule 89 (Operand -> Literal .)
    QUO_ASSIGN      reduce using rule 89 (Operand -> Literal .)
    REM_ASSIGN      reduce using rule 89 (Operand -> Literal .)
    AND_ASSIGN      reduce using rule 89 (Operand -> Literal .)
    OR_ASSIGN       reduce using rule 89 (Operand -> Literal .)
    XOR_ASSIGN      reduce using rule 89 (Operand -> Literal .)
    SHL_ASSIGN      reduce using rule 89 (Operand -> Literal .)
    SHR_ASSIGN      reduce using rule 89 (Operand -> Literal .)
    ASSIGN          reduce using rule 89 (Operand -> Literal .)
    COLON           reduce using rule 89 (Operand -> Literal .)
    LBRACE          reduce using rule 89 (Operand -> Literal .)


state 125

    (90) Operand -> OperandName .

    PERIOD          reduce using rule 90 (Operand -> OperandName .)
    LBRACK          reduce using rule 90 (Operand -> OperandName .)
    LPAREN          reduce using rule 90 (Operand -> OperandName .)
    LOR             reduce using rule 90 (Operand -> OperandName .)
    LAND            reduce using rule 90 (Operand -> OperandName .)
    EQL             reduce using rule 90 (Operand -> OperandName .)
    NEQ             reduce using rule 90 (Operand -> OperandName .)
    LSS             reduce using rule 90 (Operand -> OperandName .)
    GTR             reduce using rule 90 (Operand -> OperandName .)
    LEQ             reduce using rule 90 (Operand -> OperandName .)
    GEQ             reduce using rule 90 (Operand -> OperandName .)
    OR              reduce using rule 90 (Operand -> OperandName .)
    XOR             reduce using rule 90 (Operand -> OperandName .)
    QUO             reduce using rule 90 (Operand -> OperandName .)
    REM             reduce using rule 90 (Operand -> OperandName .)
    SHL             reduce using rule 90 (Operand -> OperandName .)
    SHR             reduce using rule 90 (Operand -> OperandName .)
    ADD             reduce using rule 90 (Operand -> OperandName .)
    SUB             reduce using rule 90 (Operand -> OperandName .)
    MUL             reduce using rule 90 (Operand -> OperandName .)
    AND             reduce using rule 90 (Operand -> OperandName .)
    RBRACK          reduce using rule 90 (Operand -> OperandName .)
    COMMA           reduce using rule 90 (Operand -> OperandName .)
    SEMICOLON       reduce using rule 90 (Operand -> OperandName .)
    RPAREN          reduce using rule 90 (Operand -> OperandName .)
    INC             reduce using rule 90 (Operand -> OperandName .)
    DEC             reduce using rule 90 (Operand -> OperandName .)
    ADD_ASSIGN      reduce using rule 90 (Operand -> OperandName .)
    SUB_ASSIGN      reduce using rule 90 (Operand -> OperandName .)
    MUL_ASSIGN      reduce using rule 90 (Operand -> OperandName .)
    QUO_ASSIGN      reduce using rule 90 (Operand -> OperandName .)
    REM_ASSIGN      reduce using rule 90 (Operand -> OperandName .)
    AND_ASSIGN      reduce using rule 90 (Operand -> OperandName .)
    OR_ASSIGN       reduce using rule 90 (Operand -> OperandName .)
    XOR_ASSIGN      reduce using rule 90 (Operand -> OperandName .)
    SHL_ASSIGN      reduce using rule 90 (Operand -> OperandName .)
    SHR_ASSIGN      reduce using rule 90 (Operand -> OperandName .)
    ASSIGN          reduce using rule 90 (Operand -> OperandName .)
    COLON           reduce using rule 90 (Operand -> OperandName .)
    LBRACE          reduce using rule 90 (Operand -> OperandName .)


state 126

    (91) Operand -> LPAREN . Expression RPAREN
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    Expression                     shift and go to state 189
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 127

    (92) Literal -> BasicLit .

    PERIOD          reduce using rule 92 (Literal -> BasicLit .)
    LBRACK          reduce using rule 92 (Literal -> BasicLit .)
    LPAREN          reduce using rule 92 (Literal -> BasicLit .)
    LOR             reduce using rule 92 (Literal -> BasicLit .)
    LAND            reduce using rule 92 (Literal -> BasicLit .)
    EQL             reduce using rule 92 (Literal -> BasicLit .)
    NEQ             reduce using rule 92 (Literal -> BasicLit .)
    LSS             reduce using rule 92 (Literal -> BasicLit .)
    GTR             reduce using rule 92 (Literal -> BasicLit .)
    LEQ             reduce using rule 92 (Literal -> BasicLit .)
    GEQ             reduce using rule 92 (Literal -> BasicLit .)
    OR              reduce using rule 92 (Literal -> BasicLit .)
    XOR             reduce using rule 92 (Literal -> BasicLit .)
    QUO             reduce using rule 92 (Literal -> BasicLit .)
    REM             reduce using rule 92 (Literal -> BasicLit .)
    SHL             reduce using rule 92 (Literal -> BasicLit .)
    SHR             reduce using rule 92 (Literal -> BasicLit .)
    ADD             reduce using rule 92 (Literal -> BasicLit .)
    SUB             reduce using rule 92 (Literal -> BasicLit .)
    MUL             reduce using rule 92 (Literal -> BasicLit .)
    AND             reduce using rule 92 (Literal -> BasicLit .)
    RBRACK          reduce using rule 92 (Literal -> BasicLit .)
    COMMA           reduce using rule 92 (Literal -> BasicLit .)
    SEMICOLON       reduce using rule 92 (Literal -> BasicLit .)
    RPAREN          reduce using rule 92 (Literal -> BasicLit .)
    INC             reduce using rule 92 (Literal -> BasicLit .)
    DEC             reduce using rule 92 (Literal -> BasicLit .)
    ADD_ASSIGN      reduce using rule 92 (Literal -> BasicLit .)
    SUB_ASSIGN      reduce using rule 92 (Literal -> BasicLit .)
    MUL_ASSIGN      reduce using rule 92 (Literal -> BasicLit .)
    QUO_ASSIGN      reduce using rule 92 (Literal -> BasicLit .)
    REM_ASSIGN      reduce using rule 92 (Literal -> BasicLit .)
    AND_ASSIGN      reduce using rule 92 (Literal -> BasicLit .)
    OR_ASSIGN       reduce using rule 92 (Literal -> BasicLit .)
    XOR_ASSIGN      reduce using rule 92 (Literal -> BasicLit .)
    SHL_ASSIGN      reduce using rule 92 (Literal -> BasicLit .)
    SHR_ASSIGN      reduce using rule 92 (Literal -> BasicLit .)
    ASSIGN          reduce using rule 92 (Literal -> BasicLit .)
    COLON           reduce using rule 92 (Literal -> BasicLit .)
    LBRACE          reduce using rule 92 (Literal -> BasicLit .)


state 128

    (97) OperandName -> IDENT .

    PERIOD          reduce using rule 97 (OperandName -> IDENT .)
    LBRACK          reduce using rule 97 (OperandName -> IDENT .)
    LPAREN          reduce using rule 97 (OperandName -> IDENT .)
    LOR             reduce using rule 97 (OperandName -> IDENT .)
    LAND            reduce using rule 97 (OperandName -> IDENT .)
    EQL             reduce using rule 97 (OperandName -> IDENT .)
    NEQ             reduce using rule 97 (OperandName -> IDENT .)
    LSS             reduce using rule 97 (OperandName -> IDENT .)
    GTR             reduce using rule 97 (OperandName -> IDENT .)
    LEQ             reduce using rule 97 (OperandName -> IDENT .)
    GEQ             reduce using rule 97 (OperandName -> IDENT .)
    OR              reduce using rule 97 (OperandName -> IDENT .)
    XOR             reduce using rule 97 (OperandName -> IDENT .)
    QUO             reduce using rule 97 (OperandName -> IDENT .)
    REM             reduce using rule 97 (OperandName -> IDENT .)
    SHL             reduce using rule 97 (OperandName -> IDENT .)
    SHR             reduce using rule 97 (OperandName -> IDENT .)
    ADD             reduce using rule 97 (OperandName -> IDENT .)
    SUB             reduce using rule 97 (OperandName -> IDENT .)
    MUL             reduce using rule 97 (OperandName -> IDENT .)
    AND             reduce using rule 97 (OperandName -> IDENT .)
    RBRACK          reduce using rule 97 (OperandName -> IDENT .)
    COMMA           reduce using rule 97 (OperandName -> IDENT .)
    SEMICOLON       reduce using rule 97 (OperandName -> IDENT .)
    RPAREN          reduce using rule 97 (OperandName -> IDENT .)
    INC             reduce using rule 97 (OperandName -> IDENT .)
    DEC             reduce using rule 97 (OperandName -> IDENT .)
    ADD_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    SUB_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    MUL_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    QUO_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    REM_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    AND_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    OR_ASSIGN       reduce using rule 97 (OperandName -> IDENT .)
    XOR_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    SHL_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    SHR_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    ASSIGN          reduce using rule 97 (OperandName -> IDENT .)
    COLON           reduce using rule 97 (OperandName -> IDENT .)
    LBRACE          reduce using rule 97 (OperandName -> IDENT .)


state 129

    (93) BasicLit -> INT_LITERAL .

    PERIOD          reduce using rule 93 (BasicLit -> INT_LITERAL .)
    LBRACK          reduce using rule 93 (BasicLit -> INT_LITERAL .)
    LPAREN          reduce using rule 93 (BasicLit -> INT_LITERAL .)
    LOR             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    LAND            reduce using rule 93 (BasicLit -> INT_LITERAL .)
    EQL             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    NEQ             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    LSS             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    GTR             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    LEQ             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    GEQ             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    OR              reduce using rule 93 (BasicLit -> INT_LITERAL .)
    XOR             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    QUO             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    REM             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    SHL             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    SHR             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    ADD             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    SUB             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    MUL             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    AND             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    RBRACK          reduce using rule 93 (BasicLit -> INT_LITERAL .)
    COMMA           reduce using rule 93 (BasicLit -> INT_LITERAL .)
    SEMICOLON       reduce using rule 93 (BasicLit -> INT_LITERAL .)
    RPAREN          reduce using rule 93 (BasicLit -> INT_LITERAL .)
    INC             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    DEC             reduce using rule 93 (BasicLit -> INT_LITERAL .)
    ADD_ASSIGN      reduce using rule 93 (BasicLit -> INT_LITERAL .)
    SUB_ASSIGN      reduce using rule 93 (BasicLit -> INT_LITERAL .)
    MUL_ASSIGN      reduce using rule 93 (BasicLit -> INT_LITERAL .)
    QUO_ASSIGN      reduce using rule 93 (BasicLit -> INT_LITERAL .)
    REM_ASSIGN      reduce using rule 93 (BasicLit -> INT_LITERAL .)
    AND_ASSIGN      reduce using rule 93 (BasicLit -> INT_LITERAL .)
    OR_ASSIGN       reduce using rule 93 (BasicLit -> INT_LITERAL .)
    XOR_ASSIGN      reduce using rule 93 (BasicLit -> INT_LITERAL .)
    SHL_ASSIGN      reduce using rule 93 (BasicLit -> INT_LITERAL .)
    SHR_ASSIGN      reduce using rule 93 (BasicLit -> INT_LITERAL .)
    ASSIGN          reduce using rule 93 (BasicLit -> INT_LITERAL .)
    COLON           reduce using rule 93 (BasicLit -> INT_LITERAL .)
    LBRACE          reduce using rule 93 (BasicLit -> INT_LITERAL .)


state 130

    (94) BasicLit -> FLOAT_LITERAL .

    PERIOD          reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    LBRACK          reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    LPAREN          reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    LOR             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    LAND            reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    EQL             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    NEQ             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    LSS             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    GTR             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    LEQ             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    GEQ             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    OR              reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    XOR             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    QUO             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    REM             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    SHL             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    SHR             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    ADD             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    SUB             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    MUL             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    AND             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    RBRACK          reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    COMMA           reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    SEMICOLON       reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    RPAREN          reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    INC             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    DEC             reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    ADD_ASSIGN      reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    SUB_ASSIGN      reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    MUL_ASSIGN      reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    QUO_ASSIGN      reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    REM_ASSIGN      reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    AND_ASSIGN      reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    OR_ASSIGN       reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    XOR_ASSIGN      reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    SHL_ASSIGN      reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    SHR_ASSIGN      reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    ASSIGN          reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    COLON           reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)
    LBRACE          reduce using rule 94 (BasicLit -> FLOAT_LITERAL .)


state 131

    (95) BasicLit -> STRING_LITERAL .

    PERIOD          reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    LBRACK          reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    LPAREN          reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    LOR             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    LAND            reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    EQL             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    NEQ             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    LSS             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    GTR             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    LEQ             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    GEQ             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    OR              reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    XOR             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    QUO             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    REM             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    SHL             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    SHR             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    ADD             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    SUB             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    MUL             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    AND             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    RBRACK          reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    COMMA           reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    SEMICOLON       reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    RPAREN          reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    INC             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    DEC             reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    ADD_ASSIGN      reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    SUB_ASSIGN      reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    MUL_ASSIGN      reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    QUO_ASSIGN      reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    REM_ASSIGN      reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    AND_ASSIGN      reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    OR_ASSIGN       reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    XOR_ASSIGN      reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    SHL_ASSIGN      reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    SHR_ASSIGN      reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    ASSIGN          reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    COLON           reduce using rule 95 (BasicLit -> STRING_LITERAL .)
    LBRACE          reduce using rule 95 (BasicLit -> STRING_LITERAL .)


state 132

    (96) BasicLit -> IMAG .

    PERIOD          reduce using rule 96 (BasicLit -> IMAG .)
    LBRACK          reduce using rule 96 (BasicLit -> IMAG .)
    LPAREN          reduce using rule 96 (BasicLit -> IMAG .)
    LOR             reduce using rule 96 (BasicLit -> IMAG .)
    LAND            reduce using rule 96 (BasicLit -> IMAG .)
    EQL             reduce using rule 96 (BasicLit -> IMAG .)
    NEQ             reduce using rule 96 (BasicLit -> IMAG .)
    LSS             reduce using rule 96 (BasicLit -> IMAG .)
    GTR             reduce using rule 96 (BasicLit -> IMAG .)
    LEQ             reduce using rule 96 (BasicLit -> IMAG .)
    GEQ             reduce using rule 96 (BasicLit -> IMAG .)
    OR              reduce using rule 96 (BasicLit -> IMAG .)
    XOR             reduce using rule 96 (BasicLit -> IMAG .)
    QUO             reduce using rule 96 (BasicLit -> IMAG .)
    REM             reduce using rule 96 (BasicLit -> IMAG .)
    SHL             reduce using rule 96 (BasicLit -> IMAG .)
    SHR             reduce using rule 96 (BasicLit -> IMAG .)
    ADD             reduce using rule 96 (BasicLit -> IMAG .)
    SUB             reduce using rule 96 (BasicLit -> IMAG .)
    MUL             reduce using rule 96 (BasicLit -> IMAG .)
    AND             reduce using rule 96 (BasicLit -> IMAG .)
    RBRACK          reduce using rule 96 (BasicLit -> IMAG .)
    COMMA           reduce using rule 96 (BasicLit -> IMAG .)
    SEMICOLON       reduce using rule 96 (BasicLit -> IMAG .)
    RPAREN          reduce using rule 96 (BasicLit -> IMAG .)
    INC             reduce using rule 96 (BasicLit -> IMAG .)
    DEC             reduce using rule 96 (BasicLit -> IMAG .)
    ADD_ASSIGN      reduce using rule 96 (BasicLit -> IMAG .)
    SUB_ASSIGN      reduce using rule 96 (BasicLit -> IMAG .)
    MUL_ASSIGN      reduce using rule 96 (BasicLit -> IMAG .)
    QUO_ASSIGN      reduce using rule 96 (BasicLit -> IMAG .)
    REM_ASSIGN      reduce using rule 96 (BasicLit -> IMAG .)
    AND_ASSIGN      reduce using rule 96 (BasicLit -> IMAG .)
    OR_ASSIGN       reduce using rule 96 (BasicLit -> IMAG .)
    XOR_ASSIGN      reduce using rule 96 (BasicLit -> IMAG .)
    SHL_ASSIGN      reduce using rule 96 (BasicLit -> IMAG .)
    SHR_ASSIGN      reduce using rule 96 (BasicLit -> IMAG .)
    ASSIGN          reduce using rule 96 (BasicLit -> IMAG .)
    COLON           reduce using rule 96 (BasicLit -> IMAG .)
    LBRACE          reduce using rule 96 (BasicLit -> IMAG .)


state 133

    (21) StructType -> STRUCT LBRACE . FieldDeclRep RBRACE
    (22) FieldDeclRep -> . FieldDeclRep FieldDecl SEMICOLON
    (23) FieldDeclRep -> . epsilon
    (258) epsilon -> .

    RBRACE          reduce using rule 258 (epsilon -> .)
    IDENT           reduce using rule 258 (epsilon -> .)

    FieldDeclRep                   shift and go to state 190
    epsilon                        shift and go to state 191

state 134

    (28) PointerType -> MUL BaseType .

    ASSIGN          reduce using rule 28 (PointerType -> MUL BaseType .)
    SEMICOLON       reduce using rule 28 (PointerType -> MUL BaseType .)
    LBRACE          reduce using rule 28 (PointerType -> MUL BaseType .)
    RPAREN          reduce using rule 28 (PointerType -> MUL BaseType .)
    COMMA           reduce using rule 28 (PointerType -> MUL BaseType .)
    STRING_LITERAL  reduce using rule 28 (PointerType -> MUL BaseType .)
    COLON           reduce using rule 28 (PointerType -> MUL BaseType .)


state 135

    (29) BaseType -> Type .

    ASSIGN          reduce using rule 29 (BaseType -> Type .)
    SEMICOLON       reduce using rule 29 (BaseType -> Type .)
    LBRACE          reduce using rule 29 (BaseType -> Type .)
    RPAREN          reduce using rule 29 (BaseType -> Type .)
    COMMA           reduce using rule 29 (BaseType -> Type .)
    STRING_LITERAL  reduce using rule 29 (BaseType -> Type .)
    COLON           reduce using rule 29 (BaseType -> Type .)


state 136

    (62) IdentifierRep -> IdentifierRep COMMA . IDENT

    IDENT           shift and go to state 192


state 137

    (68) TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .

    SEMICOLON       reduce using rule 68 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)


state 138

    (69) TypeSpecRep -> TypeSpecRep TypeSpec . SEMICOLON

    SEMICOLON       shift and go to state 193


state 139

    (73) AliasDecl -> IDENT ASSIGN Type .

    SEMICOLON       reduce using rule 73 (AliasDecl -> IDENT ASSIGN Type .)


state 140

    (76) VarDecl -> VAR LPAREN VarSpecRep RPAREN .

    SEMICOLON       reduce using rule 76 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)


state 141

    (77) VarSpecRep -> VarSpecRep VarSpec . SEMICOLON

    SEMICOLON       shift and go to state 194


state 142

    (79) VarSpec -> IdentifierList Type ExpressionListOpt .

    SEMICOLON       reduce using rule 79 (VarSpec -> IdentifierList Type ExpressionListOpt .)


state 143

    (81) ExpressionListOpt -> ASSIGN . ExpressionList
    (64) ExpressionList -> . Expression ExpressionRep
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    ExpressionList                 shift and go to state 195
    Expression                     shift and go to state 146
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 144

    (82) ExpressionListOpt -> epsilon .

    SEMICOLON       reduce using rule 82 (ExpressionListOpt -> epsilon .)


state 145

    (80) VarSpec -> IdentifierList ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 80 (VarSpec -> IdentifierList ASSIGN ExpressionList .)


state 146

    (64) ExpressionList -> Expression . ExpressionRep
    (134) Expression -> Expression . BinaryOp Expression
    (65) ExpressionRep -> . ExpressionRep COMMA Expression
    (66) ExpressionRep -> . epsilon
    (140) BinaryOp -> . LOR
    (141) BinaryOp -> . LAND
    (142) BinaryOp -> . RelOp
    (143) BinaryOp -> . AddMulOp
    (258) epsilon -> .
    (144) RelOp -> . EQL
    (145) RelOp -> . NEQ
    (146) RelOp -> . LSS
    (147) RelOp -> . GTR
    (148) RelOp -> . LEQ
    (149) RelOp -> . GEQ
    (150) AddMulOp -> . UnaryOp
    (151) AddMulOp -> . OR
    (152) AddMulOp -> . XOR
    (153) AddMulOp -> . QUO
    (154) AddMulOp -> . REM
    (155) AddMulOp -> . SHL
    (156) AddMulOp -> . SHR
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND

    LOR             shift and go to state 162
    LAND            shift and go to state 163
    COMMA           reduce using rule 258 (epsilon -> .)
    SEMICOLON       reduce using rule 258 (epsilon -> .)
    RPAREN          reduce using rule 258 (epsilon -> .)
    LBRACE          reduce using rule 258 (epsilon -> .)
    COLON           reduce using rule 258 (epsilon -> .)
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    GTR             shift and go to state 169
    LEQ             shift and go to state 170
    GEQ             shift and go to state 171
    OR              shift and go to state 173
    XOR             shift and go to state 174
    QUO             shift and go to state 175
    REM             shift and go to state 176
    SHL             shift and go to state 177
    SHR             shift and go to state 178
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    ExpressionRep                  shift and go to state 196
    BinaryOp                       shift and go to state 161
    epsilon                        shift and go to state 197
    RelOp                          shift and go to state 164
    AddMulOp                       shift and go to state 165
    UnaryOp                        shift and go to state 172

state 147

    (251) ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .

    RPAREN          reduce using rule 251 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)
    PERIOD          reduce using rule 251 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)
    IDENT           reduce using rule 251 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)
    STRING_LITERAL  reduce using rule 251 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)


state 148

    (45) Block -> LBRACE StatementList . RBRACE

    RBRACE          shift and go to state 198


state 149

    (46) StatementList -> StatementRep .
    (47) StatementRep -> StatementRep . Statement SEMICOLON
    (161) Statement -> . Declaration
    (162) Statement -> . LabeledStmt
    (163) Statement -> . SimpleStmt
    (164) Statement -> . ReturnStmt
    (165) Statement -> . BreakStmt
    (166) Statement -> . ContinueStmt
    (167) Statement -> . GotoStmt
    (168) Statement -> . Block
    (169) Statement -> . IfStmt
    (170) Statement -> . SwitchStmt
    (171) Statement -> . ForStmt
    (49) Declaration -> . ConstDecl
    (50) Declaration -> . TypeDecl
    (51) Declaration -> . VarDecl
    (177) LabeledStmt -> . Label COLON Statement
    (172) SimpleStmt -> . epsilon
    (173) SimpleStmt -> . ExpressionStmt
    (174) SimpleStmt -> . IncDecStmt
    (175) SimpleStmt -> . Assignment
    (176) SimpleStmt -> . ShortVarDecl
    (234) ReturnStmt -> . RETURN ExpressionListPureOpt
    (237) BreakStmt -> . BREAK LabelOpt
    (238) ContinueStmt -> . CONTINUE LabelOpt
    (241) GotoStmt -> . GOTO Label
    (45) Block -> . LBRACE StatementList RBRACE
    (195) IfStmt -> . IF Expression Block ElseOpt
    (201) SwitchStmt -> . ExprSwitchStmt
    (202) SwitchStmt -> . TypeSwitchStmt
    (221) ForStmt -> . FOR ConditionBlockOpt Block
    (54) ConstDecl -> . CONST ConstSpec
    (55) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (67) TypeDecl -> . TYPE TypeSpec
    (68) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (75) VarDecl -> . VAR VarSpec
    (76) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (178) Label -> . IDENT
    (258) epsilon -> .
    (179) ExpressionStmt -> . Expression
    (180) IncDecStmt -> . Expression INC
    (181) IncDecStmt -> . Expression DEC
    (182) Assignment -> . ExpressionList assign_op ExpressionList
    (83) ShortVarDecl -> . IDENT DEFINE Expression
    (203) ExprSwitchStmt -> . SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE
    (209) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (64) ExpressionList -> . Expression ExpressionRep
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    RBRACE          reduce using rule 46 (StatementList -> StatementRep .)
    CASE            reduce using rule 46 (StatementList -> StatementRep .)
    DEFAULT         reduce using rule 46 (StatementList -> StatementRep .)
    RETURN          shift and go to state 217
    BREAK           shift and go to state 218
    CONTINUE        shift and go to state 219
    GOTO            shift and go to state 220
    LBRACE          shift and go to state 92
    IF              shift and go to state 221
    FOR             shift and go to state 225
    CONST           shift and go to state 21
    TYPE            shift and go to state 22
    VAR             shift and go to state 23
    IDENT           shift and go to state 226
    SEMICOLON       reduce using rule 258 (epsilon -> .)
    SWITCH          shift and go to state 228
    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    Statement                      shift and go to state 199
    Declaration                    shift and go to state 200
    LabeledStmt                    shift and go to state 201
    SimpleStmt                     shift and go to state 202
    ReturnStmt                     shift and go to state 203
    BreakStmt                      shift and go to state 204
    ContinueStmt                   shift and go to state 205
    GotoStmt                       shift and go to state 206
    Block                          shift and go to state 207
    IfStmt                         shift and go to state 208
    SwitchStmt                     shift and go to state 209
    ForStmt                        shift and go to state 210
    ConstDecl                      shift and go to state 17
    TypeDecl                       shift and go to state 18
    VarDecl                        shift and go to state 19
    Label                          shift and go to state 211
    epsilon                        shift and go to state 212
    ExpressionStmt                 shift and go to state 213
    IncDecStmt                     shift and go to state 214
    Assignment                     shift and go to state 215
    ShortVarDecl                   shift and go to state 216
    Expression                     shift and go to state 222
    ExprSwitchStmt                 shift and go to state 223
    TypeSwitchStmt                 shift and go to state 224
    ExpressionList                 shift and go to state 227
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 150

    (48) StatementRep -> epsilon .

    RETURN          reduce using rule 48 (StatementRep -> epsilon .)
    BREAK           reduce using rule 48 (StatementRep -> epsilon .)
    CONTINUE        reduce using rule 48 (StatementRep -> epsilon .)
    GOTO            reduce using rule 48 (StatementRep -> epsilon .)
    LBRACE          reduce using rule 48 (StatementRep -> epsilon .)
    IF              reduce using rule 48 (StatementRep -> epsilon .)
    FOR             reduce using rule 48 (StatementRep -> epsilon .)
    CONST           reduce using rule 48 (StatementRep -> epsilon .)
    TYPE            reduce using rule 48 (StatementRep -> epsilon .)
    VAR             reduce using rule 48 (StatementRep -> epsilon .)
    IDENT           reduce using rule 48 (StatementRep -> epsilon .)
    SWITCH          reduce using rule 48 (StatementRep -> epsilon .)
    NOT             reduce using rule 48 (StatementRep -> epsilon .)
    ADD             reduce using rule 48 (StatementRep -> epsilon .)
    SUB             reduce using rule 48 (StatementRep -> epsilon .)
    MUL             reduce using rule 48 (StatementRep -> epsilon .)
    AND             reduce using rule 48 (StatementRep -> epsilon .)
    LPAREN          reduce using rule 48 (StatementRep -> epsilon .)
    INT_LITERAL     reduce using rule 48 (StatementRep -> epsilon .)
    FLOAT_LITERAL   reduce using rule 48 (StatementRep -> epsilon .)
    STRING_LITERAL  reduce using rule 48 (StatementRep -> epsilon .)
    IMAG            reduce using rule 48 (StatementRep -> epsilon .)
    SEMICOLON       reduce using rule 48 (StatementRep -> epsilon .)
    RBRACE          reduce using rule 48 (StatementRep -> epsilon .)
    CASE            reduce using rule 48 (StatementRep -> epsilon .)
    DEFAULT         reduce using rule 48 (StatementRep -> epsilon .)


state 151

    (4) Type -> LPAREN Type . RPAREN
    (38) ParametersList -> Type .
    (44) ParameterDecl -> Type .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 158
    COMMA           reduce using rule 44 (ParameterDecl -> Type .)

  ! RPAREN          [ reduce using rule 38 (ParametersList -> Type .) ]


state 152

    (35) Parameters -> LPAREN ParameterListOpt RPAREN .

    LPAREN          reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    INT             reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    FLOAT           reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRING          reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    BOOL            reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    COMPLEX         reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    TYPE            reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    IDENT           reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LBRACK          reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRUCT          reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    MUL             reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LBRACE          reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    SEMICOLON       reduce using rule 35 (Parameters -> LPAREN ParameterListOpt RPAREN .)


state 153

    (39) ParametersList -> IdentifierList Type .
    (43) ParameterDecl -> IdentifierList Type .

    RPAREN          reduce using rule 39 (ParametersList -> IdentifierList Type .)
    COMMA           reduce using rule 43 (ParameterDecl -> IdentifierList Type .)


state 154

    (41) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA . ParameterDecl
    (43) ParameterDecl -> . IdentifierList Type
    (44) ParameterDecl -> . Type
    (61) IdentifierList -> . IDENT IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . STRING
    (10) TypeToken -> . BOOL
    (11) TypeToken -> . COMPLEX
    (12) TypeToken -> . TYPE IDENT
    (98) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    IDENT           shift and go to state 105
    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71
    COMPLEX         shift and go to state 72
    TYPE            shift and go to state 73
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    ParameterDecl                  shift and go to state 229
    IdentifierList                 shift and go to state 230
    Type                           shift and go to state 231
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 155

    (42) ParameterDeclCommaRep -> ParameterDecl COMMA . ParameterDecl
    (43) ParameterDecl -> . IdentifierList Type
    (44) ParameterDecl -> . Type
    (61) IdentifierList -> . IDENT IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . STRING
    (10) TypeToken -> . BOOL
    (11) TypeToken -> . COMPLEX
    (12) TypeToken -> . TYPE IDENT
    (98) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    IDENT           shift and go to state 105
    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71
    COMPLEX         shift and go to state 72
    TYPE            shift and go to state 73
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    ParameterDecl                  shift and go to state 232
    IdentifierList                 shift and go to state 230
    Type                           shift and go to state 231
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 156

    (56) ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON .

    RPAREN          reduce using rule 56 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON .)
    IDENT           reduce using rule 56 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON .)


state 157

    (59) TypeExprListOpt -> TypeOpt ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 59 (TypeExprListOpt -> TypeOpt ASSIGN ExpressionList .)


state 158

    (4) Type -> LPAREN Type RPAREN .

    ASSIGN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    LBRACE          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    RPAREN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    STRING_LITERAL  reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    COLON           reduce using rule 4 (Type -> LPAREN Type RPAREN .)


state 159

    (98) QualifiedIdent -> IDENT PERIOD TypeName .

    ASSIGN          reduce using rule 98 (QualifiedIdent -> IDENT PERIOD TypeName .)
    SEMICOLON       reduce using rule 98 (QualifiedIdent -> IDENT PERIOD TypeName .)
    LBRACE          reduce using rule 98 (QualifiedIdent -> IDENT PERIOD TypeName .)
    RPAREN          reduce using rule 98 (QualifiedIdent -> IDENT PERIOD TypeName .)
    COMMA           reduce using rule 98 (QualifiedIdent -> IDENT PERIOD TypeName .)
    STRING_LITERAL  reduce using rule 98 (QualifiedIdent -> IDENT PERIOD TypeName .)
    COLON           reduce using rule 98 (QualifiedIdent -> IDENT PERIOD TypeName .)


state 160

    (18) ArrayType -> LBRACK ArrayLength RBRACK . ElementType
    (20) ElementType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . STRING
    (10) TypeToken -> . BOOL
    (11) TypeToken -> . COMPLEX
    (12) TypeToken -> . TYPE IDENT
    (98) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71
    COMPLEX         shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    ElementType                    shift and go to state 233
    Type                           shift and go to state 234
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 161

    (134) Expression -> Expression BinaryOp . Expression
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    Expression                     shift and go to state 235
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 162

    (140) BinaryOp -> LOR .

    NOT             reduce using rule 140 (BinaryOp -> LOR .)
    ADD             reduce using rule 140 (BinaryOp -> LOR .)
    SUB             reduce using rule 140 (BinaryOp -> LOR .)
    MUL             reduce using rule 140 (BinaryOp -> LOR .)
    AND             reduce using rule 140 (BinaryOp -> LOR .)
    LPAREN          reduce using rule 140 (BinaryOp -> LOR .)
    IDENT           reduce using rule 140 (BinaryOp -> LOR .)
    INT_LITERAL     reduce using rule 140 (BinaryOp -> LOR .)
    FLOAT_LITERAL   reduce using rule 140 (BinaryOp -> LOR .)
    STRING_LITERAL  reduce using rule 140 (BinaryOp -> LOR .)
    IMAG            reduce using rule 140 (BinaryOp -> LOR .)


state 163

    (141) BinaryOp -> LAND .

    NOT             reduce using rule 141 (BinaryOp -> LAND .)
    ADD             reduce using rule 141 (BinaryOp -> LAND .)
    SUB             reduce using rule 141 (BinaryOp -> LAND .)
    MUL             reduce using rule 141 (BinaryOp -> LAND .)
    AND             reduce using rule 141 (BinaryOp -> LAND .)
    LPAREN          reduce using rule 141 (BinaryOp -> LAND .)
    IDENT           reduce using rule 141 (BinaryOp -> LAND .)
    INT_LITERAL     reduce using rule 141 (BinaryOp -> LAND .)
    FLOAT_LITERAL   reduce using rule 141 (BinaryOp -> LAND .)
    STRING_LITERAL  reduce using rule 141 (BinaryOp -> LAND .)
    IMAG            reduce using rule 141 (BinaryOp -> LAND .)


state 164

    (142) BinaryOp -> RelOp .

    NOT             reduce using rule 142 (BinaryOp -> RelOp .)
    ADD             reduce using rule 142 (BinaryOp -> RelOp .)
    SUB             reduce using rule 142 (BinaryOp -> RelOp .)
    MUL             reduce using rule 142 (BinaryOp -> RelOp .)
    AND             reduce using rule 142 (BinaryOp -> RelOp .)
    LPAREN          reduce using rule 142 (BinaryOp -> RelOp .)
    IDENT           reduce using rule 142 (BinaryOp -> RelOp .)
    INT_LITERAL     reduce using rule 142 (BinaryOp -> RelOp .)
    FLOAT_LITERAL   reduce using rule 142 (BinaryOp -> RelOp .)
    STRING_LITERAL  reduce using rule 142 (BinaryOp -> RelOp .)
    IMAG            reduce using rule 142 (BinaryOp -> RelOp .)


state 165

    (143) BinaryOp -> AddMulOp .

    NOT             reduce using rule 143 (BinaryOp -> AddMulOp .)
    ADD             reduce using rule 143 (BinaryOp -> AddMulOp .)
    SUB             reduce using rule 143 (BinaryOp -> AddMulOp .)
    MUL             reduce using rule 143 (BinaryOp -> AddMulOp .)
    AND             reduce using rule 143 (BinaryOp -> AddMulOp .)
    LPAREN          reduce using rule 143 (BinaryOp -> AddMulOp .)
    IDENT           reduce using rule 143 (BinaryOp -> AddMulOp .)
    INT_LITERAL     reduce using rule 143 (BinaryOp -> AddMulOp .)
    FLOAT_LITERAL   reduce using rule 143 (BinaryOp -> AddMulOp .)
    STRING_LITERAL  reduce using rule 143 (BinaryOp -> AddMulOp .)
    IMAG            reduce using rule 143 (BinaryOp -> AddMulOp .)


state 166

    (144) RelOp -> EQL .

    NOT             reduce using rule 144 (RelOp -> EQL .)
    ADD             reduce using rule 144 (RelOp -> EQL .)
    SUB             reduce using rule 144 (RelOp -> EQL .)
    MUL             reduce using rule 144 (RelOp -> EQL .)
    AND             reduce using rule 144 (RelOp -> EQL .)
    LPAREN          reduce using rule 144 (RelOp -> EQL .)
    IDENT           reduce using rule 144 (RelOp -> EQL .)
    INT_LITERAL     reduce using rule 144 (RelOp -> EQL .)
    FLOAT_LITERAL   reduce using rule 144 (RelOp -> EQL .)
    STRING_LITERAL  reduce using rule 144 (RelOp -> EQL .)
    IMAG            reduce using rule 144 (RelOp -> EQL .)


state 167

    (145) RelOp -> NEQ .

    NOT             reduce using rule 145 (RelOp -> NEQ .)
    ADD             reduce using rule 145 (RelOp -> NEQ .)
    SUB             reduce using rule 145 (RelOp -> NEQ .)
    MUL             reduce using rule 145 (RelOp -> NEQ .)
    AND             reduce using rule 145 (RelOp -> NEQ .)
    LPAREN          reduce using rule 145 (RelOp -> NEQ .)
    IDENT           reduce using rule 145 (RelOp -> NEQ .)
    INT_LITERAL     reduce using rule 145 (RelOp -> NEQ .)
    FLOAT_LITERAL   reduce using rule 145 (RelOp -> NEQ .)
    STRING_LITERAL  reduce using rule 145 (RelOp -> NEQ .)
    IMAG            reduce using rule 145 (RelOp -> NEQ .)


state 168

    (146) RelOp -> LSS .

    NOT             reduce using rule 146 (RelOp -> LSS .)
    ADD             reduce using rule 146 (RelOp -> LSS .)
    SUB             reduce using rule 146 (RelOp -> LSS .)
    MUL             reduce using rule 146 (RelOp -> LSS .)
    AND             reduce using rule 146 (RelOp -> LSS .)
    LPAREN          reduce using rule 146 (RelOp -> LSS .)
    IDENT           reduce using rule 146 (RelOp -> LSS .)
    INT_LITERAL     reduce using rule 146 (RelOp -> LSS .)
    FLOAT_LITERAL   reduce using rule 146 (RelOp -> LSS .)
    STRING_LITERAL  reduce using rule 146 (RelOp -> LSS .)
    IMAG            reduce using rule 146 (RelOp -> LSS .)


state 169

    (147) RelOp -> GTR .

    NOT             reduce using rule 147 (RelOp -> GTR .)
    ADD             reduce using rule 147 (RelOp -> GTR .)
    SUB             reduce using rule 147 (RelOp -> GTR .)
    MUL             reduce using rule 147 (RelOp -> GTR .)
    AND             reduce using rule 147 (RelOp -> GTR .)
    LPAREN          reduce using rule 147 (RelOp -> GTR .)
    IDENT           reduce using rule 147 (RelOp -> GTR .)
    INT_LITERAL     reduce using rule 147 (RelOp -> GTR .)
    FLOAT_LITERAL   reduce using rule 147 (RelOp -> GTR .)
    STRING_LITERAL  reduce using rule 147 (RelOp -> GTR .)
    IMAG            reduce using rule 147 (RelOp -> GTR .)


state 170

    (148) RelOp -> LEQ .

    NOT             reduce using rule 148 (RelOp -> LEQ .)
    ADD             reduce using rule 148 (RelOp -> LEQ .)
    SUB             reduce using rule 148 (RelOp -> LEQ .)
    MUL             reduce using rule 148 (RelOp -> LEQ .)
    AND             reduce using rule 148 (RelOp -> LEQ .)
    LPAREN          reduce using rule 148 (RelOp -> LEQ .)
    IDENT           reduce using rule 148 (RelOp -> LEQ .)
    INT_LITERAL     reduce using rule 148 (RelOp -> LEQ .)
    FLOAT_LITERAL   reduce using rule 148 (RelOp -> LEQ .)
    STRING_LITERAL  reduce using rule 148 (RelOp -> LEQ .)
    IMAG            reduce using rule 148 (RelOp -> LEQ .)


state 171

    (149) RelOp -> GEQ .

    NOT             reduce using rule 149 (RelOp -> GEQ .)
    ADD             reduce using rule 149 (RelOp -> GEQ .)
    SUB             reduce using rule 149 (RelOp -> GEQ .)
    MUL             reduce using rule 149 (RelOp -> GEQ .)
    AND             reduce using rule 149 (RelOp -> GEQ .)
    LPAREN          reduce using rule 149 (RelOp -> GEQ .)
    IDENT           reduce using rule 149 (RelOp -> GEQ .)
    INT_LITERAL     reduce using rule 149 (RelOp -> GEQ .)
    FLOAT_LITERAL   reduce using rule 149 (RelOp -> GEQ .)
    STRING_LITERAL  reduce using rule 149 (RelOp -> GEQ .)
    IMAG            reduce using rule 149 (RelOp -> GEQ .)


state 172

    (150) AddMulOp -> UnaryOp .

    NOT             reduce using rule 150 (AddMulOp -> UnaryOp .)
    ADD             reduce using rule 150 (AddMulOp -> UnaryOp .)
    SUB             reduce using rule 150 (AddMulOp -> UnaryOp .)
    MUL             reduce using rule 150 (AddMulOp -> UnaryOp .)
    AND             reduce using rule 150 (AddMulOp -> UnaryOp .)
    LPAREN          reduce using rule 150 (AddMulOp -> UnaryOp .)
    IDENT           reduce using rule 150 (AddMulOp -> UnaryOp .)
    INT_LITERAL     reduce using rule 150 (AddMulOp -> UnaryOp .)
    FLOAT_LITERAL   reduce using rule 150 (AddMulOp -> UnaryOp .)
    STRING_LITERAL  reduce using rule 150 (AddMulOp -> UnaryOp .)
    IMAG            reduce using rule 150 (AddMulOp -> UnaryOp .)


state 173

    (151) AddMulOp -> OR .

    NOT             reduce using rule 151 (AddMulOp -> OR .)
    ADD             reduce using rule 151 (AddMulOp -> OR .)
    SUB             reduce using rule 151 (AddMulOp -> OR .)
    MUL             reduce using rule 151 (AddMulOp -> OR .)
    AND             reduce using rule 151 (AddMulOp -> OR .)
    LPAREN          reduce using rule 151 (AddMulOp -> OR .)
    IDENT           reduce using rule 151 (AddMulOp -> OR .)
    INT_LITERAL     reduce using rule 151 (AddMulOp -> OR .)
    FLOAT_LITERAL   reduce using rule 151 (AddMulOp -> OR .)
    STRING_LITERAL  reduce using rule 151 (AddMulOp -> OR .)
    IMAG            reduce using rule 151 (AddMulOp -> OR .)


state 174

    (152) AddMulOp -> XOR .

    NOT             reduce using rule 152 (AddMulOp -> XOR .)
    ADD             reduce using rule 152 (AddMulOp -> XOR .)
    SUB             reduce using rule 152 (AddMulOp -> XOR .)
    MUL             reduce using rule 152 (AddMulOp -> XOR .)
    AND             reduce using rule 152 (AddMulOp -> XOR .)
    LPAREN          reduce using rule 152 (AddMulOp -> XOR .)
    IDENT           reduce using rule 152 (AddMulOp -> XOR .)
    INT_LITERAL     reduce using rule 152 (AddMulOp -> XOR .)
    FLOAT_LITERAL   reduce using rule 152 (AddMulOp -> XOR .)
    STRING_LITERAL  reduce using rule 152 (AddMulOp -> XOR .)
    IMAG            reduce using rule 152 (AddMulOp -> XOR .)


state 175

    (153) AddMulOp -> QUO .

    NOT             reduce using rule 153 (AddMulOp -> QUO .)
    ADD             reduce using rule 153 (AddMulOp -> QUO .)
    SUB             reduce using rule 153 (AddMulOp -> QUO .)
    MUL             reduce using rule 153 (AddMulOp -> QUO .)
    AND             reduce using rule 153 (AddMulOp -> QUO .)
    LPAREN          reduce using rule 153 (AddMulOp -> QUO .)
    IDENT           reduce using rule 153 (AddMulOp -> QUO .)
    INT_LITERAL     reduce using rule 153 (AddMulOp -> QUO .)
    FLOAT_LITERAL   reduce using rule 153 (AddMulOp -> QUO .)
    STRING_LITERAL  reduce using rule 153 (AddMulOp -> QUO .)
    IMAG            reduce using rule 153 (AddMulOp -> QUO .)


state 176

    (154) AddMulOp -> REM .

    NOT             reduce using rule 154 (AddMulOp -> REM .)
    ADD             reduce using rule 154 (AddMulOp -> REM .)
    SUB             reduce using rule 154 (AddMulOp -> REM .)
    MUL             reduce using rule 154 (AddMulOp -> REM .)
    AND             reduce using rule 154 (AddMulOp -> REM .)
    LPAREN          reduce using rule 154 (AddMulOp -> REM .)
    IDENT           reduce using rule 154 (AddMulOp -> REM .)
    INT_LITERAL     reduce using rule 154 (AddMulOp -> REM .)
    FLOAT_LITERAL   reduce using rule 154 (AddMulOp -> REM .)
    STRING_LITERAL  reduce using rule 154 (AddMulOp -> REM .)
    IMAG            reduce using rule 154 (AddMulOp -> REM .)


state 177

    (155) AddMulOp -> SHL .

    NOT             reduce using rule 155 (AddMulOp -> SHL .)
    ADD             reduce using rule 155 (AddMulOp -> SHL .)
    SUB             reduce using rule 155 (AddMulOp -> SHL .)
    MUL             reduce using rule 155 (AddMulOp -> SHL .)
    AND             reduce using rule 155 (AddMulOp -> SHL .)
    LPAREN          reduce using rule 155 (AddMulOp -> SHL .)
    IDENT           reduce using rule 155 (AddMulOp -> SHL .)
    INT_LITERAL     reduce using rule 155 (AddMulOp -> SHL .)
    FLOAT_LITERAL   reduce using rule 155 (AddMulOp -> SHL .)
    STRING_LITERAL  reduce using rule 155 (AddMulOp -> SHL .)
    IMAG            reduce using rule 155 (AddMulOp -> SHL .)


state 178

    (156) AddMulOp -> SHR .

    NOT             reduce using rule 156 (AddMulOp -> SHR .)
    ADD             reduce using rule 156 (AddMulOp -> SHR .)
    SUB             reduce using rule 156 (AddMulOp -> SHR .)
    MUL             reduce using rule 156 (AddMulOp -> SHR .)
    AND             reduce using rule 156 (AddMulOp -> SHR .)
    LPAREN          reduce using rule 156 (AddMulOp -> SHR .)
    IDENT           reduce using rule 156 (AddMulOp -> SHR .)
    INT_LITERAL     reduce using rule 156 (AddMulOp -> SHR .)
    FLOAT_LITERAL   reduce using rule 156 (AddMulOp -> SHR .)
    STRING_LITERAL  reduce using rule 156 (AddMulOp -> SHR .)
    IMAG            reduce using rule 156 (AddMulOp -> SHR .)


state 179

    (118) PrimaryExpr -> PrimaryExpr Selector .

    PERIOD          reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACK          reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    LPAREN          reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    LOR             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    LAND            reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    EQL             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    NEQ             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    LSS             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    GTR             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    LEQ             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    GEQ             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    OR              reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    QUO             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    REM             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    SHL             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    SHR             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    ADD             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    SUB             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    MUL             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    AND             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    RBRACK          reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    COMMA           reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    SEMICOLON       reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    RPAREN          reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    INC             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    DEC             reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    ADD_ASSIGN      reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    SUB_ASSIGN      reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    MUL_ASSIGN      reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    QUO_ASSIGN      reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    REM_ASSIGN      reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    AND_ASSIGN      reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    OR_ASSIGN       reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR_ASSIGN      reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    SHL_ASSIGN      reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    SHR_ASSIGN      reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    ASSIGN          reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    COLON           reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACE          reduce using rule 118 (PrimaryExpr -> PrimaryExpr Selector .)


state 180

    (119) PrimaryExpr -> PrimaryExpr Index .

    PERIOD          reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACK          reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    LPAREN          reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    LOR             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    LAND            reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    EQL             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    NEQ             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    LSS             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    GTR             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    LEQ             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    GEQ             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    XOR             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    QUO             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    REM             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    SHL             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    SHR             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    ADD             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    SUB             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    MUL             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    AND             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    RBRACK          reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOLON       reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    RPAREN          reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    INC             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    DEC             reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    ADD_ASSIGN      reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    SUB_ASSIGN      reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    MUL_ASSIGN      reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    QUO_ASSIGN      reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    REM_ASSIGN      reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    AND_ASSIGN      reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    OR_ASSIGN       reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    XOR_ASSIGN      reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    SHL_ASSIGN      reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    SHR_ASSIGN      reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    ASSIGN          reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACE          reduce using rule 119 (PrimaryExpr -> PrimaryExpr Index .)


state 181

    (120) PrimaryExpr -> PrimaryExpr Slice .

    PERIOD          reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACK          reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    LPAREN          reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    LOR             reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    LAND            reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    EQL             reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    NEQ             reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    LSS             reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    GTR             reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    LEQ             reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    GEQ             reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR             reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    QUO             reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    REM             reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    SHL             reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    SHR             reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    ADD             reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    SUB             reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    MUL             reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    AND             reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    RBRACK          reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOLON       reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    RPAREN          reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    INC             reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    DEC             reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    ADD_ASSIGN      reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    SUB_ASSIGN      reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    MUL_ASSIGN      reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    QUO_ASSIGN      reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    REM_ASSIGN      reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_ASSIGN      reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    OR_ASSIGN       reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR_ASSIGN      reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    SHL_ASSIGN      reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    SHR_ASSIGN      reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    ASSIGN          reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACE          reduce using rule 120 (PrimaryExpr -> PrimaryExpr Slice .)


state 182

    (121) PrimaryExpr -> PrimaryExpr TypeAssertion .

    PERIOD          reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LBRACK          reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LPAREN          reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LOR             reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LAND            reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    EQL             reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    NEQ             reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LSS             reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    GTR             reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LEQ             reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    GEQ             reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    OR              reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    XOR             reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    QUO             reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    REM             reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SHL             reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SHR             reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ADD             reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SUB             reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MUL             reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    AND             reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RBRACK          reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COMMA           reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SEMICOLON       reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RPAREN          reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    INC             reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DEC             reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ADD_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SUB_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MUL_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    QUO_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    REM_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    AND_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    OR_ASSIGN       reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    XOR_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SHL_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SHR_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ASSIGN          reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COLON           reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LBRACE          reduce using rule 121 (PrimaryExpr -> PrimaryExpr TypeAssertion .)


state 183

    (122) PrimaryExpr -> PrimaryExpr Arguments .

    PERIOD          reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACK          reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    LPAREN          reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    LOR             reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    LAND            reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQL             reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    NEQ             reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    LSS             reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    GTR             reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEQ             reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    GEQ             reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR             reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    QUO             reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    REM             reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHL             reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHR             reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD             reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB             reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL             reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND             reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACK          reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOLON       reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    RPAREN          reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    INC             reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    DEC             reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD_ASSIGN      reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB_ASSIGN      reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL_ASSIGN      reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    QUO_ASSIGN      reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    REM_ASSIGN      reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_ASSIGN      reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR_ASSIGN       reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR_ASSIGN      reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHL_ASSIGN      reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHR_ASSIGN      reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    ASSIGN          reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACE          reduce using rule 122 (PrimaryExpr -> PrimaryExpr Arguments .)


state 184

    (123) Selector -> PERIOD . IDENT
    (127) TypeAssertion -> PERIOD . LPAREN Type RPAREN

    IDENT           shift and go to state 236
    LPAREN          shift and go to state 237


state 185

    (124) Index -> LBRACK . Expression RBRACK
    (125) Slice -> LBRACK . ExpressionOpt COLON ExpressionOpt RBRACK
    (126) Slice -> LBRACK . ExpressionOpt COLON Expression COLON Expression RBRACK
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (135) ExpressionOpt -> . Expression
    (136) ExpressionOpt -> . epsilon
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (258) epsilon -> .
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    NOT             shift and go to state 118
    COLON           reduce using rule 258 (epsilon -> .)
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    Expression                     shift and go to state 238
    ExpressionOpt                  shift and go to state 239
    UnaryExpr                      shift and go to state 115
    epsilon                        shift and go to state 240
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 186

    (128) Arguments -> LPAREN . ExpressionListTypeOpt RPAREN
    (129) ExpressionListTypeOpt -> . ExpressionList
    (130) ExpressionListTypeOpt -> . epsilon
    (64) ExpressionList -> . Expression ExpressionRep
    (258) epsilon -> .
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    RPAREN          reduce using rule 258 (epsilon -> .)
    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    ExpressionListTypeOpt          shift and go to state 241
    ExpressionList                 shift and go to state 242
    epsilon                        shift and go to state 243
    Expression                     shift and go to state 146
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 187

    (138) UnaryExpr -> UnaryOp UnaryExpr .

    LOR             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    LAND            reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQL             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    NEQ             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    LSS             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    GTR             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    LEQ             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    GEQ             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR              reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    QUO             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    REM             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHL             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHR             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    ADD             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    SUB             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    MUL             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    RBRACK          reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMMA           reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    SEMICOLON       reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    RPAREN          reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    INC             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    DEC             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    ADD_ASSIGN      reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    SUB_ASSIGN      reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    MUL_ASSIGN      reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    QUO_ASSIGN      reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    REM_ASSIGN      reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_ASSIGN      reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR_ASSIGN       reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR_ASSIGN      reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHL_ASSIGN      reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHR_ASSIGN      reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    ASSIGN          reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    COLON           reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    LBRACE          reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)


state 188

    (139) UnaryExpr -> NOT UnaryExpr .

    LOR             reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    LAND            reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    EQL             reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    NEQ             reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    LSS             reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    GTR             reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    LEQ             reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    GEQ             reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    OR              reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    XOR             reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    QUO             reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    REM             reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    SHL             reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    SHR             reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    ADD             reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    SUB             reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    MUL             reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    AND             reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    RBRACK          reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    COMMA           reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    SEMICOLON       reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    RPAREN          reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    INC             reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    DEC             reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    ADD_ASSIGN      reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    SUB_ASSIGN      reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    MUL_ASSIGN      reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    QUO_ASSIGN      reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    REM_ASSIGN      reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    AND_ASSIGN      reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    OR_ASSIGN       reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    XOR_ASSIGN      reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    SHL_ASSIGN      reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    SHR_ASSIGN      reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    ASSIGN          reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    COLON           reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)
    LBRACE          reduce using rule 139 (UnaryExpr -> NOT UnaryExpr .)


state 189

    (91) Operand -> LPAREN Expression . RPAREN
    (134) Expression -> Expression . BinaryOp Expression
    (140) BinaryOp -> . LOR
    (141) BinaryOp -> . LAND
    (142) BinaryOp -> . RelOp
    (143) BinaryOp -> . AddMulOp
    (144) RelOp -> . EQL
    (145) RelOp -> . NEQ
    (146) RelOp -> . LSS
    (147) RelOp -> . GTR
    (148) RelOp -> . LEQ
    (149) RelOp -> . GEQ
    (150) AddMulOp -> . UnaryOp
    (151) AddMulOp -> . OR
    (152) AddMulOp -> . XOR
    (153) AddMulOp -> . QUO
    (154) AddMulOp -> . REM
    (155) AddMulOp -> . SHL
    (156) AddMulOp -> . SHR
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND

    RPAREN          shift and go to state 244
    LOR             shift and go to state 162
    LAND            shift and go to state 163
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    GTR             shift and go to state 169
    LEQ             shift and go to state 170
    GEQ             shift and go to state 171
    OR              shift and go to state 173
    XOR             shift and go to state 174
    QUO             shift and go to state 175
    REM             shift and go to state 176
    SHL             shift and go to state 177
    SHR             shift and go to state 178
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 161
    RelOp                          shift and go to state 164
    AddMulOp                       shift and go to state 165
    UnaryOp                        shift and go to state 172

state 190

    (21) StructType -> STRUCT LBRACE FieldDeclRep . RBRACE
    (22) FieldDeclRep -> FieldDeclRep . FieldDecl SEMICOLON
    (24) FieldDecl -> . IdentifierList Type TagOpt
    (61) IdentifierList -> . IDENT IdentifierRep

    RBRACE          shift and go to state 245
    IDENT           shift and go to state 37

    FieldDecl                      shift and go to state 246
    IdentifierList                 shift and go to state 247

state 191

    (23) FieldDeclRep -> epsilon .

    RBRACE          reduce using rule 23 (FieldDeclRep -> epsilon .)
    IDENT           reduce using rule 23 (FieldDeclRep -> epsilon .)


state 192

    (62) IdentifierRep -> IdentifierRep COMMA IDENT .

    COMMA           reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    LPAREN          reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    INT             reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    FLOAT           reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    STRING          reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    BOOL            reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    COMPLEX         reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    TYPE            reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    IDENT           reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    LBRACK          reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    STRUCT          reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    MUL             reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    ASSIGN          reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)
    SEMICOLON       reduce using rule 62 (IdentifierRep -> IdentifierRep COMMA IDENT .)


state 193

    (69) TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON .

    RPAREN          reduce using rule 69 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON .)
    IDENT           reduce using rule 69 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON .)


state 194

    (77) VarSpecRep -> VarSpecRep VarSpec SEMICOLON .

    RPAREN          reduce using rule 77 (VarSpecRep -> VarSpecRep VarSpec SEMICOLON .)
    IDENT           reduce using rule 77 (VarSpecRep -> VarSpecRep VarSpec SEMICOLON .)


state 195

    (81) ExpressionListOpt -> ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 81 (ExpressionListOpt -> ASSIGN ExpressionList .)


state 196

    (64) ExpressionList -> Expression ExpressionRep .
    (65) ExpressionRep -> ExpressionRep . COMMA Expression

    SEMICOLON       reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    ADD_ASSIGN      reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    SUB_ASSIGN      reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    MUL_ASSIGN      reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    QUO_ASSIGN      reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    REM_ASSIGN      reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    AND_ASSIGN      reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    OR_ASSIGN       reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    XOR_ASSIGN      reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    SHL_ASSIGN      reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    SHR_ASSIGN      reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    ASSIGN          reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    RPAREN          reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    LBRACE          reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    COLON           reduce using rule 64 (ExpressionList -> Expression ExpressionRep .)
    COMMA           shift and go to state 248


state 197

    (66) ExpressionRep -> epsilon .

    COMMA           reduce using rule 66 (ExpressionRep -> epsilon .)
    SEMICOLON       reduce using rule 66 (ExpressionRep -> epsilon .)
    RPAREN          reduce using rule 66 (ExpressionRep -> epsilon .)
    LBRACE          reduce using rule 66 (ExpressionRep -> epsilon .)
    COLON           reduce using rule 66 (ExpressionRep -> epsilon .)
    ADD_ASSIGN      reduce using rule 66 (ExpressionRep -> epsilon .)
    SUB_ASSIGN      reduce using rule 66 (ExpressionRep -> epsilon .)
    MUL_ASSIGN      reduce using rule 66 (ExpressionRep -> epsilon .)
    QUO_ASSIGN      reduce using rule 66 (ExpressionRep -> epsilon .)
    REM_ASSIGN      reduce using rule 66 (ExpressionRep -> epsilon .)
    AND_ASSIGN      reduce using rule 66 (ExpressionRep -> epsilon .)
    OR_ASSIGN       reduce using rule 66 (ExpressionRep -> epsilon .)
    XOR_ASSIGN      reduce using rule 66 (ExpressionRep -> epsilon .)
    SHL_ASSIGN      reduce using rule 66 (ExpressionRep -> epsilon .)
    SHR_ASSIGN      reduce using rule 66 (ExpressionRep -> epsilon .)
    ASSIGN          reduce using rule 66 (ExpressionRep -> epsilon .)


state 198

    (45) Block -> LBRACE StatementList RBRACE .

    SEMICOLON       reduce using rule 45 (Block -> LBRACE StatementList RBRACE .)
    ELSE            reduce using rule 45 (Block -> LBRACE StatementList RBRACE .)


state 199

    (47) StatementRep -> StatementRep Statement . SEMICOLON

    SEMICOLON       shift and go to state 249


state 200

    (161) Statement -> Declaration .

    SEMICOLON       reduce using rule 161 (Statement -> Declaration .)


state 201

    (162) Statement -> LabeledStmt .

    SEMICOLON       reduce using rule 162 (Statement -> LabeledStmt .)


state 202

    (163) Statement -> SimpleStmt .

    SEMICOLON       reduce using rule 163 (Statement -> SimpleStmt .)


state 203

    (164) Statement -> ReturnStmt .

    SEMICOLON       reduce using rule 164 (Statement -> ReturnStmt .)


state 204

    (165) Statement -> BreakStmt .

    SEMICOLON       reduce using rule 165 (Statement -> BreakStmt .)


state 205

    (166) Statement -> ContinueStmt .

    SEMICOLON       reduce using rule 166 (Statement -> ContinueStmt .)


state 206

    (167) Statement -> GotoStmt .

    SEMICOLON       reduce using rule 167 (Statement -> GotoStmt .)


state 207

    (168) Statement -> Block .

    SEMICOLON       reduce using rule 168 (Statement -> Block .)


state 208

    (169) Statement -> IfStmt .

    SEMICOLON       reduce using rule 169 (Statement -> IfStmt .)


state 209

    (170) Statement -> SwitchStmt .

    SEMICOLON       reduce using rule 170 (Statement -> SwitchStmt .)


state 210

    (171) Statement -> ForStmt .

    SEMICOLON       reduce using rule 171 (Statement -> ForStmt .)


state 211

    (177) LabeledStmt -> Label . COLON Statement

    COLON           shift and go to state 250


state 212

    (172) SimpleStmt -> epsilon .

    SEMICOLON       reduce using rule 172 (SimpleStmt -> epsilon .)
    LBRACE          reduce using rule 172 (SimpleStmt -> epsilon .)


state 213

    (173) SimpleStmt -> ExpressionStmt .

    SEMICOLON       reduce using rule 173 (SimpleStmt -> ExpressionStmt .)
    LBRACE          reduce using rule 173 (SimpleStmt -> ExpressionStmt .)


state 214

    (174) SimpleStmt -> IncDecStmt .

    SEMICOLON       reduce using rule 174 (SimpleStmt -> IncDecStmt .)
    LBRACE          reduce using rule 174 (SimpleStmt -> IncDecStmt .)


state 215

    (175) SimpleStmt -> Assignment .

    SEMICOLON       reduce using rule 175 (SimpleStmt -> Assignment .)
    LBRACE          reduce using rule 175 (SimpleStmt -> Assignment .)


state 216

    (176) SimpleStmt -> ShortVarDecl .

    SEMICOLON       reduce using rule 176 (SimpleStmt -> ShortVarDecl .)
    LBRACE          reduce using rule 176 (SimpleStmt -> ShortVarDecl .)


state 217

    (234) ReturnStmt -> RETURN . ExpressionListPureOpt
    (235) ExpressionListPureOpt -> . ExpressionList
    (236) ExpressionListPureOpt -> . epsilon
    (64) ExpressionList -> . Expression ExpressionRep
    (258) epsilon -> .
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    SEMICOLON       reduce using rule 258 (epsilon -> .)
    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    ExpressionListPureOpt          shift and go to state 251
    ExpressionList                 shift and go to state 252
    epsilon                        shift and go to state 253
    Expression                     shift and go to state 146
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 218

    (237) BreakStmt -> BREAK . LabelOpt
    (239) LabelOpt -> . Label
    (240) LabelOpt -> . epsilon
    (178) Label -> . IDENT
    (258) epsilon -> .

    IDENT           shift and go to state 257
    SEMICOLON       reduce using rule 258 (epsilon -> .)

    LabelOpt                       shift and go to state 254
    Label                          shift and go to state 255
    epsilon                        shift and go to state 256

state 219

    (238) ContinueStmt -> CONTINUE . LabelOpt
    (239) LabelOpt -> . Label
    (240) LabelOpt -> . epsilon
    (178) Label -> . IDENT
    (258) epsilon -> .

    IDENT           shift and go to state 257
    SEMICOLON       reduce using rule 258 (epsilon -> .)

    LabelOpt                       shift and go to state 258
    Label                          shift and go to state 255
    epsilon                        shift and go to state 256

state 220

    (241) GotoStmt -> GOTO . Label
    (178) Label -> . IDENT

    IDENT           shift and go to state 257

    Label                          shift and go to state 259

state 221

    (195) IfStmt -> IF . Expression Block ElseOpt
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    Expression                     shift and go to state 260
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 222

    (179) ExpressionStmt -> Expression .
    (180) IncDecStmt -> Expression . INC
    (181) IncDecStmt -> Expression . DEC
    (134) Expression -> Expression . BinaryOp Expression
    (64) ExpressionList -> Expression . ExpressionRep
    (140) BinaryOp -> . LOR
    (141) BinaryOp -> . LAND
    (142) BinaryOp -> . RelOp
    (143) BinaryOp -> . AddMulOp
    (65) ExpressionRep -> . ExpressionRep COMMA Expression
    (66) ExpressionRep -> . epsilon
    (144) RelOp -> . EQL
    (145) RelOp -> . NEQ
    (146) RelOp -> . LSS
    (147) RelOp -> . GTR
    (148) RelOp -> . LEQ
    (149) RelOp -> . GEQ
    (150) AddMulOp -> . UnaryOp
    (151) AddMulOp -> . OR
    (152) AddMulOp -> . XOR
    (153) AddMulOp -> . QUO
    (154) AddMulOp -> . REM
    (155) AddMulOp -> . SHL
    (156) AddMulOp -> . SHR
    (258) epsilon -> .
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND

    SEMICOLON       reduce using rule 179 (ExpressionStmt -> Expression .)
    LBRACE          reduce using rule 179 (ExpressionStmt -> Expression .)
    INC             shift and go to state 261
    DEC             shift and go to state 262
    LOR             shift and go to state 162
    LAND            shift and go to state 163
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    GTR             shift and go to state 169
    LEQ             shift and go to state 170
    GEQ             shift and go to state 171
    OR              shift and go to state 173
    XOR             shift and go to state 174
    QUO             shift and go to state 175
    REM             shift and go to state 176
    SHL             shift and go to state 177
    SHR             shift and go to state 178
    COMMA           reduce using rule 258 (epsilon -> .)
    ADD_ASSIGN      reduce using rule 258 (epsilon -> .)
    SUB_ASSIGN      reduce using rule 258 (epsilon -> .)
    MUL_ASSIGN      reduce using rule 258 (epsilon -> .)
    QUO_ASSIGN      reduce using rule 258 (epsilon -> .)
    REM_ASSIGN      reduce using rule 258 (epsilon -> .)
    AND_ASSIGN      reduce using rule 258 (epsilon -> .)
    OR_ASSIGN       reduce using rule 258 (epsilon -> .)
    XOR_ASSIGN      reduce using rule 258 (epsilon -> .)
    SHL_ASSIGN      reduce using rule 258 (epsilon -> .)
    SHR_ASSIGN      reduce using rule 258 (epsilon -> .)
    ASSIGN          reduce using rule 258 (epsilon -> .)
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 161
    ExpressionRep                  shift and go to state 196
    RelOp                          shift and go to state 164
    AddMulOp                       shift and go to state 165
    epsilon                        shift and go to state 197
    UnaryOp                        shift and go to state 172

state 223

    (201) SwitchStmt -> ExprSwitchStmt .

    SEMICOLON       reduce using rule 201 (SwitchStmt -> ExprSwitchStmt .)


state 224

    (202) SwitchStmt -> TypeSwitchStmt .

    SEMICOLON       reduce using rule 202 (SwitchStmt -> TypeSwitchStmt .)


state 225

    (221) ForStmt -> FOR . ConditionBlockOpt Block
    (222) ConditionBlockOpt -> . epsilon
    (223) ConditionBlockOpt -> . Condition
    (224) ConditionBlockOpt -> . ForClause
    (225) ConditionBlockOpt -> . RangeClause
    (258) epsilon -> .
    (226) Condition -> . Expression
    (227) ForClause -> . SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt
    (230) RangeClause -> . ExpressionIdentListOpt RANGE Expression
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (172) SimpleStmt -> . epsilon
    (173) SimpleStmt -> . ExpressionStmt
    (174) SimpleStmt -> . IncDecStmt
    (175) SimpleStmt -> . Assignment
    (176) SimpleStmt -> . ShortVarDecl
    (231) ExpressionIdentListOpt -> . epsilon
    (232) ExpressionIdentListOpt -> . ExpressionIdentifier
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (179) ExpressionStmt -> . Expression
    (180) IncDecStmt -> . Expression INC
    (181) IncDecStmt -> . Expression DEC
    (182) Assignment -> . ExpressionList assign_op ExpressionList
    (83) ShortVarDecl -> . IDENT DEFINE Expression
    (233) ExpressionIdentifier -> . ExpressionList ASSIGN
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (64) ExpressionList -> . Expression ExpressionRep
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    LBRACE          reduce using rule 258 (epsilon -> .)
    SEMICOLON       reduce using rule 258 (epsilon -> .)
    RANGE           reduce using rule 258 (epsilon -> .)
    NOT             shift and go to state 118
    IDENT           shift and go to state 273
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    ConditionBlockOpt              shift and go to state 263
    epsilon                        shift and go to state 264
    Condition                      shift and go to state 265
    ForClause                      shift and go to state 266
    RangeClause                    shift and go to state 267
    Expression                     shift and go to state 268
    SimpleStmt                     shift and go to state 269
    ExpressionIdentListOpt         shift and go to state 270
    UnaryExpr                      shift and go to state 115
    ExpressionStmt                 shift and go to state 213
    IncDecStmt                     shift and go to state 214
    Assignment                     shift and go to state 215
    ShortVarDecl                   shift and go to state 216
    ExpressionIdentifier           shift and go to state 271
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    ExpressionList                 shift and go to state 272
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 226

    (178) Label -> IDENT .
    (83) ShortVarDecl -> IDENT . DEFINE Expression
    (97) OperandName -> IDENT .

    COLON           reduce using rule 178 (Label -> IDENT .)
    DEFINE          shift and go to state 274
    PERIOD          reduce using rule 97 (OperandName -> IDENT .)
    LBRACK          reduce using rule 97 (OperandName -> IDENT .)
    LPAREN          reduce using rule 97 (OperandName -> IDENT .)
    INC             reduce using rule 97 (OperandName -> IDENT .)
    DEC             reduce using rule 97 (OperandName -> IDENT .)
    LOR             reduce using rule 97 (OperandName -> IDENT .)
    LAND            reduce using rule 97 (OperandName -> IDENT .)
    EQL             reduce using rule 97 (OperandName -> IDENT .)
    NEQ             reduce using rule 97 (OperandName -> IDENT .)
    LSS             reduce using rule 97 (OperandName -> IDENT .)
    GTR             reduce using rule 97 (OperandName -> IDENT .)
    LEQ             reduce using rule 97 (OperandName -> IDENT .)
    GEQ             reduce using rule 97 (OperandName -> IDENT .)
    OR              reduce using rule 97 (OperandName -> IDENT .)
    XOR             reduce using rule 97 (OperandName -> IDENT .)
    QUO             reduce using rule 97 (OperandName -> IDENT .)
    REM             reduce using rule 97 (OperandName -> IDENT .)
    SHL             reduce using rule 97 (OperandName -> IDENT .)
    SHR             reduce using rule 97 (OperandName -> IDENT .)
    ADD             reduce using rule 97 (OperandName -> IDENT .)
    SUB             reduce using rule 97 (OperandName -> IDENT .)
    MUL             reduce using rule 97 (OperandName -> IDENT .)
    AND             reduce using rule 97 (OperandName -> IDENT .)
    COMMA           reduce using rule 97 (OperandName -> IDENT .)
    SEMICOLON       reduce using rule 97 (OperandName -> IDENT .)
    ADD_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    SUB_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    MUL_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    QUO_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    REM_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    AND_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    OR_ASSIGN       reduce using rule 97 (OperandName -> IDENT .)
    XOR_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    SHL_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    SHR_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    ASSIGN          reduce using rule 97 (OperandName -> IDENT .)


state 227

    (182) Assignment -> ExpressionList . assign_op ExpressionList
    (183) assign_op -> . AssignOp
    (184) AssignOp -> . ADD_ASSIGN
    (185) AssignOp -> . SUB_ASSIGN
    (186) AssignOp -> . MUL_ASSIGN
    (187) AssignOp -> . QUO_ASSIGN
    (188) AssignOp -> . REM_ASSIGN
    (189) AssignOp -> . AND_ASSIGN
    (190) AssignOp -> . OR_ASSIGN
    (191) AssignOp -> . XOR_ASSIGN
    (192) AssignOp -> . SHL_ASSIGN
    (193) AssignOp -> . SHR_ASSIGN
    (194) AssignOp -> . ASSIGN

    ADD_ASSIGN      shift and go to state 277
    SUB_ASSIGN      shift and go to state 278
    MUL_ASSIGN      shift and go to state 279
    QUO_ASSIGN      shift and go to state 280
    REM_ASSIGN      shift and go to state 281
    AND_ASSIGN      shift and go to state 282
    OR_ASSIGN       shift and go to state 283
    XOR_ASSIGN      shift and go to state 284
    SHL_ASSIGN      shift and go to state 285
    SHR_ASSIGN      shift and go to state 286
    ASSIGN          shift and go to state 287

    assign_op                      shift and go to state 275
    AssignOp                       shift and go to state 276

state 228

    (203) ExprSwitchStmt -> SWITCH . ExpressionOpt LBRACE ExprCaseClauseRep RBRACE
    (209) TypeSwitchStmt -> SWITCH . SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
    (135) ExpressionOpt -> . Expression
    (136) ExpressionOpt -> . epsilon
    (196) SimpleStmtOpt -> . SimpleStmt SEMICOLON
    (197) SimpleStmtOpt -> . epsilon
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (258) epsilon -> .
    (172) SimpleStmt -> . epsilon
    (173) SimpleStmt -> . ExpressionStmt
    (174) SimpleStmt -> . IncDecStmt
    (175) SimpleStmt -> . Assignment
    (176) SimpleStmt -> . ShortVarDecl
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (179) ExpressionStmt -> . Expression
    (180) IncDecStmt -> . Expression INC
    (181) IncDecStmt -> . Expression DEC
    (182) Assignment -> . ExpressionList assign_op ExpressionList
    (83) ShortVarDecl -> . IDENT DEFINE Expression
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (64) ExpressionList -> . Expression ExpressionRep
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INT_LITERAL resolved as shift
  ! shift/reduce conflict for FLOAT_LITERAL resolved as shift
  ! shift/reduce conflict for STRING_LITERAL resolved as shift
  ! shift/reduce conflict for IMAG resolved as shift
    LBRACE          reduce using rule 258 (epsilon -> .)
    SEMICOLON       reduce using rule 258 (epsilon -> .)
    NOT             shift and go to state 118
    IDENT           shift and go to state 273
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

  ! IDENT           [ reduce using rule 258 (epsilon -> .) ]
  ! LPAREN          [ reduce using rule 258 (epsilon -> .) ]
  ! INT_LITERAL     [ reduce using rule 258 (epsilon -> .) ]
  ! FLOAT_LITERAL   [ reduce using rule 258 (epsilon -> .) ]
  ! STRING_LITERAL  [ reduce using rule 258 (epsilon -> .) ]
  ! IMAG            [ reduce using rule 258 (epsilon -> .) ]

    ExpressionOpt                  shift and go to state 288
    SimpleStmtOpt                  shift and go to state 289
    Expression                     shift and go to state 290
    epsilon                        shift and go to state 291
    SimpleStmt                     shift and go to state 292
    UnaryExpr                      shift and go to state 115
    ExpressionStmt                 shift and go to state 213
    IncDecStmt                     shift and go to state 214
    Assignment                     shift and go to state 215
    ShortVarDecl                   shift and go to state 216
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    ExpressionList                 shift and go to state 227
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 229

    (41) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .

    COMMA           reduce using rule 41 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)
    RPAREN          reduce using rule 41 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)


state 230

    (43) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . STRING
    (10) TypeToken -> . BOOL
    (11) TypeToken -> . COMPLEX
    (12) TypeToken -> . TYPE IDENT
    (98) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71
    COMPLEX         shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Type                           shift and go to state 293
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 231

    (44) ParameterDecl -> Type .

    COMMA           reduce using rule 44 (ParameterDecl -> Type .)
    RPAREN          reduce using rule 44 (ParameterDecl -> Type .)


state 232

    (42) ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .

    COMMA           reduce using rule 42 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)
    RPAREN          reduce using rule 42 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)


state 233

    (18) ArrayType -> LBRACK ArrayLength RBRACK ElementType .

    ASSIGN          reduce using rule 18 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    SEMICOLON       reduce using rule 18 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    LBRACE          reduce using rule 18 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    RPAREN          reduce using rule 18 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    COMMA           reduce using rule 18 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    STRING_LITERAL  reduce using rule 18 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    COLON           reduce using rule 18 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)


state 234

    (20) ElementType -> Type .

    ASSIGN          reduce using rule 20 (ElementType -> Type .)
    SEMICOLON       reduce using rule 20 (ElementType -> Type .)
    LBRACE          reduce using rule 20 (ElementType -> Type .)
    RPAREN          reduce using rule 20 (ElementType -> Type .)
    COMMA           reduce using rule 20 (ElementType -> Type .)
    STRING_LITERAL  reduce using rule 20 (ElementType -> Type .)
    COLON           reduce using rule 20 (ElementType -> Type .)


state 235

    (134) Expression -> Expression BinaryOp Expression .
    (134) Expression -> Expression . BinaryOp Expression
    (140) BinaryOp -> . LOR
    (141) BinaryOp -> . LAND
    (142) BinaryOp -> . RelOp
    (143) BinaryOp -> . AddMulOp
    (144) RelOp -> . EQL
    (145) RelOp -> . NEQ
    (146) RelOp -> . LSS
    (147) RelOp -> . GTR
    (148) RelOp -> . LEQ
    (149) RelOp -> . GEQ
    (150) AddMulOp -> . UnaryOp
    (151) AddMulOp -> . OR
    (152) AddMulOp -> . XOR
    (153) AddMulOp -> . QUO
    (154) AddMulOp -> . REM
    (155) AddMulOp -> . SHL
    (156) AddMulOp -> . SHR
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND

  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for EQL resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for GTR resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for QUO resolved as shift
  ! shift/reduce conflict for REM resolved as shift
  ! shift/reduce conflict for SHL resolved as shift
  ! shift/reduce conflict for SHR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    RBRACK          reduce using rule 134 (Expression -> Expression BinaryOp Expression .)
    COMMA           reduce using rule 134 (Expression -> Expression BinaryOp Expression .)
    SEMICOLON       reduce using rule 134 (Expression -> Expression BinaryOp Expression .)
    RPAREN          reduce using rule 134 (Expression -> Expression BinaryOp Expression .)
    INC             reduce using rule 134 (Expression -> Expression BinaryOp Expression .)
    DEC             reduce using rule 134 (Expression -> Expression BinaryOp Expression .)
    ADD_ASSIGN      reduce using rule 134 (Expression -> Expression BinaryOp Expression .)
    SUB_ASSIGN      reduce using rule 134 (Expression -> Expression BinaryOp Expression .)
    MUL_ASSIGN      reduce using rule 134 (Expression -> Expression BinaryOp Expression .)
    QUO_ASSIGN      reduce using rule 134 (Expression -> Expression BinaryOp Expression .)
    REM_ASSIGN      reduce using rule 134 (Expression -> Expression BinaryOp Expression .)
    AND_ASSIGN      reduce using rule 134 (Expression -> Expression BinaryOp Expression .)
    OR_ASSIGN       reduce using rule 134 (Expression -> Expression BinaryOp Expression .)
    XOR_ASSIGN      reduce using rule 134 (Expression -> Expression BinaryOp Expression .)
    SHL_ASSIGN      reduce using rule 134 (Expression -> Expression BinaryOp Expression .)
    SHR_ASSIGN      reduce using rule 134 (Expression -> Expression BinaryOp Expression .)
    ASSIGN          reduce using rule 134 (Expression -> Expression BinaryOp Expression .)
    COLON           reduce using rule 134 (Expression -> Expression BinaryOp Expression .)
    LBRACE          reduce using rule 134 (Expression -> Expression BinaryOp Expression .)
    LOR             shift and go to state 162
    LAND            shift and go to state 163
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    GTR             shift and go to state 169
    LEQ             shift and go to state 170
    GEQ             shift and go to state 171
    OR              shift and go to state 173
    XOR             shift and go to state 174
    QUO             shift and go to state 175
    REM             shift and go to state 176
    SHL             shift and go to state 177
    SHR             shift and go to state 178
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

  ! LOR             [ reduce using rule 134 (Expression -> Expression BinaryOp Expression .) ]
  ! LAND            [ reduce using rule 134 (Expression -> Expression BinaryOp Expression .) ]
  ! EQL             [ reduce using rule 134 (Expression -> Expression BinaryOp Expression .) ]
  ! NEQ             [ reduce using rule 134 (Expression -> Expression BinaryOp Expression .) ]
  ! LSS             [ reduce using rule 134 (Expression -> Expression BinaryOp Expression .) ]
  ! GTR             [ reduce using rule 134 (Expression -> Expression BinaryOp Expression .) ]
  ! LEQ             [ reduce using rule 134 (Expression -> Expression BinaryOp Expression .) ]
  ! GEQ             [ reduce using rule 134 (Expression -> Expression BinaryOp Expression .) ]
  ! OR              [ reduce using rule 134 (Expression -> Expression BinaryOp Expression .) ]
  ! XOR             [ reduce using rule 134 (Expression -> Expression BinaryOp Expression .) ]
  ! QUO             [ reduce using rule 134 (Expression -> Expression BinaryOp Expression .) ]
  ! REM             [ reduce using rule 134 (Expression -> Expression BinaryOp Expression .) ]
  ! SHL             [ reduce using rule 134 (Expression -> Expression BinaryOp Expression .) ]
  ! SHR             [ reduce using rule 134 (Expression -> Expression BinaryOp Expression .) ]
  ! ADD             [ reduce using rule 134 (Expression -> Expression BinaryOp Expression .) ]
  ! SUB             [ reduce using rule 134 (Expression -> Expression BinaryOp Expression .) ]
  ! MUL             [ reduce using rule 134 (Expression -> Expression BinaryOp Expression .) ]
  ! AND             [ reduce using rule 134 (Expression -> Expression BinaryOp Expression .) ]

    BinaryOp                       shift and go to state 161
    RelOp                          shift and go to state 164
    AddMulOp                       shift and go to state 165
    UnaryOp                        shift and go to state 172

state 236

    (123) Selector -> PERIOD IDENT .

    PERIOD          reduce using rule 123 (Selector -> PERIOD IDENT .)
    LBRACK          reduce using rule 123 (Selector -> PERIOD IDENT .)
    LPAREN          reduce using rule 123 (Selector -> PERIOD IDENT .)
    LOR             reduce using rule 123 (Selector -> PERIOD IDENT .)
    LAND            reduce using rule 123 (Selector -> PERIOD IDENT .)
    EQL             reduce using rule 123 (Selector -> PERIOD IDENT .)
    NEQ             reduce using rule 123 (Selector -> PERIOD IDENT .)
    LSS             reduce using rule 123 (Selector -> PERIOD IDENT .)
    GTR             reduce using rule 123 (Selector -> PERIOD IDENT .)
    LEQ             reduce using rule 123 (Selector -> PERIOD IDENT .)
    GEQ             reduce using rule 123 (Selector -> PERIOD IDENT .)
    OR              reduce using rule 123 (Selector -> PERIOD IDENT .)
    XOR             reduce using rule 123 (Selector -> PERIOD IDENT .)
    QUO             reduce using rule 123 (Selector -> PERIOD IDENT .)
    REM             reduce using rule 123 (Selector -> PERIOD IDENT .)
    SHL             reduce using rule 123 (Selector -> PERIOD IDENT .)
    SHR             reduce using rule 123 (Selector -> PERIOD IDENT .)
    ADD             reduce using rule 123 (Selector -> PERIOD IDENT .)
    SUB             reduce using rule 123 (Selector -> PERIOD IDENT .)
    MUL             reduce using rule 123 (Selector -> PERIOD IDENT .)
    AND             reduce using rule 123 (Selector -> PERIOD IDENT .)
    RBRACK          reduce using rule 123 (Selector -> PERIOD IDENT .)
    COMMA           reduce using rule 123 (Selector -> PERIOD IDENT .)
    SEMICOLON       reduce using rule 123 (Selector -> PERIOD IDENT .)
    RPAREN          reduce using rule 123 (Selector -> PERIOD IDENT .)
    INC             reduce using rule 123 (Selector -> PERIOD IDENT .)
    DEC             reduce using rule 123 (Selector -> PERIOD IDENT .)
    ADD_ASSIGN      reduce using rule 123 (Selector -> PERIOD IDENT .)
    SUB_ASSIGN      reduce using rule 123 (Selector -> PERIOD IDENT .)
    MUL_ASSIGN      reduce using rule 123 (Selector -> PERIOD IDENT .)
    QUO_ASSIGN      reduce using rule 123 (Selector -> PERIOD IDENT .)
    REM_ASSIGN      reduce using rule 123 (Selector -> PERIOD IDENT .)
    AND_ASSIGN      reduce using rule 123 (Selector -> PERIOD IDENT .)
    OR_ASSIGN       reduce using rule 123 (Selector -> PERIOD IDENT .)
    XOR_ASSIGN      reduce using rule 123 (Selector -> PERIOD IDENT .)
    SHL_ASSIGN      reduce using rule 123 (Selector -> PERIOD IDENT .)
    SHR_ASSIGN      reduce using rule 123 (Selector -> PERIOD IDENT .)
    ASSIGN          reduce using rule 123 (Selector -> PERIOD IDENT .)
    COLON           reduce using rule 123 (Selector -> PERIOD IDENT .)
    LBRACE          reduce using rule 123 (Selector -> PERIOD IDENT .)


state 237

    (127) TypeAssertion -> PERIOD LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . STRING
    (10) TypeToken -> . BOOL
    (11) TypeToken -> . COMPLEX
    (12) TypeToken -> . TYPE IDENT
    (98) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71
    COMPLEX         shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Type                           shift and go to state 294
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 238

    (124) Index -> LBRACK Expression . RBRACK
    (134) Expression -> Expression . BinaryOp Expression
    (135) ExpressionOpt -> Expression .
    (140) BinaryOp -> . LOR
    (141) BinaryOp -> . LAND
    (142) BinaryOp -> . RelOp
    (143) BinaryOp -> . AddMulOp
    (144) RelOp -> . EQL
    (145) RelOp -> . NEQ
    (146) RelOp -> . LSS
    (147) RelOp -> . GTR
    (148) RelOp -> . LEQ
    (149) RelOp -> . GEQ
    (150) AddMulOp -> . UnaryOp
    (151) AddMulOp -> . OR
    (152) AddMulOp -> . XOR
    (153) AddMulOp -> . QUO
    (154) AddMulOp -> . REM
    (155) AddMulOp -> . SHL
    (156) AddMulOp -> . SHR
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND

    RBRACK          shift and go to state 295
    COLON           reduce using rule 135 (ExpressionOpt -> Expression .)
    LOR             shift and go to state 162
    LAND            shift and go to state 163
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    GTR             shift and go to state 169
    LEQ             shift and go to state 170
    GEQ             shift and go to state 171
    OR              shift and go to state 173
    XOR             shift and go to state 174
    QUO             shift and go to state 175
    REM             shift and go to state 176
    SHL             shift and go to state 177
    SHR             shift and go to state 178
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 161
    RelOp                          shift and go to state 164
    AddMulOp                       shift and go to state 165
    UnaryOp                        shift and go to state 172

state 239

    (125) Slice -> LBRACK ExpressionOpt . COLON ExpressionOpt RBRACK
    (126) Slice -> LBRACK ExpressionOpt . COLON Expression COLON Expression RBRACK

    COLON           shift and go to state 296


state 240

    (136) ExpressionOpt -> epsilon .

    COLON           reduce using rule 136 (ExpressionOpt -> epsilon .)
    RBRACK          reduce using rule 136 (ExpressionOpt -> epsilon .)


state 241

    (128) Arguments -> LPAREN ExpressionListTypeOpt . RPAREN

    RPAREN          shift and go to state 297


state 242

    (129) ExpressionListTypeOpt -> ExpressionList .

    RPAREN          reduce using rule 129 (ExpressionListTypeOpt -> ExpressionList .)


state 243

    (130) ExpressionListTypeOpt -> epsilon .

    RPAREN          reduce using rule 130 (ExpressionListTypeOpt -> epsilon .)


state 244

    (91) Operand -> LPAREN Expression RPAREN .

    PERIOD          reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    LBRACK          reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    LOR             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    LAND            reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    EQL             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    NEQ             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    LSS             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    GTR             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    LEQ             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    GEQ             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    OR              reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    XOR             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    QUO             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    REM             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    SHL             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    SHR             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    ADD             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    SUB             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    MUL             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    AND             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    INC             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    DEC             reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    ADD_ASSIGN      reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    SUB_ASSIGN      reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    MUL_ASSIGN      reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    QUO_ASSIGN      reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    REM_ASSIGN      reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    AND_ASSIGN      reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    OR_ASSIGN       reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    XOR_ASSIGN      reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    SHL_ASSIGN      reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    SHR_ASSIGN      reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    ASSIGN          reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 91 (Operand -> LPAREN Expression RPAREN .)


state 245

    (21) StructType -> STRUCT LBRACE FieldDeclRep RBRACE .

    ASSIGN          reduce using rule 21 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    SEMICOLON       reduce using rule 21 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    LBRACE          reduce using rule 21 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    RPAREN          reduce using rule 21 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    COMMA           reduce using rule 21 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    STRING_LITERAL  reduce using rule 21 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    COLON           reduce using rule 21 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)


state 246

    (22) FieldDeclRep -> FieldDeclRep FieldDecl . SEMICOLON

    SEMICOLON       shift and go to state 298


state 247

    (24) FieldDecl -> IdentifierList . Type TagOpt
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . STRING
    (10) TypeToken -> . BOOL
    (11) TypeToken -> . COMPLEX
    (12) TypeToken -> . TYPE IDENT
    (98) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71
    COMPLEX         shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Type                           shift and go to state 299
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 248

    (65) ExpressionRep -> ExpressionRep COMMA . Expression
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    Expression                     shift and go to state 300
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 249

    (47) StatementRep -> StatementRep Statement SEMICOLON .

    RETURN          reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    BREAK           reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    CONTINUE        reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    GOTO            reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    LBRACE          reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    IF              reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    FOR             reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    CONST           reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    TYPE            reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    VAR             reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    IDENT           reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    SWITCH          reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    NOT             reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    ADD             reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    SUB             reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    MUL             reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    AND             reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    LPAREN          reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    INT_LITERAL     reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    STRING_LITERAL  reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    IMAG            reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    SEMICOLON       reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    RBRACE          reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    CASE            reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)
    DEFAULT         reduce using rule 47 (StatementRep -> StatementRep Statement SEMICOLON .)


state 250

    (177) LabeledStmt -> Label COLON . Statement
    (161) Statement -> . Declaration
    (162) Statement -> . LabeledStmt
    (163) Statement -> . SimpleStmt
    (164) Statement -> . ReturnStmt
    (165) Statement -> . BreakStmt
    (166) Statement -> . ContinueStmt
    (167) Statement -> . GotoStmt
    (168) Statement -> . Block
    (169) Statement -> . IfStmt
    (170) Statement -> . SwitchStmt
    (171) Statement -> . ForStmt
    (49) Declaration -> . ConstDecl
    (50) Declaration -> . TypeDecl
    (51) Declaration -> . VarDecl
    (177) LabeledStmt -> . Label COLON Statement
    (172) SimpleStmt -> . epsilon
    (173) SimpleStmt -> . ExpressionStmt
    (174) SimpleStmt -> . IncDecStmt
    (175) SimpleStmt -> . Assignment
    (176) SimpleStmt -> . ShortVarDecl
    (234) ReturnStmt -> . RETURN ExpressionListPureOpt
    (237) BreakStmt -> . BREAK LabelOpt
    (238) ContinueStmt -> . CONTINUE LabelOpt
    (241) GotoStmt -> . GOTO Label
    (45) Block -> . LBRACE StatementList RBRACE
    (195) IfStmt -> . IF Expression Block ElseOpt
    (201) SwitchStmt -> . ExprSwitchStmt
    (202) SwitchStmt -> . TypeSwitchStmt
    (221) ForStmt -> . FOR ConditionBlockOpt Block
    (54) ConstDecl -> . CONST ConstSpec
    (55) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (67) TypeDecl -> . TYPE TypeSpec
    (68) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (75) VarDecl -> . VAR VarSpec
    (76) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (178) Label -> . IDENT
    (258) epsilon -> .
    (179) ExpressionStmt -> . Expression
    (180) IncDecStmt -> . Expression INC
    (181) IncDecStmt -> . Expression DEC
    (182) Assignment -> . ExpressionList assign_op ExpressionList
    (83) ShortVarDecl -> . IDENT DEFINE Expression
    (203) ExprSwitchStmt -> . SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE
    (209) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (64) ExpressionList -> . Expression ExpressionRep
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    RETURN          shift and go to state 217
    BREAK           shift and go to state 218
    CONTINUE        shift and go to state 219
    GOTO            shift and go to state 220
    LBRACE          shift and go to state 92
    IF              shift and go to state 221
    FOR             shift and go to state 225
    CONST           shift and go to state 21
    TYPE            shift and go to state 22
    VAR             shift and go to state 23
    IDENT           shift and go to state 226
    SEMICOLON       reduce using rule 258 (epsilon -> .)
    SWITCH          shift and go to state 228
    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    Label                          shift and go to state 211
    Statement                      shift and go to state 301
    Declaration                    shift and go to state 200
    LabeledStmt                    shift and go to state 201
    SimpleStmt                     shift and go to state 202
    ReturnStmt                     shift and go to state 203
    BreakStmt                      shift and go to state 204
    ContinueStmt                   shift and go to state 205
    GotoStmt                       shift and go to state 206
    Block                          shift and go to state 207
    IfStmt                         shift and go to state 208
    SwitchStmt                     shift and go to state 209
    ForStmt                        shift and go to state 210
    ConstDecl                      shift and go to state 17
    TypeDecl                       shift and go to state 18
    VarDecl                        shift and go to state 19
    epsilon                        shift and go to state 212
    ExpressionStmt                 shift and go to state 213
    IncDecStmt                     shift and go to state 214
    Assignment                     shift and go to state 215
    ShortVarDecl                   shift and go to state 216
    Expression                     shift and go to state 222
    ExprSwitchStmt                 shift and go to state 223
    TypeSwitchStmt                 shift and go to state 224
    ExpressionList                 shift and go to state 227
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 251

    (234) ReturnStmt -> RETURN ExpressionListPureOpt .

    SEMICOLON       reduce using rule 234 (ReturnStmt -> RETURN ExpressionListPureOpt .)


state 252

    (235) ExpressionListPureOpt -> ExpressionList .

    SEMICOLON       reduce using rule 235 (ExpressionListPureOpt -> ExpressionList .)


state 253

    (236) ExpressionListPureOpt -> epsilon .

    SEMICOLON       reduce using rule 236 (ExpressionListPureOpt -> epsilon .)


state 254

    (237) BreakStmt -> BREAK LabelOpt .

    SEMICOLON       reduce using rule 237 (BreakStmt -> BREAK LabelOpt .)


state 255

    (239) LabelOpt -> Label .

    SEMICOLON       reduce using rule 239 (LabelOpt -> Label .)


state 256

    (240) LabelOpt -> epsilon .

    SEMICOLON       reduce using rule 240 (LabelOpt -> epsilon .)


state 257

    (178) Label -> IDENT .

    SEMICOLON       reduce using rule 178 (Label -> IDENT .)


state 258

    (238) ContinueStmt -> CONTINUE LabelOpt .

    SEMICOLON       reduce using rule 238 (ContinueStmt -> CONTINUE LabelOpt .)


state 259

    (241) GotoStmt -> GOTO Label .

    SEMICOLON       reduce using rule 241 (GotoStmt -> GOTO Label .)


state 260

    (195) IfStmt -> IF Expression . Block ElseOpt
    (134) Expression -> Expression . BinaryOp Expression
    (45) Block -> . LBRACE StatementList RBRACE
    (140) BinaryOp -> . LOR
    (141) BinaryOp -> . LAND
    (142) BinaryOp -> . RelOp
    (143) BinaryOp -> . AddMulOp
    (144) RelOp -> . EQL
    (145) RelOp -> . NEQ
    (146) RelOp -> . LSS
    (147) RelOp -> . GTR
    (148) RelOp -> . LEQ
    (149) RelOp -> . GEQ
    (150) AddMulOp -> . UnaryOp
    (151) AddMulOp -> . OR
    (152) AddMulOp -> . XOR
    (153) AddMulOp -> . QUO
    (154) AddMulOp -> . REM
    (155) AddMulOp -> . SHL
    (156) AddMulOp -> . SHR
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND

    LBRACE          shift and go to state 92
    LOR             shift and go to state 162
    LAND            shift and go to state 163
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    GTR             shift and go to state 169
    LEQ             shift and go to state 170
    GEQ             shift and go to state 171
    OR              shift and go to state 173
    XOR             shift and go to state 174
    QUO             shift and go to state 175
    REM             shift and go to state 176
    SHL             shift and go to state 177
    SHR             shift and go to state 178
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    Block                          shift and go to state 302
    BinaryOp                       shift and go to state 161
    RelOp                          shift and go to state 164
    AddMulOp                       shift and go to state 165
    UnaryOp                        shift and go to state 172

state 261

    (180) IncDecStmt -> Expression INC .

    SEMICOLON       reduce using rule 180 (IncDecStmt -> Expression INC .)
    LBRACE          reduce using rule 180 (IncDecStmt -> Expression INC .)


state 262

    (181) IncDecStmt -> Expression DEC .

    SEMICOLON       reduce using rule 181 (IncDecStmt -> Expression DEC .)
    LBRACE          reduce using rule 181 (IncDecStmt -> Expression DEC .)


state 263

    (221) ForStmt -> FOR ConditionBlockOpt . Block
    (45) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 92

    Block                          shift and go to state 303

state 264

    (222) ConditionBlockOpt -> epsilon .
    (172) SimpleStmt -> epsilon .
    (231) ExpressionIdentListOpt -> epsilon .

    LBRACE          reduce using rule 222 (ConditionBlockOpt -> epsilon .)
    SEMICOLON       reduce using rule 172 (SimpleStmt -> epsilon .)
    RANGE           reduce using rule 231 (ExpressionIdentListOpt -> epsilon .)


state 265

    (223) ConditionBlockOpt -> Condition .

    LBRACE          reduce using rule 223 (ConditionBlockOpt -> Condition .)


state 266

    (224) ConditionBlockOpt -> ForClause .

    LBRACE          reduce using rule 224 (ConditionBlockOpt -> ForClause .)


state 267

    (225) ConditionBlockOpt -> RangeClause .

    LBRACE          reduce using rule 225 (ConditionBlockOpt -> RangeClause .)


state 268

    (226) Condition -> Expression .
    (134) Expression -> Expression . BinaryOp Expression
    (179) ExpressionStmt -> Expression .
    (180) IncDecStmt -> Expression . INC
    (181) IncDecStmt -> Expression . DEC
    (64) ExpressionList -> Expression . ExpressionRep
    (140) BinaryOp -> . LOR
    (141) BinaryOp -> . LAND
    (142) BinaryOp -> . RelOp
    (143) BinaryOp -> . AddMulOp
    (65) ExpressionRep -> . ExpressionRep COMMA Expression
    (66) ExpressionRep -> . epsilon
    (144) RelOp -> . EQL
    (145) RelOp -> . NEQ
    (146) RelOp -> . LSS
    (147) RelOp -> . GTR
    (148) RelOp -> . LEQ
    (149) RelOp -> . GEQ
    (150) AddMulOp -> . UnaryOp
    (151) AddMulOp -> . OR
    (152) AddMulOp -> . XOR
    (153) AddMulOp -> . QUO
    (154) AddMulOp -> . REM
    (155) AddMulOp -> . SHL
    (156) AddMulOp -> . SHR
    (258) epsilon -> .
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND

    LBRACE          reduce using rule 226 (Condition -> Expression .)
    SEMICOLON       reduce using rule 179 (ExpressionStmt -> Expression .)
    INC             shift and go to state 261
    DEC             shift and go to state 262
    LOR             shift and go to state 162
    LAND            shift and go to state 163
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    GTR             shift and go to state 169
    LEQ             shift and go to state 170
    GEQ             shift and go to state 171
    OR              shift and go to state 173
    XOR             shift and go to state 174
    QUO             shift and go to state 175
    REM             shift and go to state 176
    SHL             shift and go to state 177
    SHR             shift and go to state 178
    COMMA           reduce using rule 258 (epsilon -> .)
    ASSIGN          reduce using rule 258 (epsilon -> .)
    ADD_ASSIGN      reduce using rule 258 (epsilon -> .)
    SUB_ASSIGN      reduce using rule 258 (epsilon -> .)
    MUL_ASSIGN      reduce using rule 258 (epsilon -> .)
    QUO_ASSIGN      reduce using rule 258 (epsilon -> .)
    REM_ASSIGN      reduce using rule 258 (epsilon -> .)
    AND_ASSIGN      reduce using rule 258 (epsilon -> .)
    OR_ASSIGN       reduce using rule 258 (epsilon -> .)
    XOR_ASSIGN      reduce using rule 258 (epsilon -> .)
    SHL_ASSIGN      reduce using rule 258 (epsilon -> .)
    SHR_ASSIGN      reduce using rule 258 (epsilon -> .)
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 161
    ExpressionRep                  shift and go to state 196
    RelOp                          shift and go to state 164
    AddMulOp                       shift and go to state 165
    epsilon                        shift and go to state 197
    UnaryOp                        shift and go to state 172

state 269

    (227) ForClause -> SimpleStmt . SEMICOLON ConditionOpt SEMICOLON SimpleStmt

    SEMICOLON       shift and go to state 304


state 270

    (230) RangeClause -> ExpressionIdentListOpt . RANGE Expression

    RANGE           shift and go to state 305


state 271

    (232) ExpressionIdentListOpt -> ExpressionIdentifier .

    RANGE           reduce using rule 232 (ExpressionIdentListOpt -> ExpressionIdentifier .)


state 272

    (182) Assignment -> ExpressionList . assign_op ExpressionList
    (233) ExpressionIdentifier -> ExpressionList . ASSIGN
    (183) assign_op -> . AssignOp
    (184) AssignOp -> . ADD_ASSIGN
    (185) AssignOp -> . SUB_ASSIGN
    (186) AssignOp -> . MUL_ASSIGN
    (187) AssignOp -> . QUO_ASSIGN
    (188) AssignOp -> . REM_ASSIGN
    (189) AssignOp -> . AND_ASSIGN
    (190) AssignOp -> . OR_ASSIGN
    (191) AssignOp -> . XOR_ASSIGN
    (192) AssignOp -> . SHL_ASSIGN
    (193) AssignOp -> . SHR_ASSIGN
    (194) AssignOp -> . ASSIGN

    ASSIGN          shift and go to state 306
    ADD_ASSIGN      shift and go to state 277
    SUB_ASSIGN      shift and go to state 278
    MUL_ASSIGN      shift and go to state 279
    QUO_ASSIGN      shift and go to state 280
    REM_ASSIGN      shift and go to state 281
    AND_ASSIGN      shift and go to state 282
    OR_ASSIGN       shift and go to state 283
    XOR_ASSIGN      shift and go to state 284
    SHL_ASSIGN      shift and go to state 285
    SHR_ASSIGN      shift and go to state 286

    assign_op                      shift and go to state 275
    AssignOp                       shift and go to state 276

state 273

    (83) ShortVarDecl -> IDENT . DEFINE Expression
    (97) OperandName -> IDENT .

    DEFINE          shift and go to state 274
    PERIOD          reduce using rule 97 (OperandName -> IDENT .)
    LBRACK          reduce using rule 97 (OperandName -> IDENT .)
    LPAREN          reduce using rule 97 (OperandName -> IDENT .)
    INC             reduce using rule 97 (OperandName -> IDENT .)
    DEC             reduce using rule 97 (OperandName -> IDENT .)
    LOR             reduce using rule 97 (OperandName -> IDENT .)
    LAND            reduce using rule 97 (OperandName -> IDENT .)
    EQL             reduce using rule 97 (OperandName -> IDENT .)
    NEQ             reduce using rule 97 (OperandName -> IDENT .)
    LSS             reduce using rule 97 (OperandName -> IDENT .)
    GTR             reduce using rule 97 (OperandName -> IDENT .)
    LEQ             reduce using rule 97 (OperandName -> IDENT .)
    GEQ             reduce using rule 97 (OperandName -> IDENT .)
    OR              reduce using rule 97 (OperandName -> IDENT .)
    XOR             reduce using rule 97 (OperandName -> IDENT .)
    QUO             reduce using rule 97 (OperandName -> IDENT .)
    REM             reduce using rule 97 (OperandName -> IDENT .)
    SHL             reduce using rule 97 (OperandName -> IDENT .)
    SHR             reduce using rule 97 (OperandName -> IDENT .)
    ADD             reduce using rule 97 (OperandName -> IDENT .)
    SUB             reduce using rule 97 (OperandName -> IDENT .)
    MUL             reduce using rule 97 (OperandName -> IDENT .)
    AND             reduce using rule 97 (OperandName -> IDENT .)
    COMMA           reduce using rule 97 (OperandName -> IDENT .)
    LBRACE          reduce using rule 97 (OperandName -> IDENT .)
    SEMICOLON       reduce using rule 97 (OperandName -> IDENT .)
    ASSIGN          reduce using rule 97 (OperandName -> IDENT .)
    ADD_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    SUB_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    MUL_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    QUO_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    REM_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    AND_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    OR_ASSIGN       reduce using rule 97 (OperandName -> IDENT .)
    XOR_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    SHL_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)
    SHR_ASSIGN      reduce using rule 97 (OperandName -> IDENT .)


state 274

    (83) ShortVarDecl -> IDENT DEFINE . Expression
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    Expression                     shift and go to state 307
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 275

    (182) Assignment -> ExpressionList assign_op . ExpressionList
    (64) ExpressionList -> . Expression ExpressionRep
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    ExpressionList                 shift and go to state 308
    Expression                     shift and go to state 146
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 276

    (183) assign_op -> AssignOp .

    NOT             reduce using rule 183 (assign_op -> AssignOp .)
    ADD             reduce using rule 183 (assign_op -> AssignOp .)
    SUB             reduce using rule 183 (assign_op -> AssignOp .)
    MUL             reduce using rule 183 (assign_op -> AssignOp .)
    AND             reduce using rule 183 (assign_op -> AssignOp .)
    LPAREN          reduce using rule 183 (assign_op -> AssignOp .)
    IDENT           reduce using rule 183 (assign_op -> AssignOp .)
    INT_LITERAL     reduce using rule 183 (assign_op -> AssignOp .)
    FLOAT_LITERAL   reduce using rule 183 (assign_op -> AssignOp .)
    STRING_LITERAL  reduce using rule 183 (assign_op -> AssignOp .)
    IMAG            reduce using rule 183 (assign_op -> AssignOp .)


state 277

    (184) AssignOp -> ADD_ASSIGN .

    NOT             reduce using rule 184 (AssignOp -> ADD_ASSIGN .)
    ADD             reduce using rule 184 (AssignOp -> ADD_ASSIGN .)
    SUB             reduce using rule 184 (AssignOp -> ADD_ASSIGN .)
    MUL             reduce using rule 184 (AssignOp -> ADD_ASSIGN .)
    AND             reduce using rule 184 (AssignOp -> ADD_ASSIGN .)
    LPAREN          reduce using rule 184 (AssignOp -> ADD_ASSIGN .)
    IDENT           reduce using rule 184 (AssignOp -> ADD_ASSIGN .)
    INT_LITERAL     reduce using rule 184 (AssignOp -> ADD_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 184 (AssignOp -> ADD_ASSIGN .)
    STRING_LITERAL  reduce using rule 184 (AssignOp -> ADD_ASSIGN .)
    IMAG            reduce using rule 184 (AssignOp -> ADD_ASSIGN .)


state 278

    (185) AssignOp -> SUB_ASSIGN .

    NOT             reduce using rule 185 (AssignOp -> SUB_ASSIGN .)
    ADD             reduce using rule 185 (AssignOp -> SUB_ASSIGN .)
    SUB             reduce using rule 185 (AssignOp -> SUB_ASSIGN .)
    MUL             reduce using rule 185 (AssignOp -> SUB_ASSIGN .)
    AND             reduce using rule 185 (AssignOp -> SUB_ASSIGN .)
    LPAREN          reduce using rule 185 (AssignOp -> SUB_ASSIGN .)
    IDENT           reduce using rule 185 (AssignOp -> SUB_ASSIGN .)
    INT_LITERAL     reduce using rule 185 (AssignOp -> SUB_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 185 (AssignOp -> SUB_ASSIGN .)
    STRING_LITERAL  reduce using rule 185 (AssignOp -> SUB_ASSIGN .)
    IMAG            reduce using rule 185 (AssignOp -> SUB_ASSIGN .)


state 279

    (186) AssignOp -> MUL_ASSIGN .

    NOT             reduce using rule 186 (AssignOp -> MUL_ASSIGN .)
    ADD             reduce using rule 186 (AssignOp -> MUL_ASSIGN .)
    SUB             reduce using rule 186 (AssignOp -> MUL_ASSIGN .)
    MUL             reduce using rule 186 (AssignOp -> MUL_ASSIGN .)
    AND             reduce using rule 186 (AssignOp -> MUL_ASSIGN .)
    LPAREN          reduce using rule 186 (AssignOp -> MUL_ASSIGN .)
    IDENT           reduce using rule 186 (AssignOp -> MUL_ASSIGN .)
    INT_LITERAL     reduce using rule 186 (AssignOp -> MUL_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 186 (AssignOp -> MUL_ASSIGN .)
    STRING_LITERAL  reduce using rule 186 (AssignOp -> MUL_ASSIGN .)
    IMAG            reduce using rule 186 (AssignOp -> MUL_ASSIGN .)


state 280

    (187) AssignOp -> QUO_ASSIGN .

    NOT             reduce using rule 187 (AssignOp -> QUO_ASSIGN .)
    ADD             reduce using rule 187 (AssignOp -> QUO_ASSIGN .)
    SUB             reduce using rule 187 (AssignOp -> QUO_ASSIGN .)
    MUL             reduce using rule 187 (AssignOp -> QUO_ASSIGN .)
    AND             reduce using rule 187 (AssignOp -> QUO_ASSIGN .)
    LPAREN          reduce using rule 187 (AssignOp -> QUO_ASSIGN .)
    IDENT           reduce using rule 187 (AssignOp -> QUO_ASSIGN .)
    INT_LITERAL     reduce using rule 187 (AssignOp -> QUO_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 187 (AssignOp -> QUO_ASSIGN .)
    STRING_LITERAL  reduce using rule 187 (AssignOp -> QUO_ASSIGN .)
    IMAG            reduce using rule 187 (AssignOp -> QUO_ASSIGN .)


state 281

    (188) AssignOp -> REM_ASSIGN .

    NOT             reduce using rule 188 (AssignOp -> REM_ASSIGN .)
    ADD             reduce using rule 188 (AssignOp -> REM_ASSIGN .)
    SUB             reduce using rule 188 (AssignOp -> REM_ASSIGN .)
    MUL             reduce using rule 188 (AssignOp -> REM_ASSIGN .)
    AND             reduce using rule 188 (AssignOp -> REM_ASSIGN .)
    LPAREN          reduce using rule 188 (AssignOp -> REM_ASSIGN .)
    IDENT           reduce using rule 188 (AssignOp -> REM_ASSIGN .)
    INT_LITERAL     reduce using rule 188 (AssignOp -> REM_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 188 (AssignOp -> REM_ASSIGN .)
    STRING_LITERAL  reduce using rule 188 (AssignOp -> REM_ASSIGN .)
    IMAG            reduce using rule 188 (AssignOp -> REM_ASSIGN .)


state 282

    (189) AssignOp -> AND_ASSIGN .

    NOT             reduce using rule 189 (AssignOp -> AND_ASSIGN .)
    ADD             reduce using rule 189 (AssignOp -> AND_ASSIGN .)
    SUB             reduce using rule 189 (AssignOp -> AND_ASSIGN .)
    MUL             reduce using rule 189 (AssignOp -> AND_ASSIGN .)
    AND             reduce using rule 189 (AssignOp -> AND_ASSIGN .)
    LPAREN          reduce using rule 189 (AssignOp -> AND_ASSIGN .)
    IDENT           reduce using rule 189 (AssignOp -> AND_ASSIGN .)
    INT_LITERAL     reduce using rule 189 (AssignOp -> AND_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 189 (AssignOp -> AND_ASSIGN .)
    STRING_LITERAL  reduce using rule 189 (AssignOp -> AND_ASSIGN .)
    IMAG            reduce using rule 189 (AssignOp -> AND_ASSIGN .)


state 283

    (190) AssignOp -> OR_ASSIGN .

    NOT             reduce using rule 190 (AssignOp -> OR_ASSIGN .)
    ADD             reduce using rule 190 (AssignOp -> OR_ASSIGN .)
    SUB             reduce using rule 190 (AssignOp -> OR_ASSIGN .)
    MUL             reduce using rule 190 (AssignOp -> OR_ASSIGN .)
    AND             reduce using rule 190 (AssignOp -> OR_ASSIGN .)
    LPAREN          reduce using rule 190 (AssignOp -> OR_ASSIGN .)
    IDENT           reduce using rule 190 (AssignOp -> OR_ASSIGN .)
    INT_LITERAL     reduce using rule 190 (AssignOp -> OR_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 190 (AssignOp -> OR_ASSIGN .)
    STRING_LITERAL  reduce using rule 190 (AssignOp -> OR_ASSIGN .)
    IMAG            reduce using rule 190 (AssignOp -> OR_ASSIGN .)


state 284

    (191) AssignOp -> XOR_ASSIGN .

    NOT             reduce using rule 191 (AssignOp -> XOR_ASSIGN .)
    ADD             reduce using rule 191 (AssignOp -> XOR_ASSIGN .)
    SUB             reduce using rule 191 (AssignOp -> XOR_ASSIGN .)
    MUL             reduce using rule 191 (AssignOp -> XOR_ASSIGN .)
    AND             reduce using rule 191 (AssignOp -> XOR_ASSIGN .)
    LPAREN          reduce using rule 191 (AssignOp -> XOR_ASSIGN .)
    IDENT           reduce using rule 191 (AssignOp -> XOR_ASSIGN .)
    INT_LITERAL     reduce using rule 191 (AssignOp -> XOR_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 191 (AssignOp -> XOR_ASSIGN .)
    STRING_LITERAL  reduce using rule 191 (AssignOp -> XOR_ASSIGN .)
    IMAG            reduce using rule 191 (AssignOp -> XOR_ASSIGN .)


state 285

    (192) AssignOp -> SHL_ASSIGN .

    NOT             reduce using rule 192 (AssignOp -> SHL_ASSIGN .)
    ADD             reduce using rule 192 (AssignOp -> SHL_ASSIGN .)
    SUB             reduce using rule 192 (AssignOp -> SHL_ASSIGN .)
    MUL             reduce using rule 192 (AssignOp -> SHL_ASSIGN .)
    AND             reduce using rule 192 (AssignOp -> SHL_ASSIGN .)
    LPAREN          reduce using rule 192 (AssignOp -> SHL_ASSIGN .)
    IDENT           reduce using rule 192 (AssignOp -> SHL_ASSIGN .)
    INT_LITERAL     reduce using rule 192 (AssignOp -> SHL_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 192 (AssignOp -> SHL_ASSIGN .)
    STRING_LITERAL  reduce using rule 192 (AssignOp -> SHL_ASSIGN .)
    IMAG            reduce using rule 192 (AssignOp -> SHL_ASSIGN .)


state 286

    (193) AssignOp -> SHR_ASSIGN .

    NOT             reduce using rule 193 (AssignOp -> SHR_ASSIGN .)
    ADD             reduce using rule 193 (AssignOp -> SHR_ASSIGN .)
    SUB             reduce using rule 193 (AssignOp -> SHR_ASSIGN .)
    MUL             reduce using rule 193 (AssignOp -> SHR_ASSIGN .)
    AND             reduce using rule 193 (AssignOp -> SHR_ASSIGN .)
    LPAREN          reduce using rule 193 (AssignOp -> SHR_ASSIGN .)
    IDENT           reduce using rule 193 (AssignOp -> SHR_ASSIGN .)
    INT_LITERAL     reduce using rule 193 (AssignOp -> SHR_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 193 (AssignOp -> SHR_ASSIGN .)
    STRING_LITERAL  reduce using rule 193 (AssignOp -> SHR_ASSIGN .)
    IMAG            reduce using rule 193 (AssignOp -> SHR_ASSIGN .)


state 287

    (194) AssignOp -> ASSIGN .

    NOT             reduce using rule 194 (AssignOp -> ASSIGN .)
    ADD             reduce using rule 194 (AssignOp -> ASSIGN .)
    SUB             reduce using rule 194 (AssignOp -> ASSIGN .)
    MUL             reduce using rule 194 (AssignOp -> ASSIGN .)
    AND             reduce using rule 194 (AssignOp -> ASSIGN .)
    LPAREN          reduce using rule 194 (AssignOp -> ASSIGN .)
    IDENT           reduce using rule 194 (AssignOp -> ASSIGN .)
    INT_LITERAL     reduce using rule 194 (AssignOp -> ASSIGN .)
    FLOAT_LITERAL   reduce using rule 194 (AssignOp -> ASSIGN .)
    STRING_LITERAL  reduce using rule 194 (AssignOp -> ASSIGN .)
    IMAG            reduce using rule 194 (AssignOp -> ASSIGN .)


state 288

    (203) ExprSwitchStmt -> SWITCH ExpressionOpt . LBRACE ExprCaseClauseRep RBRACE

    LBRACE          shift and go to state 309


state 289

    (209) TypeSwitchStmt -> SWITCH SimpleStmtOpt . TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
    (210) TypeSwitchGuard -> . IdentifierOpt PrimaryExpr PERIOD LPAREN TYPE RPAREN
    (211) IdentifierOpt -> . IDENT DEFINE
    (212) IdentifierOpt -> . epsilon
    (258) epsilon -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 312
    LPAREN          reduce using rule 258 (epsilon -> .)
    INT_LITERAL     reduce using rule 258 (epsilon -> .)
    FLOAT_LITERAL   reduce using rule 258 (epsilon -> .)
    STRING_LITERAL  reduce using rule 258 (epsilon -> .)
    IMAG            reduce using rule 258 (epsilon -> .)

  ! IDENT           [ reduce using rule 258 (epsilon -> .) ]

    TypeSwitchGuard                shift and go to state 310
    IdentifierOpt                  shift and go to state 311
    epsilon                        shift and go to state 313

state 290

    (135) ExpressionOpt -> Expression .
    (134) Expression -> Expression . BinaryOp Expression
    (179) ExpressionStmt -> Expression .
    (180) IncDecStmt -> Expression . INC
    (181) IncDecStmt -> Expression . DEC
    (64) ExpressionList -> Expression . ExpressionRep
    (140) BinaryOp -> . LOR
    (141) BinaryOp -> . LAND
    (142) BinaryOp -> . RelOp
    (143) BinaryOp -> . AddMulOp
    (65) ExpressionRep -> . ExpressionRep COMMA Expression
    (66) ExpressionRep -> . epsilon
    (144) RelOp -> . EQL
    (145) RelOp -> . NEQ
    (146) RelOp -> . LSS
    (147) RelOp -> . GTR
    (148) RelOp -> . LEQ
    (149) RelOp -> . GEQ
    (150) AddMulOp -> . UnaryOp
    (151) AddMulOp -> . OR
    (152) AddMulOp -> . XOR
    (153) AddMulOp -> . QUO
    (154) AddMulOp -> . REM
    (155) AddMulOp -> . SHL
    (156) AddMulOp -> . SHR
    (258) epsilon -> .
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND

    LBRACE          reduce using rule 135 (ExpressionOpt -> Expression .)
    SEMICOLON       reduce using rule 179 (ExpressionStmt -> Expression .)
    INC             shift and go to state 261
    DEC             shift and go to state 262
    LOR             shift and go to state 162
    LAND            shift and go to state 163
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    GTR             shift and go to state 169
    LEQ             shift and go to state 170
    GEQ             shift and go to state 171
    OR              shift and go to state 173
    XOR             shift and go to state 174
    QUO             shift and go to state 175
    REM             shift and go to state 176
    SHL             shift and go to state 177
    SHR             shift and go to state 178
    COMMA           reduce using rule 258 (epsilon -> .)
    ADD_ASSIGN      reduce using rule 258 (epsilon -> .)
    SUB_ASSIGN      reduce using rule 258 (epsilon -> .)
    MUL_ASSIGN      reduce using rule 258 (epsilon -> .)
    QUO_ASSIGN      reduce using rule 258 (epsilon -> .)
    REM_ASSIGN      reduce using rule 258 (epsilon -> .)
    AND_ASSIGN      reduce using rule 258 (epsilon -> .)
    OR_ASSIGN       reduce using rule 258 (epsilon -> .)
    XOR_ASSIGN      reduce using rule 258 (epsilon -> .)
    SHL_ASSIGN      reduce using rule 258 (epsilon -> .)
    SHR_ASSIGN      reduce using rule 258 (epsilon -> .)
    ASSIGN          reduce using rule 258 (epsilon -> .)
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 161
    ExpressionRep                  shift and go to state 196
    RelOp                          shift and go to state 164
    AddMulOp                       shift and go to state 165
    epsilon                        shift and go to state 197
    UnaryOp                        shift and go to state 172

state 291

    (136) ExpressionOpt -> epsilon .
    (197) SimpleStmtOpt -> epsilon .
    (172) SimpleStmt -> epsilon .

    LBRACE          reduce using rule 136 (ExpressionOpt -> epsilon .)
    IDENT           reduce using rule 197 (SimpleStmtOpt -> epsilon .)
    LPAREN          reduce using rule 197 (SimpleStmtOpt -> epsilon .)
    INT_LITERAL     reduce using rule 197 (SimpleStmtOpt -> epsilon .)
    FLOAT_LITERAL   reduce using rule 197 (SimpleStmtOpt -> epsilon .)
    STRING_LITERAL  reduce using rule 197 (SimpleStmtOpt -> epsilon .)
    IMAG            reduce using rule 197 (SimpleStmtOpt -> epsilon .)
    SEMICOLON       reduce using rule 172 (SimpleStmt -> epsilon .)


state 292

    (196) SimpleStmtOpt -> SimpleStmt . SEMICOLON

    SEMICOLON       shift and go to state 314


state 293

    (43) ParameterDecl -> IdentifierList Type .

    COMMA           reduce using rule 43 (ParameterDecl -> IdentifierList Type .)
    RPAREN          reduce using rule 43 (ParameterDecl -> IdentifierList Type .)


state 294

    (127) TypeAssertion -> PERIOD LPAREN Type . RPAREN

    RPAREN          shift and go to state 315


state 295

    (124) Index -> LBRACK Expression RBRACK .

    PERIOD          reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    LBRACK          reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    LPAREN          reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    LOR             reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    LAND            reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    EQL             reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    NEQ             reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    LSS             reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    GTR             reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    LEQ             reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    GEQ             reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    OR              reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    XOR             reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    QUO             reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    REM             reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    SHL             reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    SHR             reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    ADD             reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    SUB             reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    MUL             reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    AND             reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    COMMA           reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    SEMICOLON       reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    INC             reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    DEC             reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    QUO_ASSIGN      reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    REM_ASSIGN      reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    AND_ASSIGN      reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    OR_ASSIGN       reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    ASSIGN          reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    COLON           reduce using rule 124 (Index -> LBRACK Expression RBRACK .)
    LBRACE          reduce using rule 124 (Index -> LBRACK Expression RBRACK .)


state 296

    (125) Slice -> LBRACK ExpressionOpt COLON . ExpressionOpt RBRACK
    (126) Slice -> LBRACK ExpressionOpt COLON . Expression COLON Expression RBRACK
    (135) ExpressionOpt -> . Expression
    (136) ExpressionOpt -> . epsilon
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (258) epsilon -> .
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    RBRACK          reduce using rule 258 (epsilon -> .)
    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    ExpressionOpt                  shift and go to state 316
    Expression                     shift and go to state 317
    epsilon                        shift and go to state 240
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 297

    (128) Arguments -> LPAREN ExpressionListTypeOpt RPAREN .

    PERIOD          reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LBRACK          reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LPAREN          reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LOR             reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LAND            reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    EQL             reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    NEQ             reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LSS             reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GTR             reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LEQ             reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GEQ             reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OR              reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    XOR             reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    QUO             reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    REM             reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SHL             reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SHR             reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    ADD             reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SUB             reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MUL             reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AND             reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RBRACK          reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COMMA           reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SEMICOLON       reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RPAREN          reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    INC             reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DEC             reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    ADD_ASSIGN      reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SUB_ASSIGN      reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MUL_ASSIGN      reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    QUO_ASSIGN      reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    REM_ASSIGN      reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AND_ASSIGN      reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OR_ASSIGN       reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    XOR_ASSIGN      reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SHL_ASSIGN      reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SHR_ASSIGN      reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    ASSIGN          reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COLON           reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LBRACE          reduce using rule 128 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)


state 298

    (22) FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON .

    RBRACE          reduce using rule 22 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON .)
    IDENT           reduce using rule 22 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON .)


state 299

    (24) FieldDecl -> IdentifierList Type . TagOpt
    (25) TagOpt -> . Tag
    (26) TagOpt -> . epsilon
    (27) Tag -> . STRING_LITERAL
    (258) epsilon -> .

    STRING_LITERAL  shift and go to state 321
    SEMICOLON       reduce using rule 258 (epsilon -> .)

    TagOpt                         shift and go to state 318
    Tag                            shift and go to state 319
    epsilon                        shift and go to state 320

state 300

    (65) ExpressionRep -> ExpressionRep COMMA Expression .
    (134) Expression -> Expression . BinaryOp Expression
    (140) BinaryOp -> . LOR
    (141) BinaryOp -> . LAND
    (142) BinaryOp -> . RelOp
    (143) BinaryOp -> . AddMulOp
    (144) RelOp -> . EQL
    (145) RelOp -> . NEQ
    (146) RelOp -> . LSS
    (147) RelOp -> . GTR
    (148) RelOp -> . LEQ
    (149) RelOp -> . GEQ
    (150) AddMulOp -> . UnaryOp
    (151) AddMulOp -> . OR
    (152) AddMulOp -> . XOR
    (153) AddMulOp -> . QUO
    (154) AddMulOp -> . REM
    (155) AddMulOp -> . SHL
    (156) AddMulOp -> . SHR
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND

    COMMA           reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SEMICOLON       reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RPAREN          reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LBRACE          reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    COLON           reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    ADD_ASSIGN      reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SUB_ASSIGN      reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MUL_ASSIGN      reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    QUO_ASSIGN      reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    REM_ASSIGN      reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    AND_ASSIGN      reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    OR_ASSIGN       reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    XOR_ASSIGN      reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SHL_ASSIGN      reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SHR_ASSIGN      reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    ASSIGN          reduce using rule 65 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LOR             shift and go to state 162
    LAND            shift and go to state 163
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    GTR             shift and go to state 169
    LEQ             shift and go to state 170
    GEQ             shift and go to state 171
    OR              shift and go to state 173
    XOR             shift and go to state 174
    QUO             shift and go to state 175
    REM             shift and go to state 176
    SHL             shift and go to state 177
    SHR             shift and go to state 178
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 161
    RelOp                          shift and go to state 164
    AddMulOp                       shift and go to state 165
    UnaryOp                        shift and go to state 172

state 301

    (177) LabeledStmt -> Label COLON Statement .

    SEMICOLON       reduce using rule 177 (LabeledStmt -> Label COLON Statement .)


state 302

    (195) IfStmt -> IF Expression Block . ElseOpt
    (198) ElseOpt -> . ELSE IfStmt
    (199) ElseOpt -> . ELSE Block
    (200) ElseOpt -> . epsilon
    (258) epsilon -> .

    ELSE            shift and go to state 323
    SEMICOLON       reduce using rule 258 (epsilon -> .)

    ElseOpt                        shift and go to state 322
    epsilon                        shift and go to state 324

state 303

    (221) ForStmt -> FOR ConditionBlockOpt Block .

    SEMICOLON       reduce using rule 221 (ForStmt -> FOR ConditionBlockOpt Block .)


state 304

    (227) ForClause -> SimpleStmt SEMICOLON . ConditionOpt SEMICOLON SimpleStmt
    (228) ConditionOpt -> . epsilon
    (229) ConditionOpt -> . Condition
    (258) epsilon -> .
    (226) Condition -> . Expression
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    SEMICOLON       reduce using rule 258 (epsilon -> .)
    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    ConditionOpt                   shift and go to state 325
    epsilon                        shift and go to state 326
    Condition                      shift and go to state 327
    Expression                     shift and go to state 328
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 305

    (230) RangeClause -> ExpressionIdentListOpt RANGE . Expression
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    Expression                     shift and go to state 329
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 306

    (233) ExpressionIdentifier -> ExpressionList ASSIGN .
    (194) AssignOp -> ASSIGN .

    RANGE           reduce using rule 233 (ExpressionIdentifier -> ExpressionList ASSIGN .)
    NOT             reduce using rule 194 (AssignOp -> ASSIGN .)
    ADD             reduce using rule 194 (AssignOp -> ASSIGN .)
    SUB             reduce using rule 194 (AssignOp -> ASSIGN .)
    MUL             reduce using rule 194 (AssignOp -> ASSIGN .)
    AND             reduce using rule 194 (AssignOp -> ASSIGN .)
    LPAREN          reduce using rule 194 (AssignOp -> ASSIGN .)
    IDENT           reduce using rule 194 (AssignOp -> ASSIGN .)
    INT_LITERAL     reduce using rule 194 (AssignOp -> ASSIGN .)
    FLOAT_LITERAL   reduce using rule 194 (AssignOp -> ASSIGN .)
    STRING_LITERAL  reduce using rule 194 (AssignOp -> ASSIGN .)
    IMAG            reduce using rule 194 (AssignOp -> ASSIGN .)


state 307

    (83) ShortVarDecl -> IDENT DEFINE Expression .
    (134) Expression -> Expression . BinaryOp Expression
    (140) BinaryOp -> . LOR
    (141) BinaryOp -> . LAND
    (142) BinaryOp -> . RelOp
    (143) BinaryOp -> . AddMulOp
    (144) RelOp -> . EQL
    (145) RelOp -> . NEQ
    (146) RelOp -> . LSS
    (147) RelOp -> . GTR
    (148) RelOp -> . LEQ
    (149) RelOp -> . GEQ
    (150) AddMulOp -> . UnaryOp
    (151) AddMulOp -> . OR
    (152) AddMulOp -> . XOR
    (153) AddMulOp -> . QUO
    (154) AddMulOp -> . REM
    (155) AddMulOp -> . SHL
    (156) AddMulOp -> . SHR
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND

    SEMICOLON       reduce using rule 83 (ShortVarDecl -> IDENT DEFINE Expression .)
    LBRACE          reduce using rule 83 (ShortVarDecl -> IDENT DEFINE Expression .)
    LOR             shift and go to state 162
    LAND            shift and go to state 163
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    GTR             shift and go to state 169
    LEQ             shift and go to state 170
    GEQ             shift and go to state 171
    OR              shift and go to state 173
    XOR             shift and go to state 174
    QUO             shift and go to state 175
    REM             shift and go to state 176
    SHL             shift and go to state 177
    SHR             shift and go to state 178
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 161
    RelOp                          shift and go to state 164
    AddMulOp                       shift and go to state 165
    UnaryOp                        shift and go to state 172

state 308

    (182) Assignment -> ExpressionList assign_op ExpressionList .

    SEMICOLON       reduce using rule 182 (Assignment -> ExpressionList assign_op ExpressionList .)
    LBRACE          reduce using rule 182 (Assignment -> ExpressionList assign_op ExpressionList .)


state 309

    (203) ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE . ExprCaseClauseRep RBRACE
    (204) ExprCaseClauseRep -> . ExprCaseClauseRep ExprCaseClause
    (205) ExprCaseClauseRep -> . epsilon
    (258) epsilon -> .

    RBRACE          reduce using rule 258 (epsilon -> .)
    CASE            reduce using rule 258 (epsilon -> .)
    DEFAULT         reduce using rule 258 (epsilon -> .)

    ExprCaseClauseRep              shift and go to state 330
    epsilon                        shift and go to state 331

state 310

    (209) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard . LBRACE TypeCaseClauseOpt RBRACE

    LBRACE          shift and go to state 332


state 311

    (210) TypeSwitchGuard -> IdentifierOpt . PrimaryExpr PERIOD LPAREN TYPE RPAREN
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    PrimaryExpr                    shift and go to state 333
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 312

    (211) IdentifierOpt -> IDENT . DEFINE

    DEFINE          shift and go to state 334


state 313

    (212) IdentifierOpt -> epsilon .

    LPAREN          reduce using rule 212 (IdentifierOpt -> epsilon .)
    IDENT           reduce using rule 212 (IdentifierOpt -> epsilon .)
    INT_LITERAL     reduce using rule 212 (IdentifierOpt -> epsilon .)
    FLOAT_LITERAL   reduce using rule 212 (IdentifierOpt -> epsilon .)
    STRING_LITERAL  reduce using rule 212 (IdentifierOpt -> epsilon .)
    IMAG            reduce using rule 212 (IdentifierOpt -> epsilon .)


state 314

    (196) SimpleStmtOpt -> SimpleStmt SEMICOLON .

    IDENT           reduce using rule 196 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    LPAREN          reduce using rule 196 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    INT_LITERAL     reduce using rule 196 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 196 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    STRING_LITERAL  reduce using rule 196 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    IMAG            reduce using rule 196 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)


state 315

    (127) TypeAssertion -> PERIOD LPAREN Type RPAREN .

    PERIOD          reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    LBRACK          reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    LPAREN          reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    LOR             reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    LAND            reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    EQL             reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    NEQ             reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    LSS             reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    GTR             reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    LEQ             reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    GEQ             reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    OR              reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    XOR             reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    QUO             reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    REM             reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    SHL             reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    SHR             reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    ADD             reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    SUB             reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    MUL             reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    AND             reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    RBRACK          reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    COMMA           reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    RPAREN          reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    INC             reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    DEC             reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    ADD_ASSIGN      reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    SUB_ASSIGN      reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    MUL_ASSIGN      reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    QUO_ASSIGN      reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    REM_ASSIGN      reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    AND_ASSIGN      reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    OR_ASSIGN       reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    XOR_ASSIGN      reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    SHL_ASSIGN      reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    SHR_ASSIGN      reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    ASSIGN          reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    COLON           reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)
    LBRACE          reduce using rule 127 (TypeAssertion -> PERIOD LPAREN Type RPAREN .)


state 316

    (125) Slice -> LBRACK ExpressionOpt COLON ExpressionOpt . RBRACK

    RBRACK          shift and go to state 335


state 317

    (126) Slice -> LBRACK ExpressionOpt COLON Expression . COLON Expression RBRACK
    (135) ExpressionOpt -> Expression .
    (134) Expression -> Expression . BinaryOp Expression
    (140) BinaryOp -> . LOR
    (141) BinaryOp -> . LAND
    (142) BinaryOp -> . RelOp
    (143) BinaryOp -> . AddMulOp
    (144) RelOp -> . EQL
    (145) RelOp -> . NEQ
    (146) RelOp -> . LSS
    (147) RelOp -> . GTR
    (148) RelOp -> . LEQ
    (149) RelOp -> . GEQ
    (150) AddMulOp -> . UnaryOp
    (151) AddMulOp -> . OR
    (152) AddMulOp -> . XOR
    (153) AddMulOp -> . QUO
    (154) AddMulOp -> . REM
    (155) AddMulOp -> . SHL
    (156) AddMulOp -> . SHR
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND

    COLON           shift and go to state 336
    RBRACK          reduce using rule 135 (ExpressionOpt -> Expression .)
    LOR             shift and go to state 162
    LAND            shift and go to state 163
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    GTR             shift and go to state 169
    LEQ             shift and go to state 170
    GEQ             shift and go to state 171
    OR              shift and go to state 173
    XOR             shift and go to state 174
    QUO             shift and go to state 175
    REM             shift and go to state 176
    SHL             shift and go to state 177
    SHR             shift and go to state 178
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 161
    RelOp                          shift and go to state 164
    AddMulOp                       shift and go to state 165
    UnaryOp                        shift and go to state 172

state 318

    (24) FieldDecl -> IdentifierList Type TagOpt .

    SEMICOLON       reduce using rule 24 (FieldDecl -> IdentifierList Type TagOpt .)


state 319

    (25) TagOpt -> Tag .

    SEMICOLON       reduce using rule 25 (TagOpt -> Tag .)


state 320

    (26) TagOpt -> epsilon .

    SEMICOLON       reduce using rule 26 (TagOpt -> epsilon .)


state 321

    (27) Tag -> STRING_LITERAL .

    SEMICOLON       reduce using rule 27 (Tag -> STRING_LITERAL .)


state 322

    (195) IfStmt -> IF Expression Block ElseOpt .

    SEMICOLON       reduce using rule 195 (IfStmt -> IF Expression Block ElseOpt .)


state 323

    (198) ElseOpt -> ELSE . IfStmt
    (199) ElseOpt -> ELSE . Block
    (195) IfStmt -> . IF Expression Block ElseOpt
    (45) Block -> . LBRACE StatementList RBRACE

    IF              shift and go to state 221
    LBRACE          shift and go to state 92

    IfStmt                         shift and go to state 337
    Block                          shift and go to state 338

state 324

    (200) ElseOpt -> epsilon .

    SEMICOLON       reduce using rule 200 (ElseOpt -> epsilon .)


state 325

    (227) ForClause -> SimpleStmt SEMICOLON ConditionOpt . SEMICOLON SimpleStmt

    SEMICOLON       shift and go to state 339


state 326

    (228) ConditionOpt -> epsilon .

    SEMICOLON       reduce using rule 228 (ConditionOpt -> epsilon .)


state 327

    (229) ConditionOpt -> Condition .

    SEMICOLON       reduce using rule 229 (ConditionOpt -> Condition .)


state 328

    (226) Condition -> Expression .
    (134) Expression -> Expression . BinaryOp Expression
    (140) BinaryOp -> . LOR
    (141) BinaryOp -> . LAND
    (142) BinaryOp -> . RelOp
    (143) BinaryOp -> . AddMulOp
    (144) RelOp -> . EQL
    (145) RelOp -> . NEQ
    (146) RelOp -> . LSS
    (147) RelOp -> . GTR
    (148) RelOp -> . LEQ
    (149) RelOp -> . GEQ
    (150) AddMulOp -> . UnaryOp
    (151) AddMulOp -> . OR
    (152) AddMulOp -> . XOR
    (153) AddMulOp -> . QUO
    (154) AddMulOp -> . REM
    (155) AddMulOp -> . SHL
    (156) AddMulOp -> . SHR
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND

    SEMICOLON       reduce using rule 226 (Condition -> Expression .)
    LOR             shift and go to state 162
    LAND            shift and go to state 163
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    GTR             shift and go to state 169
    LEQ             shift and go to state 170
    GEQ             shift and go to state 171
    OR              shift and go to state 173
    XOR             shift and go to state 174
    QUO             shift and go to state 175
    REM             shift and go to state 176
    SHL             shift and go to state 177
    SHR             shift and go to state 178
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 161
    RelOp                          shift and go to state 164
    AddMulOp                       shift and go to state 165
    UnaryOp                        shift and go to state 172

state 329

    (230) RangeClause -> ExpressionIdentListOpt RANGE Expression .
    (134) Expression -> Expression . BinaryOp Expression
    (140) BinaryOp -> . LOR
    (141) BinaryOp -> . LAND
    (142) BinaryOp -> . RelOp
    (143) BinaryOp -> . AddMulOp
    (144) RelOp -> . EQL
    (145) RelOp -> . NEQ
    (146) RelOp -> . LSS
    (147) RelOp -> . GTR
    (148) RelOp -> . LEQ
    (149) RelOp -> . GEQ
    (150) AddMulOp -> . UnaryOp
    (151) AddMulOp -> . OR
    (152) AddMulOp -> . XOR
    (153) AddMulOp -> . QUO
    (154) AddMulOp -> . REM
    (155) AddMulOp -> . SHL
    (156) AddMulOp -> . SHR
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND

    LBRACE          reduce using rule 230 (RangeClause -> ExpressionIdentListOpt RANGE Expression .)
    LOR             shift and go to state 162
    LAND            shift and go to state 163
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    GTR             shift and go to state 169
    LEQ             shift and go to state 170
    GEQ             shift and go to state 171
    OR              shift and go to state 173
    XOR             shift and go to state 174
    QUO             shift and go to state 175
    REM             shift and go to state 176
    SHL             shift and go to state 177
    SHR             shift and go to state 178
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 161
    RelOp                          shift and go to state 164
    AddMulOp                       shift and go to state 165
    UnaryOp                        shift and go to state 172

state 330

    (203) ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep . RBRACE
    (204) ExprCaseClauseRep -> ExprCaseClauseRep . ExprCaseClause
    (206) ExprCaseClause -> . ExprSwitchCase COLON StatementList
    (207) ExprSwitchCase -> . CASE ExpressionList
    (208) ExprSwitchCase -> . DEFAULT

    RBRACE          shift and go to state 340
    CASE            shift and go to state 343
    DEFAULT         shift and go to state 344

    ExprCaseClause                 shift and go to state 341
    ExprSwitchCase                 shift and go to state 342

state 331

    (205) ExprCaseClauseRep -> epsilon .

    RBRACE          reduce using rule 205 (ExprCaseClauseRep -> epsilon .)
    CASE            reduce using rule 205 (ExprCaseClauseRep -> epsilon .)
    DEFAULT         reduce using rule 205 (ExprCaseClauseRep -> epsilon .)


state 332

    (209) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE . TypeCaseClauseOpt RBRACE
    (213) TypeCaseClauseOpt -> . TypeCaseClauseOpt TypeCaseClause
    (214) TypeCaseClauseOpt -> . epsilon
    (258) epsilon -> .

    RBRACE          reduce using rule 258 (epsilon -> .)
    CASE            reduce using rule 258 (epsilon -> .)
    DEFAULT         reduce using rule 258 (epsilon -> .)

    TypeCaseClauseOpt              shift and go to state 345
    epsilon                        shift and go to state 346

state 333

    (210) TypeSwitchGuard -> IdentifierOpt PrimaryExpr . PERIOD LPAREN TYPE RPAREN
    (118) PrimaryExpr -> PrimaryExpr . Selector
    (119) PrimaryExpr -> PrimaryExpr . Index
    (120) PrimaryExpr -> PrimaryExpr . Slice
    (121) PrimaryExpr -> PrimaryExpr . TypeAssertion
    (122) PrimaryExpr -> PrimaryExpr . Arguments
    (123) Selector -> . PERIOD IDENT
    (124) Index -> . LBRACK Expression RBRACK
    (125) Slice -> . LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
    (126) Slice -> . LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK
    (127) TypeAssertion -> . PERIOD LPAREN Type RPAREN
    (128) Arguments -> . LPAREN ExpressionListTypeOpt RPAREN

    PERIOD          shift and go to state 347
    LBRACK          shift and go to state 185
    LPAREN          shift and go to state 186

    Selector                       shift and go to state 179
    Index                          shift and go to state 180
    Slice                          shift and go to state 181
    TypeAssertion                  shift and go to state 182
    Arguments                      shift and go to state 183

state 334

    (211) IdentifierOpt -> IDENT DEFINE .

    LPAREN          reduce using rule 211 (IdentifierOpt -> IDENT DEFINE .)
    IDENT           reduce using rule 211 (IdentifierOpt -> IDENT DEFINE .)
    INT_LITERAL     reduce using rule 211 (IdentifierOpt -> IDENT DEFINE .)
    FLOAT_LITERAL   reduce using rule 211 (IdentifierOpt -> IDENT DEFINE .)
    STRING_LITERAL  reduce using rule 211 (IdentifierOpt -> IDENT DEFINE .)
    IMAG            reduce using rule 211 (IdentifierOpt -> IDENT DEFINE .)


state 335

    (125) Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .

    PERIOD          reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LBRACK          reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LPAREN          reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LOR             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LAND            reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    EQL             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    NEQ             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LSS             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GTR             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LEQ             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GEQ             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OR              reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    XOR             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    QUO             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    REM             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    SHL             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    SHR             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    ADD             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    SUB             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MUL             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AND             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    RBRACK          reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    COMMA           reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    SEMICOLON       reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    RPAREN          reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    INC             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    DEC             reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    ADD_ASSIGN      reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    SUB_ASSIGN      reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MUL_ASSIGN      reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    QUO_ASSIGN      reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    REM_ASSIGN      reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AND_ASSIGN      reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OR_ASSIGN       reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    XOR_ASSIGN      reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    SHL_ASSIGN      reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    SHR_ASSIGN      reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    ASSIGN          reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    COLON           reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LBRACE          reduce using rule 125 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)


state 336

    (126) Slice -> LBRACK ExpressionOpt COLON Expression COLON . Expression RBRACK
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    Expression                     shift and go to state 348
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 337

    (198) ElseOpt -> ELSE IfStmt .

    SEMICOLON       reduce using rule 198 (ElseOpt -> ELSE IfStmt .)


state 338

    (199) ElseOpt -> ELSE Block .

    SEMICOLON       reduce using rule 199 (ElseOpt -> ELSE Block .)


state 339

    (227) ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON . SimpleStmt
    (172) SimpleStmt -> . epsilon
    (173) SimpleStmt -> . ExpressionStmt
    (174) SimpleStmt -> . IncDecStmt
    (175) SimpleStmt -> . Assignment
    (176) SimpleStmt -> . ShortVarDecl
    (258) epsilon -> .
    (179) ExpressionStmt -> . Expression
    (180) IncDecStmt -> . Expression INC
    (181) IncDecStmt -> . Expression DEC
    (182) Assignment -> . ExpressionList assign_op ExpressionList
    (83) ShortVarDecl -> . IDENT DEFINE Expression
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (64) ExpressionList -> . Expression ExpressionRep
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    LBRACE          reduce using rule 258 (epsilon -> .)
    IDENT           shift and go to state 273
    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    SimpleStmt                     shift and go to state 349
    epsilon                        shift and go to state 212
    ExpressionStmt                 shift and go to state 213
    IncDecStmt                     shift and go to state 214
    Assignment                     shift and go to state 215
    ShortVarDecl                   shift and go to state 216
    Expression                     shift and go to state 222
    ExpressionList                 shift and go to state 227
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 340

    (203) ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE .

    SEMICOLON       reduce using rule 203 (ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE .)


state 341

    (204) ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .

    RBRACE          reduce using rule 204 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)
    CASE            reduce using rule 204 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)
    DEFAULT         reduce using rule 204 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)


state 342

    (206) ExprCaseClause -> ExprSwitchCase . COLON StatementList

    COLON           shift and go to state 350


state 343

    (207) ExprSwitchCase -> CASE . ExpressionList
    (64) ExpressionList -> . Expression ExpressionRep
    (133) Expression -> . UnaryExpr
    (134) Expression -> . Expression BinaryOp Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (139) UnaryExpr -> . NOT UnaryExpr
    (117) PrimaryExpr -> . Operand
    (118) PrimaryExpr -> . PrimaryExpr Selector
    (119) PrimaryExpr -> . PrimaryExpr Index
    (120) PrimaryExpr -> . PrimaryExpr Slice
    (121) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (122) PrimaryExpr -> . PrimaryExpr Arguments
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND
    (89) Operand -> . Literal
    (90) Operand -> . OperandName
    (91) Operand -> . LPAREN Expression RPAREN
    (92) Literal -> . BasicLit
    (97) OperandName -> . IDENT
    (93) BasicLit -> . INT_LITERAL
    (94) BasicLit -> . FLOAT_LITERAL
    (95) BasicLit -> . STRING_LITERAL
    (96) BasicLit -> . IMAG

    NOT             shift and go to state 118
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123
    LPAREN          shift and go to state 126
    IDENT           shift and go to state 128
    INT_LITERAL     shift and go to state 129
    FLOAT_LITERAL   shift and go to state 130
    STRING_LITERAL  shift and go to state 131
    IMAG            shift and go to state 132

    ExpressionList                 shift and go to state 351
    Expression                     shift and go to state 146
    UnaryExpr                      shift and go to state 115
    PrimaryExpr                    shift and go to state 116
    UnaryOp                        shift and go to state 117
    Operand                        shift and go to state 119
    Literal                        shift and go to state 124
    OperandName                    shift and go to state 125
    BasicLit                       shift and go to state 127

state 344

    (208) ExprSwitchCase -> DEFAULT .

    COLON           reduce using rule 208 (ExprSwitchCase -> DEFAULT .)


state 345

    (209) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt . RBRACE
    (213) TypeCaseClauseOpt -> TypeCaseClauseOpt . TypeCaseClause
    (215) TypeCaseClause -> . TypeSwitchCase COLON StatementList
    (216) TypeSwitchCase -> . CASE TypeList
    (217) TypeSwitchCase -> . DEFAULT

    RBRACE          shift and go to state 352
    CASE            shift and go to state 355
    DEFAULT         shift and go to state 356

    TypeCaseClause                 shift and go to state 353
    TypeSwitchCase                 shift and go to state 354

state 346

    (214) TypeCaseClauseOpt -> epsilon .

    RBRACE          reduce using rule 214 (TypeCaseClauseOpt -> epsilon .)
    CASE            reduce using rule 214 (TypeCaseClauseOpt -> epsilon .)
    DEFAULT         reduce using rule 214 (TypeCaseClauseOpt -> epsilon .)


state 347

    (210) TypeSwitchGuard -> IdentifierOpt PrimaryExpr PERIOD . LPAREN TYPE RPAREN
    (123) Selector -> PERIOD . IDENT
    (127) TypeAssertion -> PERIOD . LPAREN Type RPAREN

    LPAREN          shift and go to state 357
    IDENT           shift and go to state 236


state 348

    (126) Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression . RBRACK
    (134) Expression -> Expression . BinaryOp Expression
    (140) BinaryOp -> . LOR
    (141) BinaryOp -> . LAND
    (142) BinaryOp -> . RelOp
    (143) BinaryOp -> . AddMulOp
    (144) RelOp -> . EQL
    (145) RelOp -> . NEQ
    (146) RelOp -> . LSS
    (147) RelOp -> . GTR
    (148) RelOp -> . LEQ
    (149) RelOp -> . GEQ
    (150) AddMulOp -> . UnaryOp
    (151) AddMulOp -> . OR
    (152) AddMulOp -> . XOR
    (153) AddMulOp -> . QUO
    (154) AddMulOp -> . REM
    (155) AddMulOp -> . SHL
    (156) AddMulOp -> . SHR
    (157) UnaryOp -> . ADD
    (158) UnaryOp -> . SUB
    (159) UnaryOp -> . MUL
    (160) UnaryOp -> . AND

    RBRACK          shift and go to state 358
    LOR             shift and go to state 162
    LAND            shift and go to state 163
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    GTR             shift and go to state 169
    LEQ             shift and go to state 170
    GEQ             shift and go to state 171
    OR              shift and go to state 173
    XOR             shift and go to state 174
    QUO             shift and go to state 175
    REM             shift and go to state 176
    SHL             shift and go to state 177
    SHR             shift and go to state 178
    ADD             shift and go to state 120
    SUB             shift and go to state 121
    MUL             shift and go to state 122
    AND             shift and go to state 123

    BinaryOp                       shift and go to state 161
    RelOp                          shift and go to state 164
    AddMulOp                       shift and go to state 165
    UnaryOp                        shift and go to state 172

state 349

    (227) ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt .

    LBRACE          reduce using rule 227 (ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt .)


state 350

    (206) ExprCaseClause -> ExprSwitchCase COLON . StatementList
    (46) StatementList -> . StatementRep
    (47) StatementRep -> . StatementRep Statement SEMICOLON
    (48) StatementRep -> . epsilon
    (258) epsilon -> .

    RETURN          reduce using rule 258 (epsilon -> .)
    BREAK           reduce using rule 258 (epsilon -> .)
    CONTINUE        reduce using rule 258 (epsilon -> .)
    GOTO            reduce using rule 258 (epsilon -> .)
    LBRACE          reduce using rule 258 (epsilon -> .)
    IF              reduce using rule 258 (epsilon -> .)
    FOR             reduce using rule 258 (epsilon -> .)
    CONST           reduce using rule 258 (epsilon -> .)
    TYPE            reduce using rule 258 (epsilon -> .)
    VAR             reduce using rule 258 (epsilon -> .)
    IDENT           reduce using rule 258 (epsilon -> .)
    SWITCH          reduce using rule 258 (epsilon -> .)
    NOT             reduce using rule 258 (epsilon -> .)
    ADD             reduce using rule 258 (epsilon -> .)
    SUB             reduce using rule 258 (epsilon -> .)
    MUL             reduce using rule 258 (epsilon -> .)
    AND             reduce using rule 258 (epsilon -> .)
    LPAREN          reduce using rule 258 (epsilon -> .)
    INT_LITERAL     reduce using rule 258 (epsilon -> .)
    FLOAT_LITERAL   reduce using rule 258 (epsilon -> .)
    STRING_LITERAL  reduce using rule 258 (epsilon -> .)
    IMAG            reduce using rule 258 (epsilon -> .)
    SEMICOLON       reduce using rule 258 (epsilon -> .)
    RBRACE          reduce using rule 258 (epsilon -> .)
    CASE            reduce using rule 258 (epsilon -> .)
    DEFAULT         reduce using rule 258 (epsilon -> .)

    StatementList                  shift and go to state 359
    StatementRep                   shift and go to state 149
    epsilon                        shift and go to state 150

state 351

    (207) ExprSwitchCase -> CASE ExpressionList .

    COLON           reduce using rule 207 (ExprSwitchCase -> CASE ExpressionList .)


state 352

    (209) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE .

    SEMICOLON       reduce using rule 209 (TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE .)


state 353

    (213) TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .

    RBRACE          reduce using rule 213 (TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .)
    CASE            reduce using rule 213 (TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .)
    DEFAULT         reduce using rule 213 (TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .)


state 354

    (215) TypeCaseClause -> TypeSwitchCase . COLON StatementList

    COLON           shift and go to state 360


state 355

    (216) TypeSwitchCase -> CASE . TypeList
    (218) TypeList -> . Type TypeRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . STRING
    (10) TypeToken -> . BOOL
    (11) TypeToken -> . COMPLEX
    (12) TypeToken -> . TYPE IDENT
    (98) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71
    COMPLEX         shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    TypeList                       shift and go to state 361
    Type                           shift and go to state 362
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 356

    (217) TypeSwitchCase -> DEFAULT .

    COLON           reduce using rule 217 (TypeSwitchCase -> DEFAULT .)


state 357

    (210) TypeSwitchGuard -> IdentifierOpt PrimaryExpr PERIOD LPAREN . TYPE RPAREN
    (127) TypeAssertion -> PERIOD LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . STRING
    (10) TypeToken -> . BOOL
    (11) TypeToken -> . COMPLEX
    (12) TypeToken -> . TYPE IDENT
    (98) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    TYPE            shift and go to state 363
    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71
    COMPLEX         shift and go to state 72
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Type                           shift and go to state 294
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 358

    (126) Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .

    PERIOD          reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LBRACK          reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LPAREN          reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LOR             reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LAND            reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    EQL             reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    NEQ             reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LSS             reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    GTR             reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LEQ             reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    GEQ             reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    OR              reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    XOR             reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    QUO             reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    REM             reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    SHL             reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    SHR             reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    ADD             reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    SUB             reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    MUL             reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    AND             reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    RBRACK          reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    COMMA           reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    SEMICOLON       reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    RPAREN          reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    INC             reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    DEC             reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    QUO_ASSIGN      reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    REM_ASSIGN      reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    AND_ASSIGN      reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    OR_ASSIGN       reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    ASSIGN          reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    COLON           reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LBRACE          reduce using rule 126 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)


state 359

    (206) ExprCaseClause -> ExprSwitchCase COLON StatementList .

    RBRACE          reduce using rule 206 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    CASE            reduce using rule 206 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 206 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)


state 360

    (215) TypeCaseClause -> TypeSwitchCase COLON . StatementList
    (46) StatementList -> . StatementRep
    (47) StatementRep -> . StatementRep Statement SEMICOLON
    (48) StatementRep -> . epsilon
    (258) epsilon -> .

    RETURN          reduce using rule 258 (epsilon -> .)
    BREAK           reduce using rule 258 (epsilon -> .)
    CONTINUE        reduce using rule 258 (epsilon -> .)
    GOTO            reduce using rule 258 (epsilon -> .)
    LBRACE          reduce using rule 258 (epsilon -> .)
    IF              reduce using rule 258 (epsilon -> .)
    FOR             reduce using rule 258 (epsilon -> .)
    CONST           reduce using rule 258 (epsilon -> .)
    TYPE            reduce using rule 258 (epsilon -> .)
    VAR             reduce using rule 258 (epsilon -> .)
    IDENT           reduce using rule 258 (epsilon -> .)
    SWITCH          reduce using rule 258 (epsilon -> .)
    NOT             reduce using rule 258 (epsilon -> .)
    ADD             reduce using rule 258 (epsilon -> .)
    SUB             reduce using rule 258 (epsilon -> .)
    MUL             reduce using rule 258 (epsilon -> .)
    AND             reduce using rule 258 (epsilon -> .)
    LPAREN          reduce using rule 258 (epsilon -> .)
    INT_LITERAL     reduce using rule 258 (epsilon -> .)
    FLOAT_LITERAL   reduce using rule 258 (epsilon -> .)
    STRING_LITERAL  reduce using rule 258 (epsilon -> .)
    IMAG            reduce using rule 258 (epsilon -> .)
    SEMICOLON       reduce using rule 258 (epsilon -> .)
    RBRACE          reduce using rule 258 (epsilon -> .)
    CASE            reduce using rule 258 (epsilon -> .)
    DEFAULT         reduce using rule 258 (epsilon -> .)

    StatementList                  shift and go to state 364
    StatementRep                   shift and go to state 149
    epsilon                        shift and go to state 150

state 361

    (216) TypeSwitchCase -> CASE TypeList .

    COLON           reduce using rule 216 (TypeSwitchCase -> CASE TypeList .)


state 362

    (218) TypeList -> Type . TypeRep
    (219) TypeRep -> . TypeRep COMMA Type
    (220) TypeRep -> . epsilon
    (258) epsilon -> .

    COMMA           reduce using rule 258 (epsilon -> .)
    COLON           reduce using rule 258 (epsilon -> .)

    TypeRep                        shift and go to state 365
    epsilon                        shift and go to state 366

state 363

    (210) TypeSwitchGuard -> IdentifierOpt PrimaryExpr PERIOD LPAREN TYPE . RPAREN
    (12) TypeToken -> TYPE . IDENT

    RPAREN          shift and go to state 367
    IDENT           shift and go to state 111


state 364

    (215) TypeCaseClause -> TypeSwitchCase COLON StatementList .

    RBRACE          reduce using rule 215 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    CASE            reduce using rule 215 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 215 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)


state 365

    (218) TypeList -> Type TypeRep .
    (219) TypeRep -> TypeRep . COMMA Type

    COLON           reduce using rule 218 (TypeList -> Type TypeRep .)
    COMMA           shift and go to state 368


state 366

    (220) TypeRep -> epsilon .

    COMMA           reduce using rule 220 (TypeRep -> epsilon .)
    COLON           reduce using rule 220 (TypeRep -> epsilon .)


state 367

    (210) TypeSwitchGuard -> IdentifierOpt PrimaryExpr PERIOD LPAREN TYPE RPAREN .

    LBRACE          reduce using rule 210 (TypeSwitchGuard -> IdentifierOpt PrimaryExpr PERIOD LPAREN TYPE RPAREN .)


state 368

    (219) TypeRep -> TypeRep COMMA . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (13) TypeLit -> . ArrayType
    (14) TypeLit -> . StructType
    (15) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . STRING
    (10) TypeToken -> . BOOL
    (11) TypeToken -> . COMPLEX
    (12) TypeToken -> . TYPE IDENT
    (98) QualifiedIdent -> . IDENT PERIOD TypeName
    (18) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (21) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (28) PointerType -> . MUL BaseType

    LPAREN          shift and go to state 62
    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71
    COMPLEX         shift and go to state 72
    TYPE            shift and go to state 73
    IDENT           shift and go to state 74
    LBRACK          shift and go to state 75
    STRUCT          shift and go to state 76
    MUL             shift and go to state 77

    Type                           shift and go to state 369
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 61
    TypeToken                      shift and go to state 63
    QualifiedIdent                 shift and go to state 64
    ArrayType                      shift and go to state 65
    StructType                     shift and go to state 66
    PointerType                    shift and go to state 67

state 369

    (219) TypeRep -> TypeRep COMMA Type .

    COMMA           reduce using rule 219 (TypeRep -> TypeRep COMMA Type .)
    COLON           reduce using rule 219 (TypeRep -> TypeRep COMMA Type .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 151 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 228 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 228 resolved as shift
WARNING: shift/reduce conflict for INT_LITERAL in state 228 resolved as shift
WARNING: shift/reduce conflict for FLOAT_LITERAL in state 228 resolved as shift
WARNING: shift/reduce conflict for STRING_LITERAL in state 228 resolved as shift
WARNING: shift/reduce conflict for IMAG in state 228 resolved as shift
WARNING: shift/reduce conflict for LOR in state 235 resolved as shift
WARNING: shift/reduce conflict for LAND in state 235 resolved as shift
WARNING: shift/reduce conflict for EQL in state 235 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 235 resolved as shift
WARNING: shift/reduce conflict for LSS in state 235 resolved as shift
WARNING: shift/reduce conflict for GTR in state 235 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 235 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 235 resolved as shift
WARNING: shift/reduce conflict for OR in state 235 resolved as shift
WARNING: shift/reduce conflict for XOR in state 235 resolved as shift
WARNING: shift/reduce conflict for QUO in state 235 resolved as shift
WARNING: shift/reduce conflict for REM in state 235 resolved as shift
WARNING: shift/reduce conflict for SHL in state 235 resolved as shift
WARNING: shift/reduce conflict for SHR in state 235 resolved as shift
WARNING: shift/reduce conflict for ADD in state 235 resolved as shift
WARNING: shift/reduce conflict for SUB in state 235 resolved as shift
WARNING: shift/reduce conflict for MUL in state 235 resolved as shift
WARNING: shift/reduce conflict for AND in state 235 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 289 resolved as shift

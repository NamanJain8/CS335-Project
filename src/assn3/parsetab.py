
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNNOTleftLORleftLANDleftORleftXORleftANDleftEQLNEQleftLSSGTRLEQGEQleftSHLSHRleftADDSUBleftMULQUOREMADD ADD_ASSIGN AND AND_ASSIGN AND_NOT AND_NOT_ASSIGN ARROW ASSIGN BOOL BREAK CASE CHAN CHAR COLON COMMA COMPLEX CONST CONTINUE DEC DEFAULT DEFER DEFINE ELLIPSIS ELSE EQL FALLTHROUGH FLOAT FLOAT_LITERAL FOR FUNC GEQ GO GOTO GTR IDENT IF IMAG IMPORT INC INT INTERFACE INT_LITERAL LAND LBRACE LBRACK LEQ LOR LPAREN LSS MAP MUL MUL_ASSIGN NEQ NOT OR OR_ASSIGN PACKAGE PERIOD QUO QUO_ASSIGN RANGE RBRACE RBRACK REM REM_ASSIGN RETURN RPAREN SELECT SEMICOLON SHL SHL_ASSIGN SHR SHR_ASSIGN STRING STRING_LITERAL STRUCT SUB SUB_ASSIGN SWITCH TYPE TYPECAST VAR XOR XOR_ASSIGNstart : SourceFileType : TypeName\n\t\t\t\t\t| TypeLit\n\t\t\t\t\t| LPAREN Type RPARENTypeName : TypeToken\n\t\t\t\t\t\t\t| QualifiedIdentTypeToken : INT\n\t\t\t\t\t\t\t | FLOAT\n\t\t\t\t\t\t\t | STRING\n\t\t\t\t\t\t\t | BOOL\n\t\t\t\t\t\t\t | COMPLEX\n\t\t\t\t\t\t\t | TYPE IDENTTypeLit : ArrayType\n\t\t\t\t\t   | StructType\n\t\t\t\t\t   | PointerTypeTypeOpt : Type\n\t\t\t\t\t   | epsilonArrayType : LBRACK ArrayLength RBRACK ElementType ArrayLength : Expression  ElementType : Type StructType : STRUCT LBRACE FieldDeclRep RBRACE FieldDeclRep : FieldDeclRep FieldDecl SEMICOLON\n\t\t\t\t\t\t\t\t\t| epsilon  FieldDecl : IdentifierList Type TagOpt TagOpt : Tag\n\t\t\t\t| epsilon  Tag : STRING_LITERAL PointerType : MUL BaseTypeBaseType : TypeSignature : Parameters ResultOptResultOpt : Result\n\t\t\t\t\t\t\t | epsilonResult : Parameters\n\t\t\t\t\t  | TypeParameters : LPAREN ParameterListOpt RPARENParameterListOpt : ParametersList\n\t\t\t\t\t\t\t\t\t\t\t\t\t | epsilonParametersList : Type\n\t\t\t\t\t\t\t\t\t  | IdentifierList Type\n\t\t\t\t\t\t\t\t\t  | ParameterDeclCommaRepParameterDeclCommaRep : ParameterDeclCommaRep COMMA ParameterDecl\n\t\t\t\t\t\t\t\t\t\t\t\t\t | ParameterDecl COMMA ParameterDeclParameterDecl : IdentifierList Type\n\t\t\t\t\t\t\t\t\t | TypeBlock : LBRACE StatementList RBRACEStatementList : StatementRepStatementRep : StatementRep Statement SEMICOLON\n\t\t\t\t\t\t\t\t\t| epsilonDeclaration : ConstDecl\n\t\t\t\t\t\t\t\t   | TypeDecl\n\t\t\t\t\t\t\t\t   | VarDeclTopLevelDecl : Declaration\n\t\t\t\t\t\t\t\t\t| FunctionDeclConstDecl : CONST ConstSpec\n\t\t\t\t\t\t\t | CONST LPAREN ConstSpecRep RPARENConstSpecRep : ConstSpecRep ConstSpec SEMICOLON\n\t\t\t\t\t\t\t\t\t| epsilonConstSpec : IdentifierList TypeExprListOptTypeExprListOpt : TypeOpt ASSIGN ExpressionList\n\t\t\t\t\t\t\t\t\t   | epsilonIdentifierList : IDENT IdentifierRepIdentifierRep : IdentifierRep COMMA IDENT\n\t\t\t\t\t\t\t\t\t | epsilonExpressionList : Expression ExpressionRepExpressionRep : ExpressionRep COMMA Expression\n\t\t\t\t\t\t\t\t\t | epsilonTypeDecl : TYPE TypeSpec\n\t\t\t\t\t\t\t| TYPE LPAREN TypeSpecRep RPARENTypeSpecRep : TypeSpecRep TypeSpec SEMICOLON\n\t\t\t\t\t\t\t   | epsilonTypeSpec : AliasDecl\n\t\t\t\t\t\t\t| TypeDefAliasDecl : IDENT ASSIGN TypeTypeDef : IDENT TypeVarDecl : VAR VarSpec\n\t\t\t\t\t   | VAR LPAREN VarSpecRep RPARENVarSpecRep : VarSpecRep VarSpec SEMICOLON\n\t\t\t\t\t\t\t  | epsilonVarSpec : IdentifierList Type ExpressionListOpt\n\t\t\t\t\t   | IdentifierList ASSIGN ExpressionListExpressionListOpt : ASSIGN ExpressionList\n\t\t\t\t\t\t\t\t\t\t\t | epsilon ShortVarDecl : IDENT DEFINE Expression FunctionDecl : FUNC FunctionName Function\n\t\t\t\t\t\t\t\t\t| FUNC FunctionName SignatureFunctionName : IDENTFunction : Signature FunctionBodyFunctionBody : BlockOperand : Literal\n\t\t\t\t\t   | OperandName\n\t\t\t\t\t   | LPAREN Expression RPARENLiteral : BasicLitBasicLit : INT_LITERAL\n\t\t\t\t\t\t\t| FLOAT_LITERAL\n\t\t\t\t\t\t\t| STRING_LITERAL\n\t\t\t\t\t\t\t| IMAG\n\t\t\t\t\t\t\tOperandName : IDENTQualifiedIdent : IDENT PERIOD TypeNameCompositeLit : LiteralType LiteralValueLiteralType : ArrayType\n\t\t\t\t\t\t\t   | ElementType\n\t\t\t\t\t\t\t   | TypeNameLiteralValue : LBRACE ElementListOpt RBRACEElementListOpt : ElementList\n\t\t\t\t\t\t\t\t\t\t\t   | epsilonElementList : KeyedElement KeyedElementCommaRepKeyedElementCommaRep : KeyedElementCommaRep COMMA KeyedElement\n\t\t\t\t\t\t\t\t\t\t\t\t\t| epsilonKeyedElement : Key COLON Element\n\t\t\t\t\t\t\t\t\t| ElementKey : FieldName\n\t\t\t   | Expression\n\t\t\t   | LiteralValueFieldName : IDENTElement : Expression\n\t\t\t\t\t   | LiteralValuePrimaryExpr : Operand\n\t\t\t\t\t\t\t   | PrimaryExpr Selector\n\t\t\t\t\t\t\t   | Conversion\n\t\t\t\t\t\t\t   | PrimaryExpr Index\n\t\t\t\t\t\t\t   | PrimaryExpr Slice\n\t\t\t\t\t\t\t   | PrimaryExpr TypeAssertion\n\t\t\t\t\t\t\t   | PrimaryExpr ArgumentsSelector : PERIOD IDENTIndex : LBRACK Expression RBRACKSlice : LBRACK ExpressionOpt COLON ExpressionOpt RBRACK\n\t\t\t\t\t | LBRACK ExpressionOpt COLON Expression COLON Expression RBRACKTypeAssertion : PERIOD LPAREN Type RPARENArguments : LPAREN ExpressionListTypeOpt RPARENExpressionListTypeOpt : ExpressionList\n\t\t\t\t\t\t\t\t\t\t\t\t\t | epsilonExpressionListCommaOpt : COMMA ExpressionList\n\t\t\t\t\t\t\t\t\t\t\t\t\t  | epsilonExpression : UnaryExpr\n\t\t\t\t\t\t\t  | Expression BinaryOp ExpressionExpressionOpt : Expression\n\t\t\t\t\t\t\t\t\t | epsilonUnaryExpr : PrimaryExpr\n\t\t\t\t\t\t\t | UnaryOp UnaryExpr\n\t\t\t\t\t\t\t | NOT UnaryExprBinaryOp : LOR\n\t\t\t\t\t\t\t| LAND\n\t\t\t\t\t\t\t| RelOp\n\t\t\t\t\t\t\t| AddMulOpRelOp : EQL\n\t\t\t\t\t | NEQ\n\t\t\t\t\t | LSS\n\t\t\t\t\t | GTR\n\t\t\t\t\t | LEQ\n\t\t\t\t\t | GEQAddMulOp : UnaryOp\n\t\t\t\t\t\t\t| OR\n\t\t\t\t\t\t\t| XOR\n\t\t\t\t\t\t\t| QUO\n\t\t\t\t\t\t\t| REM\n\t\t\t\t\t\t\t| SHL\n\t\t\t\t\t\t\t| SHRUnaryOp : ADD\n\t\t\t\t\t   | SUB\n\t\t\t\t\t   | MUL\n\t\t\t\t\t   | AND Conversion : TYPECAST Type LPAREN Expression RPARENStatement : Declaration\n\t\t\t\t\t\t\t | LabeledStmt\n\t\t\t\t\t\t\t | SimpleStmt\n\t\t\t\t\t\t\t | ReturnStmt\n\t\t\t\t\t\t\t | BreakStmt\n\t\t\t\t\t\t\t | ContinueStmt\n\t\t\t\t\t\t\t | GotoStmt\n\t\t\t\t\t\t\t | Block\n\t\t\t\t\t\t\t | IfStmt\n\t\t\t\t\t\t\t | SwitchStmt\n\t\t\t\t\t\t\t | ForStmt  SimpleStmt : epsilon\n\t\t\t\t\t\t\t\t   | ExpressionStmt\n\t\t\t\t\t\t\t\t   | IncDecStmt\n\t\t\t\t\t\t\t\t   | Assignment\n\t\t\t\t\t\t\t\t   | ShortVarDecl  LabeledStmt : Label COLON Statement  Label : IDENT  ExpressionStmt : Expression  IncDecStmt : Expression INC\n\t\t\t\t\t\t\t\t   | Expression DEC  Assignment : ExpressionList assign_op ExpressionList assign_op : AssignOp AssignOp : ADD_ASSIGN\n\t\t\t\t\t\t\t | SUB_ASSIGN\n\t\t\t\t\t\t\t | MUL_ASSIGN\n\t\t\t\t\t\t\t | QUO_ASSIGN\n\t\t\t\t\t\t\t | REM_ASSIGN\n\t\t\t\t\t\t\t | AND_ASSIGN\n\t\t\t\t\t\t\t | OR_ASSIGN\n\t\t\t\t\t\t\t | XOR_ASSIGN\n\t\t\t\t\t\t\t | SHL_ASSIGN\n\t\t\t\t\t\t\t | SHR_ASSIGN\n\t\t\t\t\t\t\t | ASSIGN  IfStmt : IF Expression Block ElseOpt  SimpleStmtOpt : SimpleStmt SEMICOLON\n\t\t\t\t\t\t\t\t\t\t  | epsilon  ElseOpt : ELSE IfStmt\n\t\t\t\t\t\t\t| ELSE Block\n\t\t\t\t\t\t\t| epsilon  SwitchStmt : ExprSwitchStmt\n\t\t\t\t\t\t\t\t   | TypeSwitchStmt  ExprSwitchStmt : SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE ExprCaseClauseRep : ExprCaseClauseRep ExprCaseClause\n\t\t\t\t\t\t\t\t\t\t\t\t  | epsilon ExprCaseClause : ExprSwitchCase COLON StatementList ExprSwitchCase : CASE ExpressionList\n\t\t\t\t\t\t\t\t\t\t   | DEFAULT  TypeSwitchStmt : SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE TypeSwitchGuard : IdentifierOpt PrimaryExpr PERIOD LPAREN TYPE RPAREN  IdentifierOpt : IDENT DEFINE\n\t\t\t\t\t\t\t\t\t\t  | epsilon  TypeCaseClauseOpt : TypeCaseClauseOpt TypeCaseClause\n\t\t\t\t\t\t\t\t\t\t\t\t  | epsilon  TypeCaseClause : TypeSwitchCase COLON StatementList TypeSwitchCase : CASE TypeList\n\t\t\t\t\t\t\t\t\t\t   | DEFAULT  TypeList : Type TypeRep TypeRep : TypeRep COMMA Type\n\t\t\t\t\t\t\t| epsilon ForStmt : FOR ConditionBlockOpt BlockConditionBlockOpt : epsilon\n\t\t\t\t\t\t   | Condition\n\t\t\t\t\t\t   | ForClause\n\t\t\t\t\t\t   | RangeClauseCondition : Expression ForClause : SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmtConditionOpt : epsilon\n\t\t\t\t\t| Condition RangeClause : ExpressionIdentListOpt RANGE ExpressionExpressionIdentListOpt : epsilon\n\t\t\t\t\t\t   | ExpressionIdentifierExpressionIdentifier : ExpressionList ASSIGNReturnStmt : RETURN ExpressionListPureOptExpressionListPureOpt : ExpressionList\n\t\t\t\t\t\t   | epsilonBreakStmt : BREAK LabelOptContinueStmt : CONTINUE LabelOptLabelOpt : Label\n\t\t\t\t  | epsilon GotoStmt : GOTO Label SourceFile : PackageClause SEMICOLON ImportDeclRep TopLevelDeclRepImportDeclRep : epsilon\n\t\t\t\t\t | ImportDeclRep ImportDecl SEMICOLONTopLevelDeclRep : TopLevelDeclRep TopLevelDecl SEMICOLON\n\t\t\t\t\t\t\t\t\t\t   | epsilonPackageClause : PACKAGE PackageNamePackageName : IDENTImportDecl : IMPORT ImportSpec\n\t\t\t\t\t| IMPORT LPAREN ImportSpecRep RPAREN  ImportSpecRep : ImportSpecRep ImportSpec SEMICOLON\n\t\t\t\t\t\t  | epsilon  ImportSpec : PackageNameDotOpt ImportPath  PackageNameDotOpt : PERIOD\n\t\t\t\t\t\t\t\t\t\t\t\t  | PackageName\n\t\t\t\t\t\t\t\t\t\t\t\t  | epsilon ImportPath : STRING_LITERAL epsilon : '
    
_lr_action_items = {'PACKAGE':([0,],[4,]),'$end':([1,2,5,8,9,10,12,24,31,],[0,-1,-260,-260,-245,-244,-248,-246,-247,]),'SEMICOLON':([3,6,7,11,14,15,16,17,18,19,25,34,36,37,38,40,41,43,48,49,50,51,52,56,58,60,61,63,64,65,66,67,68,69,70,71,72,78,79,83,86,88,89,90,91,92,93,94,95,96,97,107,108,111,115,116,119,120,125,126,129,130,131,132,133,134,136,137,139,140,141,142,143,144,146,147,148,151,152,154,159,160,161,181,182,183,184,185,189,190,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,225,226,227,228,229,231,236,237,238,239,247,249,250,253,254,255,256,257,258,259,260,261,262,263,265,266,268,272,273,277,294,295,296,299,301,304,305,306,307,308,309,312,313,320,323,324,325,326,327,328,330,331,332,333,334,341,343,344,346,356,358,364,366,],[5,-249,-250,24,31,-52,-53,-49,-50,-51,-251,-54,-260,-260,-67,-71,-72,-75,-255,-259,-84,-85,-260,-58,-60,-2,-3,-5,-6,-13,-14,-15,-7,-8,-9,-10,-11,-61,-63,-74,-260,-252,149,-87,-88,-260,-33,-30,-31,-32,-34,-55,158,-12,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,-28,-29,-68,196,-73,-76,197,-79,-82,-80,-260,-260,-48,-35,-59,-4,-98,-118,-120,-121,-122,-123,-139,-140,-62,-81,-64,-66,-45,253,-163,-164,-165,-166,-167,-168,-169,-170,-171,-172,-173,-174,-175,-176,-177,-178,-260,-260,-260,-181,-203,-204,-260,-97,-260,-18,-20,-135,-124,-91,-21,303,-47,-260,-236,-237,-238,-239,-241,-242,-180,-240,-243,-182,-183,-174,-181,309,-97,-181,-174,319,-125,-129,-260,-65,-179,-260,-223,-260,-83,-184,-128,-162,-24,-25,-26,-27,-197,-202,345,-230,-231,-228,-126,-200,-201,-205,-260,-211,-127,-260,]),'IDENT':([4,13,20,21,22,23,26,35,36,37,39,42,44,45,46,47,52,53,54,55,62,73,75,77,78,79,80,81,82,84,85,87,92,98,103,105,109,112,117,118,121,122,123,124,127,128,135,138,145,149,151,152,154,156,157,158,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,186,187,188,193,194,195,196,197,220,221,222,223,224,228,231,233,240,248,251,252,253,254,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,295,300,303,309,310,311,316,318,319,340,342,345,349,353,356,361,363,366,369,374,],[7,7,33,37,42,37,-260,-260,74,-260,-260,74,-260,74,7,-254,74,105,37,-57,74,111,130,74,-61,-63,42,-70,74,37,-78,130,-260,105,74,-260,130,74,130,130,-158,-159,-160,-161,130,74,-260,195,130,-253,229,-48,-35,105,105,-56,74,130,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-157,239,130,130,37,-23,-62,-69,-77,130,261,261,261,130,277,277,74,74,130,74,130,-47,229,130,130,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,317,-199,130,-22,130,130,-196,130,-214,-198,-213,130,277,130,239,-260,74,74,-260,111,74,]),'IMPORT':([5,8,9,24,],[-260,13,-245,-246,]),'FUNC':([5,8,9,10,12,24,31,],[-260,-260,-245,20,-248,-246,-247,]),'CONST':([5,8,9,10,12,24,31,92,151,152,253,254,356,366,],[-260,-260,-245,21,-248,-246,-247,-260,21,-48,-47,21,-260,-260,]),'TYPE':([5,8,9,10,12,24,31,36,37,42,45,52,53,62,77,78,79,82,92,98,103,105,112,128,151,152,154,156,157,162,195,233,240,251,253,254,356,361,363,366,374,],[-260,-260,-245,22,-248,-246,-247,73,-260,73,73,73,73,73,73,-61,-63,73,-260,73,73,-260,73,73,22,-48,-35,73,73,73,-62,73,73,73,-47,22,-260,73,369,-260,73,]),'VAR':([5,8,9,10,12,24,31,92,151,152,253,254,356,366,],[-260,-260,-245,23,-248,-246,-247,-260,23,-48,-47,23,-260,-260,]),'STRING_LITERAL':([7,13,26,27,28,29,30,46,47,60,61,63,64,65,66,67,68,69,70,71,72,75,87,92,109,111,117,118,121,122,123,124,127,136,137,145,149,151,152,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,187,188,220,224,228,231,236,237,248,249,252,253,254,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,295,300,304,309,310,311,316,318,319,340,342,345,349,356,366,],[-250,-260,-260,49,-256,-257,-258,-260,-254,-2,-3,-5,-6,-13,-14,-15,-7,-8,-9,-10,-11,133,133,-260,133,-12,133,133,-158,-159,-160,-161,133,-28,-29,133,-253,133,-48,-4,-98,133,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-157,133,133,133,133,133,133,-18,-20,133,-21,133,-47,133,133,133,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-260,-199,133,327,133,133,-196,133,-214,-198,-213,133,133,133,-260,-260,]),'LPAREN':([13,21,22,23,32,33,36,37,42,45,52,53,60,61,62,63,64,65,66,67,68,69,70,71,72,75,77,78,79,82,87,92,98,103,105,109,111,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,145,151,152,154,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,192,195,220,224,228,229,231,233,236,237,239,240,247,248,249,251,252,253,254,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,295,299,300,301,309,310,311,316,318,319,320,323,339,340,341,342,345,349,353,356,361,363,364,366,374,],[26,35,39,44,53,-86,62,-260,62,62,98,62,-2,-3,62,-5,-6,-13,-14,-15,-7,-8,-9,-10,-11,127,62,-61,-63,62,127,-260,62,62,-260,127,-12,188,127,127,-117,-119,-158,-159,-160,-161,-89,-90,127,62,-92,-97,-93,-94,-95,-96,-28,-29,127,127,-48,-35,62,62,-4,-98,62,127,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-157,-118,-120,-121,-122,-123,240,127,127,248,-62,127,127,127,-97,127,62,-18,-20,-124,62,-91,127,-21,62,127,-47,127,-97,127,127,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-260,-199,-125,127,-129,127,127,-196,127,-214,-198,-128,-162,188,-213,-126,127,127,127,363,-260,62,62,-127,-260,62,]),'PERIOD':([13,26,46,47,74,105,116,119,120,125,126,129,130,131,132,133,134,149,181,182,183,184,185,229,239,247,277,299,301,320,323,339,341,364,],[28,-260,28,-254,112,112,186,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,-253,-118,-120,-121,-122,-123,-97,-124,-91,-97,-125,-129,-128,-162,353,-126,-127,]),'RPAREN':([26,35,39,44,46,47,53,54,55,60,61,63,64,65,66,67,68,69,70,71,72,80,81,84,85,98,99,100,101,102,104,110,111,115,116,119,120,125,126,129,130,131,132,133,134,136,137,148,149,153,155,158,160,161,181,182,183,184,185,188,189,190,191,196,197,199,200,232,234,235,236,237,238,239,244,245,246,247,249,297,298,299,301,302,305,320,323,341,364,369,],[-260,-260,-260,-260,88,-254,-260,107,-57,-2,-3,-5,-6,-13,-14,-15,-7,-8,-9,-10,-11,139,-70,142,-78,-260,154,-36,-37,-38,-40,160,-12,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,-28,-29,-260,-253,160,-39,-56,-4,-98,-118,-120,-121,-122,-123,-260,-139,-140,247,-69,-77,-64,-66,-41,-44,-42,-18,-20,-135,-124,301,-130,-131,-91,-21,-43,320,-125,-129,323,-65,-128,-162,-126,-127,373,]),'ASSIGN':([36,37,42,45,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,78,79,86,111,115,116,119,120,125,126,129,130,131,132,133,134,136,137,160,161,181,182,183,184,185,189,190,195,199,200,225,229,230,236,237,238,239,247,249,272,276,277,294,299,301,305,320,323,341,364,],[-260,-260,82,87,109,-17,-16,-2,-3,-5,-6,-13,-14,-15,-7,-8,-9,-10,-11,-61,-63,145,-12,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,-28,-29,-4,-98,-118,-120,-121,-122,-123,-139,-140,-62,-64,-66,-260,-97,291,-18,-20,-135,-124,-91,-21,-260,311,-97,-260,-125,-129,-65,-128,-162,-126,-127,]),'INT':([36,37,42,45,52,53,62,77,78,79,82,98,103,105,112,128,154,156,157,162,195,233,240,251,361,363,374,],[68,-260,68,68,68,68,68,68,-61,-63,68,68,68,-260,68,68,-35,68,68,68,-62,68,68,68,68,68,68,]),'FLOAT':([36,37,42,45,52,53,62,77,78,79,82,98,103,105,112,128,154,156,157,162,195,233,240,251,361,363,374,],[69,-260,69,69,69,69,69,69,-61,-63,69,69,69,-260,69,69,-35,69,69,69,-62,69,69,69,69,69,69,]),'STRING':([36,37,42,45,52,53,62,77,78,79,82,98,103,105,112,128,154,156,157,162,195,233,240,251,361,363,374,],[70,-260,70,70,70,70,70,70,-61,-63,70,70,70,-260,70,70,-35,70,70,70,-62,70,70,70,70,70,70,]),'BOOL':([36,37,42,45,52,53,62,77,78,79,82,98,103,105,112,128,154,156,157,162,195,233,240,251,361,363,374,],[71,-260,71,71,71,71,71,71,-61,-63,71,71,71,-260,71,71,-35,71,71,71,-62,71,71,71,71,71,71,]),'COMPLEX':([36,37,42,45,52,53,62,77,78,79,82,98,103,105,112,128,154,156,157,162,195,233,240,251,361,363,374,],[72,-260,72,72,72,72,72,72,-61,-63,72,72,72,-260,72,72,-35,72,72,72,-62,72,72,72,72,72,72,]),'LBRACK':([36,37,42,45,52,53,62,77,78,79,82,98,103,105,116,119,120,125,126,128,129,130,131,132,133,134,154,156,157,162,181,182,183,184,185,195,229,233,239,240,247,251,277,299,301,320,323,339,341,361,363,364,374,],[75,-260,75,75,75,75,75,75,-61,-63,75,75,75,-260,187,-117,-119,-89,-90,75,-92,-97,-93,-94,-95,-96,-35,75,75,75,-118,-120,-121,-122,-123,-62,-97,75,-124,75,-91,75,-97,-125,-129,-128,-162,187,-126,75,75,-127,75,]),'STRUCT':([36,37,42,45,52,53,62,77,78,79,82,98,103,105,128,154,156,157,162,195,233,240,251,361,363,374,],[76,-260,76,76,76,76,76,76,-61,-63,76,76,76,-260,76,-35,76,76,76,-62,76,76,76,76,76,76,]),'MUL':([36,37,42,45,52,53,62,75,77,78,79,82,87,92,98,103,105,109,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,145,148,151,152,154,156,157,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,195,220,224,225,228,229,231,233,238,239,240,241,247,248,251,252,253,254,264,272,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,299,300,301,302,305,309,310,311,312,320,322,323,334,335,341,342,345,349,354,356,361,363,364,366,374,],[77,-260,77,77,77,77,77,123,77,-61,-63,77,123,-260,77,77,-260,123,123,-134,-138,123,123,-117,-119,-158,-159,-160,-161,-89,-90,123,77,-92,-97,-93,-94,-95,-96,123,123,123,-48,-35,77,77,77,123,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-157,-118,-120,-121,-122,-123,123,123,-139,-140,123,-62,123,123,123,123,-97,123,77,123,-124,77,123,-91,123,77,123,-47,123,123,123,-97,123,123,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,123,-125,123,-129,123,123,123,123,-196,123,-128,123,-162,123,123,-126,123,123,123,123,-260,77,77,-127,-260,77,]),'COMMA':([37,60,61,63,64,65,66,67,68,69,70,71,72,78,79,102,104,105,106,111,115,116,119,120,125,126,129,130,131,132,133,134,136,137,148,153,155,160,161,181,182,183,184,185,189,190,195,199,200,225,229,232,234,235,236,237,238,239,247,249,272,277,294,297,299,301,305,320,323,341,364,368,371,372,375,],[-260,-2,-3,-5,-6,-13,-14,-15,-7,-8,-9,-10,-11,138,-63,-44,156,-260,157,-12,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,-28,-29,-260,-44,-43,-4,-98,-118,-120,-121,-122,-123,-139,-140,-62,252,-66,-260,-97,-41,-44,-42,-18,-20,-135,-124,-91,-21,-260,-97,-260,-43,-125,-129,-65,-128,-162,-126,-127,-260,374,-222,-221,]),'LBRACE':([51,52,60,61,63,64,65,66,67,68,69,70,71,72,76,92,93,94,95,96,97,111,115,116,119,120,125,126,129,130,131,132,133,134,136,137,148,151,152,154,160,161,181,182,183,184,185,189,190,199,200,215,216,217,218,219,225,228,231,236,237,238,239,247,249,253,254,264,265,266,267,268,269,270,271,272,277,292,294,295,299,301,305,312,313,315,320,323,329,335,341,345,355,356,364,366,373,],[92,-260,-2,-3,-5,-6,-13,-14,-15,-7,-8,-9,-10,-11,135,-260,-33,-30,-31,-32,-34,-12,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,-28,-29,-260,92,-48,-35,-4,-98,-118,-120,-121,-122,-123,-139,-140,-64,-66,-174,-175,-176,-177,-178,-181,-260,-260,-18,-20,-135,-124,-91,-21,-47,92,92,-182,-183,92,-224,-225,-226,-227,-228,-97,314,-136,-137,-125,-129,-65,-83,-184,338,-128,-162,92,-232,-126,-260,-229,-260,-127,-260,-212,]),'COLON':([60,61,63,64,65,66,67,68,69,70,71,72,111,115,116,119,120,125,126,129,130,131,132,133,134,136,137,148,160,161,181,182,183,184,185,187,189,190,199,200,214,229,236,237,238,239,241,242,243,247,249,299,301,305,320,322,323,341,348,350,357,360,362,364,367,368,371,372,375,],[-2,-3,-5,-6,-13,-14,-15,-7,-8,-9,-10,-11,-12,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,-28,-29,-260,-4,-98,-118,-120,-121,-122,-123,-260,-139,-140,-64,-66,254,-180,-18,-20,-135,-124,-136,300,-137,-91,-21,-125,-129,-65,-128,342,-162,-126,356,-210,-209,366,-219,-127,-218,-260,-220,-222,-221,]),'NOT':([75,87,92,109,117,118,121,122,123,124,127,145,151,152,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,187,188,220,224,228,231,248,252,253,254,278,279,280,281,282,283,284,285,286,287,288,289,290,291,300,309,310,311,342,345,349,356,366,],[118,118,-260,118,118,118,-158,-159,-160,-161,118,118,118,-48,118,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-157,118,118,118,118,118,118,118,118,-47,118,118,118,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,118,118,118,-196,118,118,118,-260,-260,]),'ADD':([75,87,92,109,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,145,148,151,152,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,220,224,225,228,229,231,238,239,241,247,248,252,253,254,264,272,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,299,300,301,302,305,309,310,311,312,320,322,323,334,335,341,342,345,349,354,356,364,366,],[121,121,-260,121,121,-134,-138,121,121,-117,-119,-158,-159,-160,-161,-89,-90,121,-92,-97,-93,-94,-95,-96,121,121,121,-48,121,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-157,-118,-120,-121,-122,-123,121,121,-139,-140,121,121,121,121,121,-97,121,121,-124,121,-91,121,121,-47,121,121,121,-97,121,121,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,121,-125,121,-129,121,121,121,121,-196,121,-128,121,-162,121,121,-126,121,121,121,121,-260,-127,-260,]),'SUB':([75,87,92,109,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,145,148,151,152,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,220,224,225,228,229,231,238,239,241,247,248,252,253,254,264,272,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,299,300,301,302,305,309,310,311,312,320,322,323,334,335,341,342,345,349,354,356,364,366,],[122,122,-260,122,122,-134,-138,122,122,-117,-119,-158,-159,-160,-161,-89,-90,122,-92,-97,-93,-94,-95,-96,122,122,122,-48,122,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-157,-118,-120,-121,-122,-123,122,122,-139,-140,122,122,122,122,122,-97,122,122,-124,122,-91,122,122,-47,122,122,122,-97,122,122,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,122,-125,122,-129,122,122,122,122,-196,122,-128,122,-162,122,122,-126,122,122,122,122,-260,-127,-260,]),'AND':([75,87,92,109,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,145,148,151,152,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,220,224,225,228,229,231,238,239,241,247,248,252,253,254,264,272,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,299,300,301,302,305,309,310,311,312,320,322,323,334,335,341,342,345,349,354,356,364,366,],[124,124,-260,124,124,-134,-138,124,124,-117,-119,-158,-159,-160,-161,-89,-90,124,-92,-97,-93,-94,-95,-96,124,124,124,-48,124,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-157,-118,-120,-121,-122,-123,124,124,-139,-140,124,124,124,124,124,-97,124,124,-124,124,-91,124,124,-47,124,124,124,-97,124,124,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,124,-125,124,-129,124,124,124,124,-196,124,-128,124,-162,124,124,-126,124,124,124,124,-260,-127,-260,]),'TYPECAST':([75,87,92,109,117,118,121,122,123,124,127,145,151,152,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,187,188,220,224,228,231,248,252,253,254,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,295,300,309,310,311,316,318,319,340,342,345,349,356,366,],[128,128,-260,128,128,128,-158,-159,-160,-161,128,128,128,-48,128,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-157,128,128,128,128,128,128,128,128,-47,128,128,128,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-260,-199,128,128,128,-196,128,-214,-198,-213,128,128,128,-260,-260,]),'INT_LITERAL':([75,87,92,109,117,118,121,122,123,124,127,145,151,152,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,187,188,220,224,228,231,248,252,253,254,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,295,300,309,310,311,316,318,319,340,342,345,349,356,366,],[131,131,-260,131,131,131,-158,-159,-160,-161,131,131,131,-48,131,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-157,131,131,131,131,131,131,131,131,-47,131,131,131,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-260,-199,131,131,131,-196,131,-214,-198,-213,131,131,131,-260,-260,]),'FLOAT_LITERAL':([75,87,92,109,117,118,121,122,123,124,127,145,151,152,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,187,188,220,224,228,231,248,252,253,254,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,295,300,309,310,311,316,318,319,340,342,345,349,356,366,],[132,132,-260,132,132,132,-158,-159,-160,-161,132,132,132,-48,132,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-157,132,132,132,132,132,132,132,132,-47,132,132,132,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-260,-199,132,132,132,-196,132,-214,-198,-213,132,132,132,-260,-260,]),'IMAG':([75,87,92,109,117,118,121,122,123,124,127,145,151,152,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,187,188,220,224,228,231,248,252,253,254,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,295,300,309,310,311,316,318,319,340,342,345,349,356,366,],[134,134,-260,134,134,134,-158,-159,-160,-161,134,134,134,-48,134,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-157,134,134,134,134,134,134,134,134,-47,134,134,134,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-260,-199,134,134,134,-196,134,-214,-198,-213,134,134,134,-260,-260,]),'RETURN':([92,151,152,253,254,356,366,],[-260,220,-48,-47,220,-260,-260,]),'BREAK':([92,151,152,253,254,356,366,],[-260,221,-48,-47,221,-260,-260,]),'CONTINUE':([92,151,152,253,254,356,366,],[-260,222,-48,-47,222,-260,-260,]),'GOTO':([92,151,152,253,254,356,366,],[-260,223,-48,-47,223,-260,-260,]),'IF':([92,151,152,253,254,329,356,366,],[-260,224,-48,-47,224,224,-260,-260,]),'FOR':([92,151,152,253,254,356,366,],[-260,228,-48,-47,228,-260,-260,]),'SWITCH':([92,151,152,253,254,356,366,],[-260,231,-48,-47,231,-260,-260,]),'RBRACE':([92,135,150,151,152,193,194,253,303,314,336,337,338,347,351,352,356,359,365,366,370,],[-260,-260,201,-46,-48,249,-23,-47,-22,-260,346,-207,-260,-206,358,-216,-260,-215,-208,-260,-217,]),'RBRACK':([113,114,115,116,119,120,125,126,129,130,131,132,133,134,181,182,183,184,185,189,190,238,239,241,243,247,299,300,301,320,321,322,323,341,354,364,],[162,-19,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,-118,-120,-121,-122,-123,-139,-140,-135,-124,299,-137,-91,-125,-260,-129,-128,341,-136,-162,-126,364,-127,]),'LOR':([114,115,116,119,120,125,126,129,130,131,132,133,134,148,181,182,183,184,185,189,190,191,225,229,238,239,241,247,264,272,277,294,299,301,302,305,312,320,322,323,334,335,341,354,364,],[164,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,164,-118,-120,-121,-122,-123,-139,-140,164,164,-97,164,-124,164,-91,164,164,-97,164,-125,-129,164,164,164,-128,164,-162,164,164,-126,164,-127,]),'LAND':([114,115,116,119,120,125,126,129,130,131,132,133,134,148,181,182,183,184,185,189,190,191,225,229,238,239,241,247,264,272,277,294,299,301,302,305,312,320,322,323,334,335,341,354,364,],[165,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,165,-118,-120,-121,-122,-123,-139,-140,165,165,-97,165,-124,165,-91,165,165,-97,165,-125,-129,165,165,165,-128,165,-162,165,165,-126,165,-127,]),'EQL':([114,115,116,119,120,125,126,129,130,131,132,133,134,148,181,182,183,184,185,189,190,191,225,229,238,239,241,247,264,272,277,294,299,301,302,305,312,320,322,323,334,335,341,354,364,],[168,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,168,-118,-120,-121,-122,-123,-139,-140,168,168,-97,168,-124,168,-91,168,168,-97,168,-125,-129,168,168,168,-128,168,-162,168,168,-126,168,-127,]),'NEQ':([114,115,116,119,120,125,126,129,130,131,132,133,134,148,181,182,183,184,185,189,190,191,225,229,238,239,241,247,264,272,277,294,299,301,302,305,312,320,322,323,334,335,341,354,364,],[169,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,169,-118,-120,-121,-122,-123,-139,-140,169,169,-97,169,-124,169,-91,169,169,-97,169,-125,-129,169,169,169,-128,169,-162,169,169,-126,169,-127,]),'LSS':([114,115,116,119,120,125,126,129,130,131,132,133,134,148,181,182,183,184,185,189,190,191,225,229,238,239,241,247,264,272,277,294,299,301,302,305,312,320,322,323,334,335,341,354,364,],[170,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,170,-118,-120,-121,-122,-123,-139,-140,170,170,-97,170,-124,170,-91,170,170,-97,170,-125,-129,170,170,170,-128,170,-162,170,170,-126,170,-127,]),'GTR':([114,115,116,119,120,125,126,129,130,131,132,133,134,148,181,182,183,184,185,189,190,191,225,229,238,239,241,247,264,272,277,294,299,301,302,305,312,320,322,323,334,335,341,354,364,],[171,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,171,-118,-120,-121,-122,-123,-139,-140,171,171,-97,171,-124,171,-91,171,171,-97,171,-125,-129,171,171,171,-128,171,-162,171,171,-126,171,-127,]),'LEQ':([114,115,116,119,120,125,126,129,130,131,132,133,134,148,181,182,183,184,185,189,190,191,225,229,238,239,241,247,264,272,277,294,299,301,302,305,312,320,322,323,334,335,341,354,364,],[172,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,172,-118,-120,-121,-122,-123,-139,-140,172,172,-97,172,-124,172,-91,172,172,-97,172,-125,-129,172,172,172,-128,172,-162,172,172,-126,172,-127,]),'GEQ':([114,115,116,119,120,125,126,129,130,131,132,133,134,148,181,182,183,184,185,189,190,191,225,229,238,239,241,247,264,272,277,294,299,301,302,305,312,320,322,323,334,335,341,354,364,],[173,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,173,-118,-120,-121,-122,-123,-139,-140,173,173,-97,173,-124,173,-91,173,173,-97,173,-125,-129,173,173,173,-128,173,-162,173,173,-126,173,-127,]),'OR':([114,115,116,119,120,125,126,129,130,131,132,133,134,148,181,182,183,184,185,189,190,191,225,229,238,239,241,247,264,272,277,294,299,301,302,305,312,320,322,323,334,335,341,354,364,],[175,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,175,-118,-120,-121,-122,-123,-139,-140,175,175,-97,175,-124,175,-91,175,175,-97,175,-125,-129,175,175,175,-128,175,-162,175,175,-126,175,-127,]),'XOR':([114,115,116,119,120,125,126,129,130,131,132,133,134,148,181,182,183,184,185,189,190,191,225,229,238,239,241,247,264,272,277,294,299,301,302,305,312,320,322,323,334,335,341,354,364,],[176,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,176,-118,-120,-121,-122,-123,-139,-140,176,176,-97,176,-124,176,-91,176,176,-97,176,-125,-129,176,176,176,-128,176,-162,176,176,-126,176,-127,]),'QUO':([114,115,116,119,120,125,126,129,130,131,132,133,134,148,181,182,183,184,185,189,190,191,225,229,238,239,241,247,264,272,277,294,299,301,302,305,312,320,322,323,334,335,341,354,364,],[177,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,177,-118,-120,-121,-122,-123,-139,-140,177,177,-97,177,-124,177,-91,177,177,-97,177,-125,-129,177,177,177,-128,177,-162,177,177,-126,177,-127,]),'REM':([114,115,116,119,120,125,126,129,130,131,132,133,134,148,181,182,183,184,185,189,190,191,225,229,238,239,241,247,264,272,277,294,299,301,302,305,312,320,322,323,334,335,341,354,364,],[178,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,178,-118,-120,-121,-122,-123,-139,-140,178,178,-97,178,-124,178,-91,178,178,-97,178,-125,-129,178,178,178,-128,178,-162,178,178,-126,178,-127,]),'SHL':([114,115,116,119,120,125,126,129,130,131,132,133,134,148,181,182,183,184,185,189,190,191,225,229,238,239,241,247,264,272,277,294,299,301,302,305,312,320,322,323,334,335,341,354,364,],[179,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,179,-118,-120,-121,-122,-123,-139,-140,179,179,-97,179,-124,179,-91,179,179,-97,179,-125,-129,179,179,179,-128,179,-162,179,179,-126,179,-127,]),'SHR':([114,115,116,119,120,125,126,129,130,131,132,133,134,148,181,182,183,184,185,189,190,191,225,229,238,239,241,247,264,272,277,294,299,301,302,305,312,320,322,323,334,335,341,354,364,],[180,-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,180,-118,-120,-121,-122,-123,-139,-140,180,180,-97,180,-124,180,-91,180,180,-97,180,-125,-129,180,180,180,-128,180,-162,180,180,-126,180,-127,]),'INC':([115,116,119,120,125,126,129,130,131,132,133,134,181,182,183,184,185,189,190,225,229,238,239,247,272,277,294,299,301,320,323,341,364,],[-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,-118,-120,-121,-122,-123,-139,-140,265,-97,-135,-124,-91,265,-97,265,-125,-129,-128,-162,-126,-127,]),'DEC':([115,116,119,120,125,126,129,130,131,132,133,134,181,182,183,184,185,189,190,225,229,238,239,247,272,277,294,299,301,320,323,341,364,],[-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,-118,-120,-121,-122,-123,-139,-140,266,-97,-135,-124,-91,266,-97,266,-125,-129,-128,-162,-126,-127,]),'ADD_ASSIGN':([115,116,119,120,125,126,129,130,131,132,133,134,181,182,183,184,185,189,190,199,200,225,229,230,238,239,247,272,276,277,294,299,301,305,320,323,341,364,],[-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,-118,-120,-121,-122,-123,-139,-140,-64,-66,-260,-97,281,-135,-124,-91,-260,281,-97,-260,-125,-129,-65,-128,-162,-126,-127,]),'SUB_ASSIGN':([115,116,119,120,125,126,129,130,131,132,133,134,181,182,183,184,185,189,190,199,200,225,229,230,238,239,247,272,276,277,294,299,301,305,320,323,341,364,],[-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,-118,-120,-121,-122,-123,-139,-140,-64,-66,-260,-97,282,-135,-124,-91,-260,282,-97,-260,-125,-129,-65,-128,-162,-126,-127,]),'MUL_ASSIGN':([115,116,119,120,125,126,129,130,131,132,133,134,181,182,183,184,185,189,190,199,200,225,229,230,238,239,247,272,276,277,294,299,301,305,320,323,341,364,],[-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,-118,-120,-121,-122,-123,-139,-140,-64,-66,-260,-97,283,-135,-124,-91,-260,283,-97,-260,-125,-129,-65,-128,-162,-126,-127,]),'QUO_ASSIGN':([115,116,119,120,125,126,129,130,131,132,133,134,181,182,183,184,185,189,190,199,200,225,229,230,238,239,247,272,276,277,294,299,301,305,320,323,341,364,],[-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,-118,-120,-121,-122,-123,-139,-140,-64,-66,-260,-97,284,-135,-124,-91,-260,284,-97,-260,-125,-129,-65,-128,-162,-126,-127,]),'REM_ASSIGN':([115,116,119,120,125,126,129,130,131,132,133,134,181,182,183,184,185,189,190,199,200,225,229,230,238,239,247,272,276,277,294,299,301,305,320,323,341,364,],[-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,-118,-120,-121,-122,-123,-139,-140,-64,-66,-260,-97,285,-135,-124,-91,-260,285,-97,-260,-125,-129,-65,-128,-162,-126,-127,]),'AND_ASSIGN':([115,116,119,120,125,126,129,130,131,132,133,134,181,182,183,184,185,189,190,199,200,225,229,230,238,239,247,272,276,277,294,299,301,305,320,323,341,364,],[-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,-118,-120,-121,-122,-123,-139,-140,-64,-66,-260,-97,286,-135,-124,-91,-260,286,-97,-260,-125,-129,-65,-128,-162,-126,-127,]),'OR_ASSIGN':([115,116,119,120,125,126,129,130,131,132,133,134,181,182,183,184,185,189,190,199,200,225,229,230,238,239,247,272,276,277,294,299,301,305,320,323,341,364,],[-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,-118,-120,-121,-122,-123,-139,-140,-64,-66,-260,-97,287,-135,-124,-91,-260,287,-97,-260,-125,-129,-65,-128,-162,-126,-127,]),'XOR_ASSIGN':([115,116,119,120,125,126,129,130,131,132,133,134,181,182,183,184,185,189,190,199,200,225,229,230,238,239,247,272,276,277,294,299,301,305,320,323,341,364,],[-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,-118,-120,-121,-122,-123,-139,-140,-64,-66,-260,-97,288,-135,-124,-91,-260,288,-97,-260,-125,-129,-65,-128,-162,-126,-127,]),'SHL_ASSIGN':([115,116,119,120,125,126,129,130,131,132,133,134,181,182,183,184,185,189,190,199,200,225,229,230,238,239,247,272,276,277,294,299,301,305,320,323,341,364,],[-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,-118,-120,-121,-122,-123,-139,-140,-64,-66,-260,-97,289,-135,-124,-91,-260,289,-97,-260,-125,-129,-65,-128,-162,-126,-127,]),'SHR_ASSIGN':([115,116,119,120,125,126,129,130,131,132,133,134,181,182,183,184,185,189,190,199,200,225,229,230,238,239,247,272,276,277,294,299,301,305,320,323,341,364,],[-134,-138,-117,-119,-89,-90,-92,-97,-93,-94,-95,-96,-118,-120,-121,-122,-123,-139,-140,-64,-66,-260,-97,290,-135,-124,-91,-260,290,-97,-260,-125,-129,-65,-128,-162,-126,-127,]),'CASE':([151,152,253,314,336,337,338,347,351,352,356,359,365,366,370,],[-46,-48,-47,-260,349,-207,-260,-206,361,-216,-260,-215,-208,-260,-217,]),'DEFAULT':([151,152,253,314,336,337,338,347,351,352,356,359,365,366,370,],[-46,-48,-47,-260,350,-207,-260,-206,362,-216,-260,-215,-208,-260,-217,]),'ELSE':([201,307,],[-45,329,]),'RANGE':([228,268,274,275,311,],[-260,-233,310,-234,-235,]),'DEFINE':([229,277,317,],[278,278,340,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'SourceFile':([0,],[2,]),'PackageClause':([0,],[3,]),'PackageName':([4,13,46,],[6,29,29,]),'ImportDeclRep':([5,],[8,]),'epsilon':([5,8,13,26,35,36,37,39,44,46,52,53,86,92,98,105,135,148,151,187,188,220,221,222,225,228,231,254,272,293,294,300,304,307,309,314,338,345,356,366,368,],[9,12,30,47,55,58,79,81,85,30,96,101,146,152,101,79,194,200,215,243,246,257,260,260,200,268,295,215,200,318,200,243,326,330,332,337,352,215,152,152,372,]),'TopLevelDeclRep':([8,],[10,]),'ImportDecl':([8,],[11,]),'TopLevelDecl':([10,],[14,]),'Declaration':([10,151,254,],[15,203,203,]),'FunctionDecl':([10,],[16,]),'ConstDecl':([10,151,254,],[17,17,17,]),'TypeDecl':([10,151,254,],[18,18,18,]),'VarDecl':([10,151,254,],[19,19,19,]),'ImportSpec':([13,46,],[25,89,]),'PackageNameDotOpt':([13,46,],[27,27,]),'FunctionName':([20,],[32,]),'ConstSpec':([21,54,],[34,108,]),'IdentifierList':([21,23,53,54,84,98,156,157,193,],[36,45,103,36,45,103,233,233,251,]),'TypeSpec':([22,80,],[38,140,]),'AliasDecl':([22,80,],[40,40,]),'TypeDef':([22,80,],[41,41,]),'VarSpec':([23,84,],[43,143,]),'ImportSpecRep':([26,],[46,]),'ImportPath':([27,],[48,]),'Function':([32,],[50,]),'Signature':([32,],[51,]),'Parameters':([32,52,],[52,93,]),'ConstSpecRep':([35,],[54,]),'TypeExprListOpt':([36,],[56,]),'TypeOpt':([36,],[57,]),'Type':([36,42,45,52,53,62,77,82,98,103,128,156,157,162,233,240,251,361,363,374,],[59,83,86,97,102,110,137,141,153,155,192,234,234,237,297,298,304,368,298,375,]),'TypeName':([36,42,45,52,53,62,77,82,98,103,112,128,156,157,162,233,240,251,361,363,374,],[60,60,60,60,60,60,60,60,60,60,161,60,60,60,60,60,60,60,60,60,60,]),'TypeLit':([36,42,45,52,53,62,77,82,98,103,128,156,157,162,233,240,251,361,363,374,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'TypeToken':([36,42,45,52,53,62,77,82,98,103,112,128,156,157,162,233,240,251,361,363,374,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'QualifiedIdent':([36,42,45,52,53,62,77,82,98,103,112,128,156,157,162,233,240,251,361,363,374,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'ArrayType':([36,42,45,52,53,62,77,82,98,103,128,156,157,162,233,240,251,361,363,374,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'StructType':([36,42,45,52,53,62,77,82,98,103,128,156,157,162,233,240,251,361,363,374,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'PointerType':([36,42,45,52,53,62,77,82,98,103,128,156,157,162,233,240,251,361,363,374,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'IdentifierRep':([37,105,],[78,78,]),'TypeSpecRep':([39,],[80,]),'VarSpecRep':([44,],[84,]),'FunctionBody':([51,],[90,]),'Block':([51,151,254,264,267,329,],[91,210,210,307,308,344,]),'ResultOpt':([52,],[94,]),'Result':([52,],[95,]),'ParameterListOpt':([53,98,],[99,99,]),'ParametersList':([53,98,],[100,100,]),'ParameterDeclCommaRep':([53,98,],[104,104,]),'ParameterDecl':([53,98,156,157,],[106,106,232,235,]),'ArrayLength':([75,],[113,]),'Expression':([75,87,109,127,145,151,163,187,188,220,224,228,231,248,252,254,278,279,300,309,310,342,345,349,],[114,148,148,191,148,225,238,241,148,148,264,272,294,302,305,225,312,148,322,334,335,354,225,148,]),'UnaryExpr':([75,87,109,117,118,127,145,151,163,187,188,220,224,228,231,248,252,254,278,279,300,309,310,342,345,349,],[115,115,115,189,190,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'PrimaryExpr':([75,87,109,117,118,127,145,151,163,187,188,220,224,228,231,248,252,254,278,279,300,309,310,316,342,345,349,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,339,116,116,116,]),'UnaryOp':([75,87,109,114,117,118,127,145,148,151,163,187,188,191,220,224,225,228,231,238,241,248,252,254,264,272,278,279,294,300,302,305,309,310,312,322,334,335,342,345,349,354,],[117,117,117,174,117,117,117,117,174,117,117,117,117,174,117,117,174,117,117,174,174,117,117,117,174,174,117,117,174,117,174,174,117,117,174,174,174,174,117,117,117,174,]),'Operand':([75,87,109,117,118,127,145,151,163,187,188,220,224,228,231,248,252,254,278,279,300,309,310,316,342,345,349,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'Conversion':([75,87,109,117,118,127,145,151,163,187,188,220,224,228,231,248,252,254,278,279,300,309,310,316,342,345,349,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'Literal':([75,87,109,117,118,127,145,151,163,187,188,220,224,228,231,248,252,254,278,279,300,309,310,316,342,345,349,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'OperandName':([75,87,109,117,118,127,145,151,163,187,188,220,224,228,231,248,252,254,278,279,300,309,310,316,342,345,349,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'BasicLit':([75,87,109,117,118,127,145,151,163,187,188,220,224,228,231,248,252,254,278,279,300,309,310,316,342,345,349,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'BaseType':([77,],[136,]),'ExpressionListOpt':([86,],[144,]),'ExpressionList':([87,109,145,151,188,220,228,231,254,279,345,349,],[147,159,198,230,245,256,276,230,230,313,230,357,]),'StatementList':([92,356,366,],[150,365,370,]),'StatementRep':([92,356,366,],[151,151,151,]),'BinaryOp':([114,148,191,225,238,241,264,272,294,302,305,312,322,334,335,354,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'RelOp':([114,148,191,225,238,241,264,272,294,302,305,312,322,334,335,354,],[166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,]),'AddMulOp':([114,148,191,225,238,241,264,272,294,302,305,312,322,334,335,354,],[167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'Selector':([116,339,],[181,181,]),'Index':([116,339,],[182,182,]),'Slice':([116,339,],[183,183,]),'TypeAssertion':([116,339,],[184,184,]),'Arguments':([116,339,],[185,185,]),'FieldDeclRep':([135,],[193,]),'ExpressionRep':([148,225,272,294,],[199,199,199,199,]),'Statement':([151,254,],[202,306,]),'LabeledStmt':([151,254,],[204,204,]),'SimpleStmt':([151,228,231,254,345,],[205,273,296,205,355,]),'ReturnStmt':([151,254,],[206,206,]),'BreakStmt':([151,254,],[207,207,]),'ContinueStmt':([151,254,],[208,208,]),'GotoStmt':([151,254,],[209,209,]),'IfStmt':([151,254,329,],[211,211,343,]),'SwitchStmt':([151,254,],[212,212,]),'ForStmt':([151,254,],[213,213,]),'Label':([151,221,222,223,254,],[214,259,259,263,214,]),'ExpressionStmt':([151,228,231,254,345,],[216,216,216,216,216,]),'IncDecStmt':([151,228,231,254,345,],[217,217,217,217,217,]),'Assignment':([151,228,231,254,345,],[218,218,218,218,218,]),'ShortVarDecl':([151,228,231,254,345,],[219,219,219,219,219,]),'ExprSwitchStmt':([151,254,],[226,226,]),'TypeSwitchStmt':([151,254,],[227,227,]),'ElementType':([162,],[236,]),'ExpressionOpt':([187,231,300,],[242,292,321,]),'ExpressionListTypeOpt':([188,],[244,]),'FieldDecl':([193,],[250,]),'ExpressionListPureOpt':([220,],[255,]),'LabelOpt':([221,222,],[258,262,]),'ConditionBlockOpt':([228,],[267,]),'Condition':([228,309,],[269,333,]),'ForClause':([228,],[270,]),'RangeClause':([228,],[271,]),'ExpressionIdentListOpt':([228,],[274,]),'ExpressionIdentifier':([228,],[275,]),'assign_op':([230,276,],[279,279,]),'AssignOp':([230,276,],[280,280,]),'SimpleStmtOpt':([231,],[293,]),'TypeSwitchGuard':([293,],[315,]),'IdentifierOpt':([293,],[316,]),'TagOpt':([304,],[324,]),'Tag':([304,],[325,]),'ElseOpt':([307,],[328,]),'ConditionOpt':([309,],[331,]),'ExprCaseClauseRep':([314,],[336,]),'ExprCaseClause':([336,],[347,]),'ExprSwitchCase':([336,],[348,]),'TypeCaseClauseOpt':([338,],[351,]),'TypeCaseClause':([351,],[359,]),'TypeSwitchCase':([351,],[360,]),'TypeList':([361,],[367,]),'TypeRep':([368,],[371,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> SourceFile','start',1,'p_start','parser.py',109),
  ('Type -> TypeName','Type',1,'p_type','parser.py',124),
  ('Type -> TypeLit','Type',1,'p_type','parser.py',125),
  ('Type -> LPAREN Type RPAREN','Type',3,'p_type','parser.py',126),
  ('TypeName -> TypeToken','TypeName',1,'p_type_name','parser.py',137),
  ('TypeName -> QualifiedIdent','TypeName',1,'p_type_name','parser.py',138),
  ('TypeToken -> INT','TypeToken',1,'p_type_token','parser.py',143),
  ('TypeToken -> FLOAT','TypeToken',1,'p_type_token','parser.py',144),
  ('TypeToken -> STRING','TypeToken',1,'p_type_token','parser.py',145),
  ('TypeToken -> BOOL','TypeToken',1,'p_type_token','parser.py',146),
  ('TypeToken -> COMPLEX','TypeToken',1,'p_type_token','parser.py',147),
  ('TypeToken -> TYPE IDENT','TypeToken',2,'p_type_token','parser.py',148),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser.py',159),
  ('TypeLit -> StructType','TypeLit',1,'p_type_lit','parser.py',160),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser.py',161),
  ('TypeOpt -> Type','TypeOpt',1,'p_type_opt','parser.py',166),
  ('TypeOpt -> epsilon','TypeOpt',1,'p_type_opt','parser.py',167),
  ('ArrayType -> LBRACK ArrayLength RBRACK ElementType','ArrayType',4,'p_array_type','parser.py',177),
  ('ArrayLength -> Expression','ArrayLength',1,'p_array_length','parser.py',185),
  ('ElementType -> Type','ElementType',1,'p_element_type','parser.py',190),
  ('StructType -> STRUCT LBRACE FieldDeclRep RBRACE','StructType',4,'p_struct_type','parser.py',198),
  ('FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON','FieldDeclRep',3,'p_field_decl_rep','parser.py',207),
  ('FieldDeclRep -> epsilon','FieldDeclRep',1,'p_field_decl_rep','parser.py',208),
  ('FieldDecl -> IdentifierList Type TagOpt','FieldDecl',3,'p_field_decl','parser.py',218),
  ('TagOpt -> Tag','TagOpt',1,'p_TagOpt','parser.py',223),
  ('TagOpt -> epsilon','TagOpt',1,'p_TagOpt','parser.py',224),
  ('Tag -> STRING_LITERAL','Tag',1,'p_Tag','parser.py',232),
  ('PointerType -> MUL BaseType','PointerType',2,'p_point_type','parser.py',240),
  ('BaseType -> Type','BaseType',1,'p_base_type','parser.py',246),
  ('Signature -> Parameters ResultOpt','Signature',2,'p_sign','parser.py',253),
  ('ResultOpt -> Result','ResultOpt',1,'p_result_opt','parser.py',258),
  ('ResultOpt -> epsilon','ResultOpt',1,'p_result_opt','parser.py',259),
  ('Result -> Parameters','Result',1,'p_result','parser.py',267),
  ('Result -> Type','Result',1,'p_result','parser.py',268),
  ('Parameters -> LPAREN ParameterListOpt RPAREN','Parameters',3,'p_params','parser.py',273),
  ('ParameterListOpt -> ParametersList','ParameterListOpt',1,'p_param_list_opt','parser.py',281),
  ('ParameterListOpt -> epsilon','ParameterListOpt',1,'p_param_list_opt','parser.py',282),
  ('ParametersList -> Type','ParametersList',1,'p_param_list','parser.py',290),
  ('ParametersList -> IdentifierList Type','ParametersList',2,'p_param_list','parser.py',291),
  ('ParametersList -> ParameterDeclCommaRep','ParametersList',1,'p_param_list','parser.py',292),
  ('ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl','ParameterDeclCommaRep',3,'p_param_decl_comma_rep','parser.py',300),
  ('ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl','ParameterDeclCommaRep',3,'p_param_decl_comma_rep','parser.py',301),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_param_decl','parser.py',307),
  ('ParameterDecl -> Type','ParameterDecl',1,'p_param_decl','parser.py',308),
  ('Block -> LBRACE StatementList RBRACE','Block',3,'p_block','parser.py',318),
  ('StatementList -> StatementRep','StatementList',1,'p_stat_list','parser.py',328),
  ('StatementRep -> StatementRep Statement SEMICOLON','StatementRep',3,'p_stat_rep','parser.py',334),
  ('StatementRep -> epsilon','StatementRep',1,'p_stat_rep','parser.py',335),
  ('Declaration -> ConstDecl','Declaration',1,'p_decl','parser.py',351),
  ('Declaration -> TypeDecl','Declaration',1,'p_decl','parser.py',352),
  ('Declaration -> VarDecl','Declaration',1,'p_decl','parser.py',353),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_toplevel_decl','parser.py',358),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_toplevel_decl','parser.py',359),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','parser.py',366),
  ('ConstDecl -> CONST LPAREN ConstSpecRep RPAREN','ConstDecl',4,'p_const_decl','parser.py',367),
  ('ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON','ConstSpecRep',3,'p_const_spec_rep','parser.py',379),
  ('ConstSpecRep -> epsilon','ConstSpecRep',1,'p_const_spec_rep','parser.py',380),
  ('ConstSpec -> IdentifierList TypeExprListOpt','ConstSpec',2,'p_const_spec','parser.py',390),
  ('TypeExprListOpt -> TypeOpt ASSIGN ExpressionList','TypeExprListOpt',3,'p_type_expr_list','parser.py',395),
  ('TypeExprListOpt -> epsilon','TypeExprListOpt',1,'p_type_expr_list','parser.py',396),
  ('IdentifierList -> IDENT IdentifierRep','IdentifierList',2,'p_identifier_list','parser.py',405),
  ('IdentifierRep -> IdentifierRep COMMA IDENT','IdentifierRep',3,'p_identifier_rep','parser.py',411),
  ('IdentifierRep -> epsilon','IdentifierRep',1,'p_identifier_rep','parser.py',412),
  ('ExpressionList -> Expression ExpressionRep','ExpressionList',2,'p_expr_list','parser.py',422),
  ('ExpressionRep -> ExpressionRep COMMA Expression','ExpressionRep',3,'p_expr_rep','parser.py',427),
  ('ExpressionRep -> epsilon','ExpressionRep',1,'p_expr_rep','parser.py',428),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','parser.py',439),
  ('TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN','TypeDecl',4,'p_type_decl','parser.py',440),
  ('TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON','TypeSpecRep',3,'p_type_spec_rep','parser.py',453),
  ('TypeSpecRep -> epsilon','TypeSpecRep',1,'p_type_spec_rep','parser.py',454),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_type_spec','parser.py',464),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser.py',465),
  ('AliasDecl -> IDENT ASSIGN Type','AliasDecl',3,'p_alias_decl','parser.py',470),
  ('TypeDef -> IDENT Type','TypeDef',2,'p_type_def','parser.py',479),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_var_decl','parser.py',487),
  ('VarDecl -> VAR LPAREN VarSpecRep RPAREN','VarDecl',4,'p_var_decl','parser.py',488),
  ('VarSpecRep -> VarSpecRep VarSpec SEMICOLON','VarSpecRep',3,'p_var_spec_rep','parser.py',501),
  ('VarSpecRep -> epsilon','VarSpecRep',1,'p_var_spec_rep','parser.py',502),
  ('VarSpec -> IdentifierList Type ExpressionListOpt','VarSpec',3,'p_var_spec','parser.py',512),
  ('VarSpec -> IdentifierList ASSIGN ExpressionList','VarSpec',3,'p_var_spec','parser.py',513),
  ('ExpressionListOpt -> ASSIGN ExpressionList','ExpressionListOpt',2,'p_expr_list_opt','parser.py',522),
  ('ExpressionListOpt -> epsilon','ExpressionListOpt',1,'p_expr_list_opt','parser.py',523),
  ('ShortVarDecl -> IDENT DEFINE Expression','ShortVarDecl',3,'p_short_var_decl','parser.py',534),
  ('FunctionDecl -> FUNC FunctionName Function','FunctionDecl',3,'p_func_decl','parser.py',543),
  ('FunctionDecl -> FUNC FunctionName Signature','FunctionDecl',3,'p_func_decl','parser.py',544),
  ('FunctionName -> IDENT','FunctionName',1,'p_func_name','parser.py',550),
  ('Function -> Signature FunctionBody','Function',2,'p_func','parser.py',556),
  ('FunctionBody -> Block','FunctionBody',1,'p_func_body','parser.py',561),
  ('Operand -> Literal','Operand',1,'p_operand','parser.py',568),
  ('Operand -> OperandName','Operand',1,'p_operand','parser.py',569),
  ('Operand -> LPAREN Expression RPAREN','Operand',3,'p_operand','parser.py',570),
  ('Literal -> BasicLit','Literal',1,'p_literal','parser.py',578),
  ('BasicLit -> INT_LITERAL','BasicLit',1,'p_basic_lit','parser.py',583),
  ('BasicLit -> FLOAT_LITERAL','BasicLit',1,'p_basic_lit','parser.py',584),
  ('BasicLit -> STRING_LITERAL','BasicLit',1,'p_basic_lit','parser.py',585),
  ('BasicLit -> IMAG','BasicLit',1,'p_basic_lit','parser.py',586),
  ('OperandName -> IDENT','OperandName',1,'p_operand_name','parser.py',593),
  ('QualifiedIdent -> IDENT PERIOD TypeName','QualifiedIdent',3,'p_quali_ident','parser.py',601),
  ('CompositeLit -> LiteralType LiteralValue','CompositeLit',2,'p_comp_lit','parser.py',610),
  ('LiteralType -> ArrayType','LiteralType',1,'p_lit_type','parser.py',615),
  ('LiteralType -> ElementType','LiteralType',1,'p_lit_type','parser.py',616),
  ('LiteralType -> TypeName','LiteralType',1,'p_lit_type','parser.py',617),
  ('LiteralValue -> LBRACE ElementListOpt RBRACE','LiteralValue',3,'p_lit_val','parser.py',622),
  ('ElementListOpt -> ElementList','ElementListOpt',1,'p_elem_list_comma_opt','parser.py',627),
  ('ElementListOpt -> epsilon','ElementListOpt',1,'p_elem_list_comma_opt','parser.py',628),
  ('ElementList -> KeyedElement KeyedElementCommaRep','ElementList',2,'p_elem_list','parser.py',636),
  ('KeyedElementCommaRep -> KeyedElementCommaRep COMMA KeyedElement','KeyedElementCommaRep',3,'p_key_elem_comma_rep','parser.py',641),
  ('KeyedElementCommaRep -> epsilon','KeyedElementCommaRep',1,'p_key_elem_comma_rep','parser.py',642),
  ('KeyedElement -> Key COLON Element','KeyedElement',3,'p_key_elem','parser.py',651),
  ('KeyedElement -> Element','KeyedElement',1,'p_key_elem','parser.py',652),
  ('Key -> FieldName','Key',1,'p_key','parser.py',661),
  ('Key -> Expression','Key',1,'p_key','parser.py',662),
  ('Key -> LiteralValue','Key',1,'p_key','parser.py',663),
  ('FieldName -> IDENT','FieldName',1,'p_field_name','parser.py',668),
  ('Element -> Expression','Element',1,'p_elem','parser.py',674),
  ('Element -> LiteralValue','Element',1,'p_elem','parser.py',675),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_prim_expr','parser.py',682),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_prim_expr','parser.py',683),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_prim_expr','parser.py',684),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_prim_expr','parser.py',685),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_prim_expr','parser.py',686),
  ('PrimaryExpr -> PrimaryExpr TypeAssertion','PrimaryExpr',2,'p_prim_expr','parser.py',687),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_prim_expr','parser.py',688),
  ('Selector -> PERIOD IDENT','Selector',2,'p_selector','parser.py',696),
  ('Index -> LBRACK Expression RBRACK','Index',3,'p_index','parser.py',703),
  ('Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK','Slice',5,'p_slice','parser.py',707),
  ('Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK','Slice',7,'p_slice','parser.py',708),
  ('TypeAssertion -> PERIOD LPAREN Type RPAREN','TypeAssertion',4,'p_type_assert','parser.py',724),
  ('Arguments -> LPAREN ExpressionListTypeOpt RPAREN','Arguments',3,'p_argument','parser.py',733),
  ('ExpressionListTypeOpt -> ExpressionList','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',741),
  ('ExpressionListTypeOpt -> epsilon','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',742),
  ('ExpressionListCommaOpt -> COMMA ExpressionList','ExpressionListCommaOpt',2,'p_expr_list_comma_opt','parser.py',750),
  ('ExpressionListCommaOpt -> epsilon','ExpressionListCommaOpt',1,'p_expr_list_comma_opt','parser.py',751),
  ('Expression -> UnaryExpr','Expression',1,'p_expr','parser.py',762),
  ('Expression -> Expression BinaryOp Expression','Expression',3,'p_expr','parser.py',763),
  ('ExpressionOpt -> Expression','ExpressionOpt',1,'p_expr_opt','parser.py',771),
  ('ExpressionOpt -> epsilon','ExpressionOpt',1,'p_expr_opt','parser.py',772),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_unary_expr','parser.py',781),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',782),
  ('UnaryExpr -> NOT UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',783),
  ('BinaryOp -> LOR','BinaryOp',1,'p_binary_op','parser.py',794),
  ('BinaryOp -> LAND','BinaryOp',1,'p_binary_op','parser.py',795),
  ('BinaryOp -> RelOp','BinaryOp',1,'p_binary_op','parser.py',796),
  ('BinaryOp -> AddMulOp','BinaryOp',1,'p_binary_op','parser.py',797),
  ('RelOp -> EQL','RelOp',1,'p_rel_op','parser.py',807),
  ('RelOp -> NEQ','RelOp',1,'p_rel_op','parser.py',808),
  ('RelOp -> LSS','RelOp',1,'p_rel_op','parser.py',809),
  ('RelOp -> GTR','RelOp',1,'p_rel_op','parser.py',810),
  ('RelOp -> LEQ','RelOp',1,'p_rel_op','parser.py',811),
  ('RelOp -> GEQ','RelOp',1,'p_rel_op','parser.py',812),
  ('AddMulOp -> UnaryOp','AddMulOp',1,'p_add_mul_op','parser.py',819),
  ('AddMulOp -> OR','AddMulOp',1,'p_add_mul_op','parser.py',820),
  ('AddMulOp -> XOR','AddMulOp',1,'p_add_mul_op','parser.py',821),
  ('AddMulOp -> QUO','AddMulOp',1,'p_add_mul_op','parser.py',822),
  ('AddMulOp -> REM','AddMulOp',1,'p_add_mul_op','parser.py',823),
  ('AddMulOp -> SHL','AddMulOp',1,'p_add_mul_op','parser.py',824),
  ('AddMulOp -> SHR','AddMulOp',1,'p_add_mul_op','parser.py',825),
  ('UnaryOp -> ADD','UnaryOp',1,'p_unary_op','parser.py',836),
  ('UnaryOp -> SUB','UnaryOp',1,'p_unary_op','parser.py',837),
  ('UnaryOp -> MUL','UnaryOp',1,'p_unary_op','parser.py',838),
  ('UnaryOp -> AND','UnaryOp',1,'p_unary_op','parser.py',839),
  ('Conversion -> TYPECAST Type LPAREN Expression RPAREN','Conversion',5,'p_conversion','parser.py',849),
  ('Statement -> Declaration','Statement',1,'p_statement','parser.py',859),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','parser.py',860),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','parser.py',861),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','parser.py',862),
  ('Statement -> BreakStmt','Statement',1,'p_statement','parser.py',863),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','parser.py',864),
  ('Statement -> GotoStmt','Statement',1,'p_statement','parser.py',865),
  ('Statement -> Block','Statement',1,'p_statement','parser.py',866),
  ('Statement -> IfStmt','Statement',1,'p_statement','parser.py',867),
  ('Statement -> SwitchStmt','Statement',1,'p_statement','parser.py',868),
  ('Statement -> ForStmt','Statement',1,'p_statement','parser.py',869),
  ('SimpleStmt -> epsilon','SimpleStmt',1,'p_simple_stmt','parser.py',874),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_simple_stmt','parser.py',875),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','parser.py',876),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','parser.py',877),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','parser.py',878),
  ('LabeledStmt -> Label COLON Statement','LabeledStmt',3,'p_labeled_statements','parser.py',886),
  ('Label -> IDENT','Label',1,'p_label','parser.py',893),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_expression_stmt','parser.py',899),
  ('IncDecStmt -> Expression INC','IncDecStmt',2,'p_inc_dec','parser.py',904),
  ('IncDecStmt -> Expression DEC','IncDecStmt',2,'p_inc_dec','parser.py',905),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_assignment','parser.py',911),
  ('assign_op -> AssignOp','assign_op',1,'p_assign_op','parser.py',916),
  ('AssignOp -> ADD_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',922),
  ('AssignOp -> SUB_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',923),
  ('AssignOp -> MUL_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',924),
  ('AssignOp -> QUO_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',925),
  ('AssignOp -> REM_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',926),
  ('AssignOp -> AND_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',927),
  ('AssignOp -> OR_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',928),
  ('AssignOp -> XOR_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',929),
  ('AssignOp -> SHL_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',930),
  ('AssignOp -> SHR_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',931),
  ('AssignOp -> ASSIGN','AssignOp',1,'p_AssignOp','parser.py',932),
  ('IfStmt -> IF Expression Block ElseOpt','IfStmt',4,'p_if_statement','parser.py',938),
  ('SimpleStmtOpt -> SimpleStmt SEMICOLON','SimpleStmtOpt',2,'p_SimpleStmtOpt','parser.py',944),
  ('SimpleStmtOpt -> epsilon','SimpleStmtOpt',1,'p_SimpleStmtOpt','parser.py',945),
  ('ElseOpt -> ELSE IfStmt','ElseOpt',2,'p_else_opt','parser.py',955),
  ('ElseOpt -> ELSE Block','ElseOpt',2,'p_else_opt','parser.py',956),
  ('ElseOpt -> epsilon','ElseOpt',1,'p_else_opt','parser.py',957),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_switch_statement','parser.py',970),
  ('SwitchStmt -> TypeSwitchStmt','SwitchStmt',1,'p_switch_statement','parser.py',971),
  ('ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE','ExprSwitchStmt',5,'p_expr_switch_stmt','parser.py',976),
  ('ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause','ExprCaseClauseRep',2,'p_expr_case_clause_rep','parser.py',985),
  ('ExprCaseClauseRep -> epsilon','ExprCaseClauseRep',1,'p_expr_case_clause_rep','parser.py',986),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_expr_case_clause','parser.py',994),
  ('ExprSwitchCase -> CASE ExpressionList','ExprSwitchCase',2,'p_expr_switch_case','parser.py',1000),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_expr_switch_case','parser.py',1001),
  ('TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE','TypeSwitchStmt',6,'p_type_switch_stmt','parser.py',1011),
  ('TypeSwitchGuard -> IdentifierOpt PrimaryExpr PERIOD LPAREN TYPE RPAREN','TypeSwitchGuard',6,'p_type_switch_guard','parser.py',1020),
  ('IdentifierOpt -> IDENT DEFINE','IdentifierOpt',2,'p_identifier_opt','parser.py',1031),
  ('IdentifierOpt -> epsilon','IdentifierOpt',1,'p_identifier_opt','parser.py',1032),
  ('TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause','TypeCaseClauseOpt',2,'p_type_case_clause_opt','parser.py',1043),
  ('TypeCaseClauseOpt -> epsilon','TypeCaseClauseOpt',1,'p_type_case_clause_opt','parser.py',1044),
  ('TypeCaseClause -> TypeSwitchCase COLON StatementList','TypeCaseClause',3,'p_type_case_clause','parser.py',1052),
  ('TypeSwitchCase -> CASE TypeList','TypeSwitchCase',2,'p_type_switch_case','parser.py',1058),
  ('TypeSwitchCase -> DEFAULT','TypeSwitchCase',1,'p_type_switch_case','parser.py',1059),
  ('TypeList -> Type TypeRep','TypeList',2,'p_type_list','parser.py',1069),
  ('TypeRep -> TypeRep COMMA Type','TypeRep',3,'p_type_rep','parser.py',1074),
  ('TypeRep -> epsilon','TypeRep',1,'p_type_rep','parser.py',1075),
  ('ForStmt -> FOR ConditionBlockOpt Block','ForStmt',3,'p_for','parser.py',1087),
  ('ConditionBlockOpt -> epsilon','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1093),
  ('ConditionBlockOpt -> Condition','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1094),
  ('ConditionBlockOpt -> ForClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1095),
  ('ConditionBlockOpt -> RangeClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1096),
  ('Condition -> Expression','Condition',1,'p_condition','parser.py',1104),
  ('ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt','ForClause',5,'p_forclause','parser.py',1109),
  ('ConditionOpt -> epsilon','ConditionOpt',1,'p_conditionopt','parser.py',1118),
  ('ConditionOpt -> Condition','ConditionOpt',1,'p_conditionopt','parser.py',1119),
  ('RangeClause -> ExpressionIdentListOpt RANGE Expression','RangeClause',3,'p_rageclause','parser.py',1127),
  ('ExpressionIdentListOpt -> epsilon','ExpressionIdentListOpt',1,'p_expression_ident_listopt','parser.py',1133),
  ('ExpressionIdentListOpt -> ExpressionIdentifier','ExpressionIdentListOpt',1,'p_expression_ident_listopt','parser.py',1134),
  ('ExpressionIdentifier -> ExpressionList ASSIGN','ExpressionIdentifier',2,'p_expressionidentifier','parser.py',1142),
  ('ReturnStmt -> RETURN ExpressionListPureOpt','ReturnStmt',2,'p_return','parser.py',1148),
  ('ExpressionListPureOpt -> ExpressionList','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',1154),
  ('ExpressionListPureOpt -> epsilon','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',1155),
  ('BreakStmt -> BREAK LabelOpt','BreakStmt',2,'p_break','parser.py',1163),
  ('ContinueStmt -> CONTINUE LabelOpt','ContinueStmt',2,'p_continue','parser.py',1169),
  ('LabelOpt -> Label','LabelOpt',1,'p_labelopt','parser.py',1175),
  ('LabelOpt -> epsilon','LabelOpt',1,'p_labelopt','parser.py',1176),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_goto','parser.py',1184),
  ('SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep','SourceFile',4,'p_source_file','parser.py',1192),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','parser.py',1198),
  ('ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON','ImportDeclRep',3,'p_import_decl_rep','parser.py',1199),
  ('TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON','TopLevelDeclRep',3,'p_toplevel_decl_rep','parser.py',1209),
  ('TopLevelDeclRep -> epsilon','TopLevelDeclRep',1,'p_toplevel_decl_rep','parser.py',1210),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_package_clause','parser.py',1222),
  ('PackageName -> IDENT','PackageName',1,'p_package_name','parser.py',1228),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser.py',1236),
  ('ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN','ImportDecl',4,'p_import_decl','parser.py',1237),
  ('ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON','ImportSpecRep',3,'p_import_spec_rep','parser.py',1250),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','parser.py',1251),
  ('ImportSpec -> PackageNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','parser.py',1265),
  ('PackageNameDotOpt -> PERIOD','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1270),
  ('PackageNameDotOpt -> PackageName','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1271),
  ('PackageNameDotOpt -> epsilon','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1272),
  ('ImportPath -> STRING_LITERAL','ImportPath',1,'p_import_path','parser.py',1283),
  ('epsilon -> <empty>','epsilon',0,'p_empty','parser.py',1290),
]
